{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///amazon-cognito-identity.min.js","webpack:///webpack/bootstrap 32c4d0703a3baacba887","webpack:///./enhance.js","webpack:///external \"sjcl\"","webpack:///external \"fs\"","webpack:///./src/AuthenticationHelper.js","webpack:///./src/CognitoAccessToken.js","webpack:///./src/CognitoIdToken.js","webpack:///./src/CognitoRefreshToken.js","webpack:///./src/CognitoUser.js","webpack:///./src/CognitoUserAttribute.js","webpack:///./src/CognitoUserSession.js","webpack:///./src/DateHelper.js","webpack:///./~/node-localstorage/LocalStorage.js","webpack:///./~/node-localstorage/~/write-file-atomic/~/graceful-fs/fs.js","webpack:///./~/node-localstorage/~/write-file-atomic/~/slide/lib/bind-actor.js","webpack:///external \"util\"","webpack:///external {\"root\":[\"AWSCognito\",\"CognitoIdentityServiceProvider\"],\"commonjs2\":\"aws-sdk/clients/cognitoidentityserviceprovider\",\"commonjs\":\"aws-sdk/clients/cognitoidentityserviceprovider\",\"amd\":\"aws-sdk/clients/cognitoidentityserviceprovider\"}","webpack:///external {\"root\":[],\"commonjs2\":\"jsbn\",\"commonjs\":\"jsbn\",\"amd\":\"jsbn\"}","webpack:///./src/AuthenticationDetails.js","webpack:///./src/CognitoUserPool.js","webpack:///./~/node-localstorage/~/write-file-atomic/index.js","webpack:///./~/node-localstorage/~/write-file-atomic/~/graceful-fs/graceful-fs.js","webpack:///./~/node-localstorage/~/write-file-atomic/~/graceful-fs/legacy-streams.js","webpack:///./~/node-localstorage/~/write-file-atomic/~/graceful-fs/polyfills.js","webpack:///./~/node-localstorage/~/write-file-atomic/~/imurmurhash/imurmurhash.js","webpack:///./~/node-localstorage/~/write-file-atomic/~/slide/lib/async-map.js","webpack:///./~/node-localstorage/~/write-file-atomic/~/slide/lib/chain.js","webpack:///./~/node-localstorage/~/write-file-atomic/~/slide/lib/slide.js","webpack:///external \"assert\"","webpack:///external \"constants\"","webpack:///external \"events\"","webpack:///external \"path\"","webpack:///external \"stream\""],"names":["root","factory","exports","module","require","define","amd","AmazonCognitoIdentity","sjcl","fs","util","AWSCognito","CognitoIdentityServiceProvider","assert","constants","events","path","stream","this","__WEBPACK_EXTERNAL_MODULE_1__","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_14__","__WEBPACK_EXTERNAL_MODULE_15__","__WEBPACK_EXTERNAL_MODULE_16__","__WEBPACK_EXTERNAL_MODULE_28__","__WEBPACK_EXTERNAL_MODULE_29__","__WEBPACK_EXTERNAL_MODULE_30__","__WEBPACK_EXTERNAL_MODULE_31__","__WEBPACK_EXTERNAL_MODULE_32__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","_interopRequireDefault","default","defineProperty","value","_src","keys","forEach","enumerable","get","_cognitoidentityserviceprovider","_cognitoidentityserviceprovider2","enhancements","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","configurable","writable","protoProps","staticProps","_sjcl","_jsbn","initN","newPasswordRequiredChallengeUserAttributePrefix","AuthenticationHelper","PoolName","paranoia","N","BigInteger","g","k","hexHash","toString","smallAValue","generateRandomSmallA","largeAValue","calculateA","infoBits","codec","utf8String","toBits","poolName","words","random","randomWords","hexRandom","hex","fromBits","randomBigInt","smallABigInt","mod","stringRandom","base64","randomPassword","SaltToHashDevices","verifierDevices","deviceGroupKey","username","generateRandomString","combinedString","hashedString","hash","saltDevices","firstCharSalt","indexOf","verifierDevicesNotPadded","modPow","firstCharVerifierDevices","a","A","Error","B","firstCharA","firstCharB","AToHash","BToHash","UHexHash","finalU","bitArray","hashHex","sha256","Array","join","hexStr","ikm","salt","mac","misc","hmac","update","prk","digest","infoBitsUpdate","concat","String","fromCharCode","clamp","password","serverBValue","equals","UValue","calculateU","usernamePassword","usernamePasswordHash","SaltToHash","xValue","gModPowXN","intValue2","subtract","multiply","sValue","add","SToHash","firstCharS","UValueToHash","firstCharU","hkdf","computehkdf","CognitoAccessToken","_ref","arguments","undefined","AccessToken","jwtToken","payload","split","expiration","JSON","parse","base64url","exp","CognitoIdToken","IdToken","CognitoRefreshToken","RefreshToken","token","_nodeLocalstorage","_AuthenticationHelper","_AuthenticationHelper2","_CognitoAccessToken","_CognitoAccessToken2","_CognitoIdToken","_CognitoIdToken2","_CognitoRefreshToken","_CognitoRefreshToken2","_CognitoUserSession","_CognitoUserSession2","_DateHelper","_DateHelper2","_CognitoUserAttribute","_CognitoUserAttribute2","CognitoUser","data","Username","Pool","pool","Session","client","signInUserSession","authenticationFlowType","localStorage","LocalStorage","authDetails","callback","_this","authenticationHelper","getUserPoolId","getParanoia","dateHelper","authParameters","deviceKey","DEVICE_KEY","USERNAME","SRP_A","getLargeAValue","CHALLENGE_NAME","makeUnauthenticatedRequest","AuthFlow","ClientId","getClientId","AuthParameters","ClientMetadata","getValidationData","err","onFailure","challengeParameters","ChallengeParameters","USER_ID_FOR_SRP","SRP_B","SALT","getCachedDeviceKeyAndPassword","getPasswordAuthenticationKey","getPassword","secretBlockBits","SECRET_BLOCK","dateNow","getNowString","signature","signatureString","challengeResponses","PASSWORD_CLAIM_SECRET_BLOCK","TIMESTAMP","PASSWORD_CLAIM_SIGNATURE","ChallengeName","ChallengeResponses","errAuthenticate","dataAuthenticate","challengeName","userAttributes","rawRequiredAttributes","requiredAttributes","userAttributesPrefix","getNewPasswordRequiredChallengeUserAttributePrefix","substr","newPasswordRequired","authenticateUserInternal","_this2","mfaRequired","customChallenge","getDeviceResponse","getCognitoUserSession","AuthenticationResult","cacheTokens","newDeviceMetadata","NewDeviceMetadata","onSuccess","generateHashDevice","DeviceGroupKey","DeviceKey","deviceSecretVerifierConfig","Salt","getSaltDevices","PasswordVerifier","getVerifierDevices","getRandomPassword","getAccessToken","getJwtToken","DeviceSecretVerifierConfig","DeviceName","navigator","userAgent","errConfirm","dataConfirm","cacheDeviceKeyAndPassword","UserConfirmationNecessary","newPassword","requiredAttributeData","_this3","finalUserAttributes","NEW_PASSWORD","_this4","confirmationCode","forceAliasCreation","ConfirmationCode","ForceAliasCreation","answerChallenge","_this5","ANSWER","_this6","SMS_MFA_CODE","oldUserPassword","newUserPassword","isValid","PreviousPassword","ProposedPassword","mfaOptions","mfaEnabled","DeliveryMedium","AttributeName","push","MFAOptions","attributes","UserAttributes","userData","attributeList","attribute","Name","Value","userAttribute","UserAttributeNames","keyPrefix","idTokenKey","accessTokenKey","refreshTokenKey","storage","getItem","idToken","accessToken","refreshToken","sessionData","cachedSession","getToken","refreshSession","_this7","REFRESH_TOKEN","lastUserKey","deviceKeyKey","authResult","authenticationResult","setItem","getIdToken","getRefreshToken","randomPasswordKey","deviceGroupKeyKey","removeItem","inputVerificationCode","Password","attributeName","Code","_this8","deviceGroupkey","clearCachedDeviceKeyAndPassword","DeviceRememberedStatus","limit","paginationToken","Limit","PaginationToken","_this9","clearCachedTokens","CognitoUserAttribute","name","stringify","CognitoUserSession","now","Math","floor","Date","getExpiration","monthNames","weekNames","DateHelper","weekDay","getUTCDay","month","getUTCMonth","day","getUTCDate","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","year","getUTCFullYear","JSONStorage","KEY_FOR_EMPTY_STRING","MetaKey","QUOTA_EXCEEDED_ERR","StorageEvent","_emptyDirectory","_escapeKey","_rm","createMap","writeSync","extend","child","parent","ctor","constructor","hasProp","__super__","sync","len","ref","results","readdirSync","statSync","isDirectory","rmdirSync","unlinkSync","newKey","superClass","message","captureStackTrace","key1","oldValue1","newValue1","url","storageArea","oldValue","newValue","index1","index","Map","create","_location","quota","resolve","instanceMap","_bytesInUse","_keys","_metaKeyMap","_eventUrl","process","pid","_init","_QUOTA_EXCEEDED_ERR","_MetaKey","_decodedKey","stat","decodeURIComponent","_getStat","size","error","mkdirSync","encodedKey","evnt","existsBeforeSet","filename","hasListeners","metaKey","oldLength","valueString","valueStringLength","EventEmitter","listenerCount","encodeURIComponent","emit","readFileSync","meta","v","splice","n","clear","_getBytesInUse","_deleteLocation","apply","clone","copy","__proto__","getOwnPropertyNames","getOwnPropertyDescriptor","bindActor","fn","args","slice","shift","cb","AuthenticationDetails","ValidationData","validationData","_CognitoUser","_CognitoUser2","CognitoUserPool","UserPoolId","Paranoia","test","region","userPoolId","clientId","apiVersion","cognitoUser","returnData","user","userConfirmed","UserConfirmed","lastAuthUser","_AuthenticationDetails","_CognitoUserPool","__filename","murmurhex","MurmurHash3","ii","result","chain","assign","_extend","invocations","getTmpname","options","thenWriteFile","writeFile","tmpfile","encoding","mode","chmod","chown","uid","gid","rename","unlink","Function","stats","getuid","ex","writeFileSync","chownSync","chmodSync","renameSync","e","noop","patch","readFile","go$readFile","fs$readFile","code","retry","enqueue","go$writeFile","fs$writeFile","appendFile","go$appendFile","fs$appendFile","readdir","go$readdir$cb","files","sort","go$readdir","fs$readdir","ReadStream","fs$ReadStream","ReadStream$open","that","open","flags","fd","autoClose","destroy","read","WriteStream","fs$WriteStream","WriteStream$open","createReadStream","createWriteStream","go$open","fs$open","polyfills","gracefulify","FileReadStream","FileWriteStream","version","legStreams","legacy","elem","debug","queue","debuglog","env","NODE_DEBUG","format","console","on","equal","TEST_GRACEFUL_FS_GLOBAL_PATCH","close","fs$close","closeSync","fs$closeSync","rval","Stream","self","readable","paused","bufferSize","setEncoding","start","end","Infinity","pos","nextTick","_read","bytesWritten","busy","_queue","_open","flush","match","patchLchmod","lutimes","patchLutimes","chownFix","fchown","lchown","chmodFix","fchmod","lchmod","chownFixSync","fchownSync","lchownSync","chmodFixSync","fchmodSync","lchmodSync","statFix","fstat","lstat","statFixSync","fstatSync","lstatSync","platform","fs$rename","from","to","CB","er","fs$read","buffer","offset","position","callback_","eagCounter","_","__","readSync","fs$readSync","O_WRONLY","O_SYMLINK","err2","ret","openSync","threw","at","mt","futimes","er2","lutimesSync","futimesSync","_a","_b","_c","orig","chownErOk","nonroot","origCwd","cwd","chdir","d","seed","cache","reset","h1","k1","top","rem","charCodeAt","asyncMap","errState","argLen","list","l","newList","ar","steps","cb_","pop","isArray","things","res","LOOP","map","first","last"],"mappings":"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","file":"amazon-cognito-identity.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"sjcl\"), require(\"fs\"), require(\"util\"), require(\"aws-sdk/clients/cognitoidentityserviceprovider\"), require(\"jsbn\"), require(\"assert\"), require(\"constants\"), require(\"events\"), require(\"path\"), require(\"stream\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"sjcl\", \"fs\", \"util\", \"aws-sdk/clients/cognitoidentityserviceprovider\", \"jsbn\", \"assert\", \"constants\", \"events\", \"path\", \"stream\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AmazonCognitoIdentity\"] = factory(require(\"sjcl\"), require(\"fs\"), require(\"util\"), require(\"aws-sdk/clients/cognitoidentityserviceprovider\"), require(\"jsbn\"), require(\"assert\"), require(\"constants\"), require(\"events\"), require(\"path\"), require(\"stream\"));\n\telse\n\t\troot[\"AmazonCognitoIdentity\"] = factory(root[\"sjcl\"], root[\"fs\"], root[\"util\"], root[\"AWSCognito\"][\"CognitoIdentityServiceProvider\"], root, root[\"assert\"], root[\"constants\"], root[\"events\"], root[\"path\"], root[\"stream\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_14__, __WEBPACK_EXTERNAL_MODULE_15__, __WEBPACK_EXTERNAL_MODULE_16__, __WEBPACK_EXTERNAL_MODULE_28__, __WEBPACK_EXTERNAL_MODULE_29__, __WEBPACK_EXTERNAL_MODULE_30__, __WEBPACK_EXTERNAL_MODULE_31__, __WEBPACK_EXTERNAL_MODULE_32__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"sjcl\"), require(\"fs\"), require(\"util\"), require(\"aws-sdk/clients/cognitoidentityserviceprovider\"), require(\"jsbn\"), require(\"assert\"), require(\"constants\"), require(\"events\"), require(\"path\"), require(\"stream\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"sjcl\", \"fs\", \"util\", \"aws-sdk/clients/cognitoidentityserviceprovider\", \"jsbn\", \"assert\", \"constants\", \"events\", \"path\", \"stream\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AmazonCognitoIdentity\"] = factory(require(\"sjcl\"), require(\"fs\"), require(\"util\"), require(\"aws-sdk/clients/cognitoidentityserviceprovider\"), require(\"jsbn\"), require(\"assert\"), require(\"constants\"), require(\"events\"), require(\"path\"), require(\"stream\"));\n\telse\n\t\troot[\"AmazonCognitoIdentity\"] = factory(root[\"sjcl\"], root[\"fs\"], root[\"util\"], root[\"AWSCognito\"][\"CognitoIdentityServiceProvider\"], root, root[\"assert\"], root[\"constants\"], root[\"events\"], root[\"path\"], root[\"stream\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_14__, __WEBPACK_EXTERNAL_MODULE_15__, __WEBPACK_EXTERNAL_MODULE_16__, __WEBPACK_EXTERNAL_MODULE_28__, __WEBPACK_EXTERNAL_MODULE_29__, __WEBPACK_EXTERNAL_MODULE_30__, __WEBPACK_EXTERNAL_MODULE_31__, __WEBPACK_EXTERNAL_MODULE_32__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _src = __webpack_require__(19);\n\t\n\tObject.keys(_src).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _src[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _cognitoidentityserviceprovider = __webpack_require__(15);\n\t\n\tvar _cognitoidentityserviceprovider2 = _interopRequireDefault(_cognitoidentityserviceprovider);\n\t\n\tvar enhancements = _interopRequireWildcard(_src);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tObject.keys(enhancements).forEach(function (key) {\n\t  _cognitoidentityserviceprovider2.default[key] = enhancements[key];\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"fs\");\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\n\topyright 2016 Amazon.com,\n\tnc. or its affiliates. All Rights Reserved.\n\tn\ticensed under the Amazon Software License (the \"License\").\n\tou may not use this file except in compliance with the\n\ticense. A copy of the License is located at\n\tn\thttp://aws.amazon.com/asl/\n\tn\tor in the \"license\" file accompanying this file. This file is\n\tdistributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n\texpress or implied. See the License\n\tfor the specific language governing permissions and\n\tlimitations under the License.\n\tn\t\n\tvar _sjcl = __webpack_require__(1);\n\t\n\tvar sjcl = _interopRequireWildcard(_sjcl);\n\t\n\tvar _jsbn = __webpack_require__(16);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar initN = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1' + '29024E088A67CC74020BBEA63B139B22514A08798E3404DD' + 'EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245' + 'E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED' + 'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3D' + 'C2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F' + '83655D23DCA3AD961C62F356208552BB9ED529077096966D' + '670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B' + 'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9' + 'DE2BCBF6955817183995497CEA956AE515D2261898FA0510' + '15728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64' + 'ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7' + 'ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6B' + 'F12FFA06D98A0864D87602733EC86A64521F2B18177B200C' + 'BBE117577A615D6C770988C0BAD946E208E24FA074E5AB31' + '43DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF';\n\t\n\tvar newPasswordRequiredChallengeUserAttributePrefix = 'userAttributes.';\n\t\n\t/** @class */\n\t\n\tvar AuthenticationHelper = function () {\n\t  /**\n\t   * Constructs a new AuthenticationHelper object\n\t   * @param {string} PoolName Cognito user pool name.\n\t   * @param {int} paranoia Random number generation paranoia level.\n\t   */\n\t  function AuthenticationHelper(PoolName, paranoia) {\n\t    _classCallCheck(this, AuthenticationHelper);\n\t\n\t    this.N = new _jsbn.BigInteger(initN, 16);\n\t    this.g = new _jsbn.BigInteger('2');\n\t    this.k = new _jsbn.BigInteger(this.hexHash('00' + this.N.toString(16) + '0' + this.g.toString(16)), 16);\n\t\n\t    this.paranoia = paranoia;\n\t\n\t    this.smallAValue = this.generateRandomSmallA();\n\t    this.largeAValue = this.calculateA(this.smallAValue);\n\t\n\t    this.infoBits = sjcl.codec.utf8String.toBits('Caldera Derived Key');\n\t\n\t    this.poolName = PoolName;\n\t  }\n\t\n\t  /**\n\t   * @returns {BigInteger} small A, a random number\n\t   */\n\t\n\t\n\t  _createClass(AuthenticationHelper, [{\n\t    key: 'getSmallAValue',\n\t    value: function getSmallAValue() {\n\t      return this.smallAValue;\n\t    }\n\t\n\t    /**\n\t     * @returns {BigInteger} large A, a value generated from small A\n\t     */\n\t\n\t  }, {\n\t    key: 'getLargeAValue',\n\t    value: function getLargeAValue() {\n\t      return this.largeAValue;\n\t    }\n\t\n\t    /**\n\t     * helper function to generate a random big integer\n\t     * @returns {BigInteger} a random value.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: 'generateRandomSmallA',\n\t    value: function generateRandomSmallA() {\n\t      var words = sjcl.random.randomWords(32, this.paranoia);\n\t      var hexRandom = sjcl.codec.hex.fromBits(words);\n\t\n\t      var randomBigInt = new _jsbn.BigInteger(hexRandom, 16);\n\t      var smallABigInt = randomBigInt.mod(this.N);\n\t\n\t      return smallABigInt;\n\t    }\n\t\n\t    /**\n\t     * helper function to generate a random string\n\t     * @returns {string} a random value.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: 'generateRandomString',\n\t    value: function generateRandomString() {\n\t      var words = sjcl.random.randomWords(10, this.paranoia);\n\t      var stringRandom = sjcl.codec.base64.fromBits(words);\n\t\n\t      return stringRandom;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} Generated random value included in password hash.\n\t     */\n\t\n\t  }, {\n\t    key: 'getRandomPassword',\n\t    value: function getRandomPassword() {\n\t      return this.randomPassword;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} Generated random value included in devices hash.\n\t     */\n\t\n\t  }, {\n\t    key: 'getSaltDevices',\n\t    value: function getSaltDevices() {\n\t      return this.SaltToHashDevices;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} Value used to verify devices.\n\t     */\n\t\n\t  }, {\n\t    key: 'getVerifierDevices',\n\t    value: function getVerifierDevices() {\n\t      return this.verifierDevices;\n\t    }\n\t\n\t    /**\n\t     * Generate salts and compute verifier.\n\t     * @param {string} deviceGroupKey Devices to generate verifier for.\n\t     * @param {string} username User to generate verifier for.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'generateHashDevice',\n\t    value: function generateHashDevice(deviceGroupKey, username) {\n\t      this.randomPassword = this.generateRandomString();\n\t      var combinedString = '' + deviceGroupKey + username + ':' + this.randomPassword;\n\t      var hashedString = this.hash(combinedString);\n\t\n\t      var words = sjcl.random.randomWords(4, this.paranoia);\n\t      var hexRandom = sjcl.codec.hex.fromBits(words);\n\t      var saltDevices = new _jsbn.BigInteger(hexRandom, 16);\n\t      var firstCharSalt = saltDevices.toString(16)[0];\n\t      this.SaltToHashDevices = saltDevices.toString(16);\n\t\n\t      if (saltDevices.toString(16).length % 2 === 1) {\n\t        this.SaltToHashDevices = '0' + this.SaltToHashDevices;\n\t      } else if ('89ABCDEFabcdef'.indexOf(firstCharSalt) !== -1) {\n\t        this.SaltToHashDevices = '00' + this.SaltToHashDevices;\n\t      }\n\t      var verifierDevicesNotPadded = this.g.modPow(new _jsbn.BigInteger(this.hexHash(this.SaltToHashDevices + hashedString), 16), this.N);\n\t\n\t      var firstCharVerifierDevices = verifierDevicesNotPadded.toString(16)[0];\n\t      this.verifierDevices = verifierDevicesNotPadded.toString(16);\n\t\n\t      if (verifierDevicesNotPadded.toString(16).length % 2 === 1) {\n\t        this.verifierDevices = '0' + this.verifierDevices;\n\t      } else if ('89ABCDEFabcdef'.indexOf(firstCharVerifierDevices) !== -1) {\n\t        this.verifierDevices = '00' + this.verifierDevices;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Calculate the client's public value A = g^a%N\n\t     * with the generated random number a\n\t     * @param {BigInteger} a Randomly generated small A.\n\t     * @returns {BigInteger} Computed large A.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: 'calculateA',\n\t    value: function calculateA(a) {\n\t      var A = this.g.modPow(a, this.N);\n\t\n\t      if (A.mod(this.N).toString() === '0') {\n\t        throw new Error('Illegal paramater. A mod N cannot be 0.');\n\t      }\n\t      return A;\n\t    }\n\t\n\t    /**\n\t     * Calculate the client's value U which is the hash of A and B\n\t     * @param {BigInteger} A Large A value.\n\t     * @param {BigInteger} B Server B value.\n\t     * @returns {BigInteger} Computed U value.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: 'calculateU',\n\t    value: function calculateU(A, B) {\n\t      var firstCharA = A.toString(16)[0];\n\t      var firstCharB = B.toString(16)[0];\n\t      var AToHash = A.toString(16);\n\t      var BToHash = B.toString(16);\n\t\n\t      if (A.toString(16).length % 2 === 1) {\n\t        AToHash = '0' + AToHash;\n\t      } else if ('89ABCDEFabcdef'.indexOf(firstCharA) !== -1) {\n\t        AToHash = '00' + AToHash;\n\t      }\n\t\n\t      if (B.toString(16).length % 2 === 1) {\n\t        BToHash = '0' + BToHash;\n\t      } else if ('89ABCDEFabcdef'.indexOf(firstCharB) !== -1) {\n\t        BToHash = '00' + BToHash;\n\t      }\n\t\n\t      this.UHexHash = this.hexHash(AToHash + BToHash);\n\t      var finalU = new _jsbn.BigInteger(this.UHexHash, 16);\n\t\n\t      return finalU;\n\t    }\n\t\n\t    /**\n\t     * Calculate a hash from a bitArray\n\t     * @param {sjcl.bitArray} bitArray Value to hash.\n\t     * @returns {String} Hex-encoded hash.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: 'hash',\n\t    value: function hash(bitArray) {\n\t      var hashHex = sjcl.codec.hex.fromBits(sjcl.hash.sha256.hash(bitArray));\n\t      return new Array(64 - hashHex.length).join('0') + hashHex;\n\t    }\n\t\n\t    /**\n\t     * Calculate a hash from a hex string\n\t     * @param {String} hexStr Value to hash.\n\t     * @returns {String} Hex-encoded hash.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: 'hexHash',\n\t    value: function hexHash(hexStr) {\n\t      var hashHex = sjcl.codec.hex.fromBits(sjcl.hash.sha256.hash(sjcl.codec.hex.toBits(hexStr)));\n\t      return new Array(64 - hashHex.length).join('0') + hashHex;\n\t    }\n\t\n\t    /**\n\t     * Standard hkdf algorithm\n\t     * @param {sjcl.bitArray} ikm Input key material.\n\t     * @param {sjcl.bitArray} salt Salt value.\n\t     * @returns {sjcl.bitArray} Strong key material.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: 'computehkdf',\n\t    value: function computehkdf(ikm, salt) {\n\t      var mac = new sjcl.misc.hmac(salt, sjcl.hash.sha256);\n\t      mac.update(ikm);\n\t      var prk = mac.digest();\n\t      var hmac = new sjcl.misc.hmac(prk, sjcl.hash.sha256);\n\t      var infoBitsUpdate = sjcl.bitArray.concat(this.infoBits, sjcl.codec.utf8String.toBits(String.fromCharCode(1)));\n\t      hmac.update(infoBitsUpdate);\n\t\n\t      return sjcl.bitArray.clamp(hmac.digest(), 128);\n\t    }\n\t\n\t    /**\n\t     * Calculates the final hkdf based on computed S value, and computed U value and the key\n\t     * @param {String} username Username.\n\t     * @param {String} password Password.\n\t     * @param {BigInteger} serverBValue Server B value.\n\t     * @param {BigInteger} salt Generated salt.\n\t     * @returns {sjcl.bitArray} Computed HKDF value.\n\t     */\n\t\n\t  }, {\n\t    key: 'getPasswordAuthenticationKey',\n\t    value: function getPasswordAuthenticationKey(username, password, serverBValue, salt) {\n\t      if (serverBValue.mod(this.N).equals(new _jsbn.BigInteger('0', 16))) {\n\t        throw new Error('B cannot be zero.');\n\t      }\n\t\n\t      this.UValue = this.calculateU(this.largeAValue, serverBValue);\n\t\n\t      if (this.UValue.equals(new _jsbn.BigInteger('0', 16))) {\n\t        throw new Error('U cannot be zero.');\n\t      }\n\t\n\t      var usernamePassword = '' + this.poolName + username + ':' + password;\n\t      var usernamePasswordHash = this.hash(usernamePassword);\n\t\n\t      var firstCharSalt = salt.toString(16)[0];\n\t      var SaltToHash = salt.toString(16);\n\t\n\t      if (salt.toString(16).length % 2 === 1) {\n\t        SaltToHash = '0' + SaltToHash;\n\t      } else if ('89ABCDEFabcdef'.indexOf(firstCharSalt) !== -1) {\n\t        SaltToHash = '00' + SaltToHash;\n\t      }\n\t\n\t      var xValue = new _jsbn.BigInteger(this.hexHash(SaltToHash + usernamePasswordHash), 16);\n\t\n\t      var gModPowXN = this.g.modPow(xValue, this.N);\n\t      var intValue2 = serverBValue.subtract(this.k.multiply(gModPowXN));\n\t      var sValue = intValue2.modPow(this.smallAValue.add(this.UValue.multiply(xValue)), this.N).mod(this.N);\n\t\n\t      var SToHash = sValue.toString(16);\n\t      var firstCharS = sValue.toString(16)[0];\n\t\n\t      if (sValue.toString(16).length % 2 === 1) {\n\t        SToHash = '0' + SToHash;\n\t      } else if ('89ABCDEFabcdef'.indexOf(firstCharS) !== -1) {\n\t        SToHash = '00' + SToHash;\n\t      }\n\t\n\t      var UValueToHash = this.UHexHash;\n\t      var firstCharU = this.UHexHash[0];\n\t\n\t      if (this.UHexHash.length % 2 === 1) {\n\t        UValueToHash = '0' + UValueToHash;\n\t      } else if (this.UHexHash.length % 2 === 0 && '89ABCDEFabcdef'.indexOf(firstCharU) !== -1) {\n\t        UValueToHash = '00' + UValueToHash;\n\t      }\n\t\n\t      var hkdf = this.computehkdf(sjcl.codec.hex.toBits(SToHash), sjcl.codec.hex.toBits(UValueToHash));\n\t\n\t      return hkdf;\n\t    }\n\t\n\t    /**\n\t    * Return constant newPasswordRequiredChallengeUserAttributePrefix\n\t    * @return {newPasswordRequiredChallengeUserAttributePrefix} constant prefix value\n\t    */\n\t\n\t  }, {\n\t    key: 'getNewPasswordRequiredChallengeUserAttributePrefix',\n\t    value: function getNewPasswordRequiredChallengeUserAttributePrefix() {\n\t      return newPasswordRequiredChallengeUserAttributePrefix;\n\t    }\n\t  }]);\n\t\n\t  return AuthenticationHelper;\n\t}();\n\t\n\texports.default = AuthenticationHelper;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\n\topyright 2016 Amazon.com,\n\tnc. or its affiliates. All Rights Reserved.\n\tn\ticensed under the Amazon Software License (the \"License\").\n\tou may not use this file except in compliance with the\n\ticense. A copy of the License is located at\n\tn\thttp://aws.amazon.com/asl/\n\tn\tor in the \"license\" file accompanying this file. This file is\n\tdistributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n\texpress or implied. See the License\n\tfor the specific language governing permissions and\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * limitations under the License.\n\tn\t\n\tvar _sjcl = __webpack_require__(1);\n\t\n\tvar sjcl = _interopRequireWildcard(_sjcl);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** @class */\n\tvar CognitoAccessToken = function () {\n\t  /**\n\t   * Constructs a new CognitoAccessToken object\n\t   * @param {string=} AccessToken The JWT access token.\n\t   */\n\t  function CognitoAccessToken() {\n\t    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    var AccessToken = _ref.AccessToken;\n\t\n\t    _classCallCheck(this, CognitoAccessToken);\n\t\n\t    // Assign object\n\t    this.jwtToken = AccessToken || '';\n\t  }\n\t\n\t  /**\n\t   * @returns {string} the record's token.\n\t   */\n\t\n\t\n\t  _createClass(CognitoAccessToken, [{\n\t    key: 'getJwtToken',\n\t    value: function getJwtToken() {\n\t      return this.jwtToken;\n\t    }\n\t\n\t    /**\n\t     * @returns {int} the token's expiration (exp member).\n\t     */\n\t\n\t  }, {\n\t    key: 'getExpiration',\n\t    value: function getExpiration() {\n\t      var payload = this.jwtToken.split('.')[1];\n\t      var expiration = JSON.parse(sjcl.codec.utf8String.fromBits(sjcl.codec.base64url.toBits(payload)));\n\t      return expiration.exp;\n\t    }\n\t  }]);\n\t\n\t  return CognitoAccessToken;\n\t}();\n\t\n\texports.default = CognitoAccessToken;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\n\topyright 2016 Amazon.com,\n\tnc. or its affiliates. All Rights Reserved.\n\tn\ticensed under the Amazon Software License (the \"License\").\n\tou may not use this file except in compliance with the\n\ticense. A copy of the License is located at\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *\n\thttp://aws.amazon.com/asl/\n\tn\tor in the \"license\" file accompanying this file. This file is\n\tdistributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n\texpress or implied. See the License\n\tfor the specific language governing permissions and\n\tlimitations under the License.\n\tn\t\n\tvar _sjcl = __webpack_require__(1);\n\t\n\tvar sjcl = _interopRequireWildcard(_sjcl);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** @class */\n\tvar CognitoIdToken = function () {\n\t  /**\n\t   * Constructs a new CognitoIdToken object\n\t   * @param {string=} IdToken The JWT Id token\n\t   */\n\t  function CognitoIdToken() {\n\t    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    var IdToken = _ref.IdToken;\n\t\n\t    _classCallCheck(this, CognitoIdToken);\n\t\n\t    // Assign object\n\t    this.jwtToken = IdToken || '';\n\t  }\n\t\n\t  /**\n\t   * @returns {string} the record's token.\n\t   */\n\t\n\t\n\t  _createClass(CognitoIdToken, [{\n\t    key: 'getJwtToken',\n\t    value: function getJwtToken() {\n\t      return this.jwtToken;\n\t    }\n\t\n\t    /**\n\t     * @returns {int} the token's expiration (exp member).\n\t     */\n\t\n\t  }, {\n\t    key: 'getExpiration',\n\t    value: function getExpiration() {\n\t      var payload = this.jwtToken.split('.')[1];\n\t      var expiration = JSON.parse(sjcl.codec.utf8String.fromBits(sjcl.codec.base64url.toBits(payload)));\n\t      return expiration.exp;\n\t    }\n\t  }]);\n\t\n\t  return CognitoIdToken;\n\t}();\n\t\n\texports.default = CognitoIdToken;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\n\t * Copyright 2016 Amazon.com,\n\t * Inc. or its affiliates. All Rights Reserved.\n\t *\n\t * Licensed under the Amazon Software License (the \"License\").\n\t * You may not use this file except in compliance with the\n\t * License. A copy of the License is located at\n\t *\n\t *     http://aws.amazon.com/asl/\n\t *\n\t * or in the \"license\" file accompanying this file. This file is\n\t * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n\t * CONDITIONS OF ANY KIND, express or implied. See the License\n\t * for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t/** @class */\n\tvar CognitoRefreshToken = function () {\n\t  /**\n\t   * Constructs a new CognitoRefreshToken object\n\t   * @param {string=} RefreshToken The JWT refresh token.\n\t   */\n\t  function CognitoRefreshToken() {\n\t    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    var RefreshToken = _ref.RefreshToken;\n\t\n\t    _classCallCheck(this, CognitoRefreshToken);\n\t\n\t    // Assign object\n\t    this.token = RefreshToken || '';\n\t  }\n\t\n\t  /**\n\t   * @returns {string} the record's token.\n\t   */\n\t\n\t\n\t  _createClass(CognitoRefreshToken, [{\n\t    key: 'getToken',\n\t    value: function getToken() {\n\t      return this.token;\n\t    }\n\t  }]);\n\t\n\t  return CognitoRefreshToken;\n\t}();\n\t\n\texports.default = CognitoRefreshToken;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\n\topyright 2016 Amazon.com,\n\tnc. or its affiliates. All Rights Reserved.\n\tn\ticensed under the Amazon Software License (the \"License\").\n\tou may not use this file except in compliance with the\n\ticense. A copy of the License is located at\n\tn\thttp://aws.amazon.com/asl/\n\tn\tor in the \"license\" file accompanying this file. This file is\n\tdistributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n\texpress or implied. See the License\n\tfor the specific language governing permissions and\n\tlimitations under the License.\n\tn\t\n\tvar _sjcl = __webpack_require__(1);\n\t\n\tvar sjcl = _interopRequireWildcard(_sjcl);\n\t\n\tvar _jsbn = __webpack_require__(16);\n\t\n\tvar _nodeLocalstorage = __webpack_require__(11);\n\t\n\tvar _AuthenticationHelper = __webpack_require__(3);\n\t\n\tvar _AuthenticationHelper2 = _interopRequireDefault(_AuthenticationHelper);\n\t\n\tvar _CognitoAccessToken = __webpack_require__(4);\n\t\n\tvar _CognitoAccessToken2 = _interopRequireDefault(_CognitoAccessToken);\n\t\n\tvar _CognitoIdToken = __webpack_require__(5);\n\t\n\tvar _CognitoIdToken2 = _interopRequireDefault(_CognitoIdToken);\n\t\n\tvar _CognitoRefreshToken = __webpack_require__(6);\n\t\n\tvar _CognitoRefreshToken2 = _interopRequireDefault(_CognitoRefreshToken);\n\t\n\tvar _CognitoUserSession = __webpack_require__(9);\n\t\n\tvar _CognitoUserSession2 = _interopRequireDefault(_CognitoUserSession);\n\t\n\tvar _DateHelper = __webpack_require__(10);\n\t\n\tvar _DateHelper2 = _interopRequireDefault(_DateHelper);\n\t\n\tvar _CognitoUserAttribute = __webpack_require__(8);\n\t\n\tvar _CognitoUserAttribute2 = _interopRequireDefault(_CognitoUserAttribute);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * @callback nodeCallback\n\t * @template T result\n\t * @param {*} err The operation failure reason, or null.\n\t * @param {T} result The operation result.\n\t */\n\t\n\t/**\n\t * @callback onFailure\n\t * @param {*} err Failure reason.\n\t */\n\t\n\t/**\n\t * @callback onSuccess\n\t * @template T result\n\t * @param {T} result The operation result.\n\t */\n\t\n\t/**\n\t * @callback mfaRequired\n\t * @param {*} details MFA challenge details.\n\t */\n\t\n\t/**\n\t * @callback customChallenge\n\t * @param {*} details Custom challenge details.\n\t */\n\t\n\t/**\n\t * @callback inputVerificationCode\n\t * @param {*} data Server response.\n\t */\n\t\n\t/**\n\t * @callback authSuccess\n\t * @param {CognitoUserSession} session The new session.\n\t * @param {bool=} userConfirmationNecessary User must be confirmed.\n\t */\n\t\n\t/** @class */\n\tvar CognitoUser = function () {\n\t  /**\n\t   * Constructs a new CognitoUser object\n\t   * @param {object} data Creation options\n\t   * @param {string} data.Username The user's username.\n\t   * @param {CognitoUserPool} data.Pool Pool containing the user.\n\t   */\n\t  function CognitoUser(data) {\n\t    _classCallCheck(this, CognitoUser);\n\t\n\t    if (data == null || data.Username == null || data.Pool == null) {\n\t      throw new Error('Username and pool information are required.');\n\t    }\n\t\n\t    this.username = data.Username || '';\n\t    this.pool = data.Pool;\n\t    this.Session = null;\n\t\n\t    this.client = data.Pool.client;\n\t\n\t    this.signInUserSession = null;\n\t    this.authenticationFlowType = 'USER_SRP_AUTH';\n\t    this.localStorage = new _nodeLocalstorage.LocalStorage('./.scratch');\n\t  }\n\t\n\t  /**\n\t   * @returns {CognitoUserSession} the current session for this user\n\t   */\n\t\n\t\n\t  _createClass(CognitoUser, [{\n\t    key: 'getSignInUserSession',\n\t    value: function getSignInUserSession() {\n\t      return this.signInUserSession;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} the user's username\n\t     */\n\t\n\t  }, {\n\t    key: 'getUsername',\n\t    value: function getUsername() {\n\t      return this.username;\n\t    }\n\t\n\t    /**\n\t     * @returns {String} the authentication flow type\n\t     */\n\t\n\t  }, {\n\t    key: 'getAuthenticationFlowType',\n\t    value: function getAuthenticationFlowType() {\n\t      return this.authenticationFlowType;\n\t    }\n\t\n\t    /**\n\t     * sets authentication flow type\n\t     * @param {string} authenticationFlowType New value.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setAuthenticationFlowType',\n\t    value: function setAuthenticationFlowType(authenticationFlowType) {\n\t      this.authenticationFlowType = authenticationFlowType;\n\t    }\n\t\n\t    /**\n\t     * This is used for authenticating the user. it calls the AuthenticationHelper for SRP related\n\t     * stuff\n\t     * @param {AuthenticationDetails} authDetails Contains the authentication data\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {newPasswordRequired} callback.newPasswordRequired new\n\t     *        password and any required attributes are required to continue\n\t     * @param {mfaRequired} callback.mfaRequired MFA code\n\t     *        required to continue.\n\t     * @param {customChallenge} callback.customChallenge Custom challenge\n\t     *        response required to continue.\n\t     * @param {authSuccess} callback.onSuccess Called on success with the new session.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'authenticateUser',\n\t    value: function authenticateUser(authDetails, callback) {\n\t      var _this = this;\n\t\n\t      var authenticationHelper = new _AuthenticationHelper2.default(this.pool.getUserPoolId().split('_')[1], this.pool.getParanoia());\n\t      var dateHelper = new _DateHelper2.default();\n\t\n\t      var serverBValue = void 0;\n\t      var salt = void 0;\n\t      var authParameters = {};\n\t\n\t      if (this.deviceKey != null) {\n\t        authParameters.DEVICE_KEY = this.deviceKey;\n\t      }\n\t\n\t      authParameters.USERNAME = this.username;\n\t      authParameters.SRP_A = authenticationHelper.getLargeAValue().toString(16);\n\t\n\t      if (this.authenticationFlowType === 'CUSTOM_AUTH') {\n\t        authParameters.CHALLENGE_NAME = 'SRP_A';\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('initiateAuth', {\n\t        AuthFlow: this.authenticationFlowType,\n\t        ClientId: this.pool.getClientId(),\n\t        AuthParameters: authParameters,\n\t        ClientMetadata: authDetails.getValidationData()\n\t      }, function (err, data) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t\n\t        var challengeParameters = data.ChallengeParameters;\n\t\n\t        _this.username = challengeParameters.USER_ID_FOR_SRP;\n\t        serverBValue = new _jsbn.BigInteger(challengeParameters.SRP_B, 16);\n\t        salt = new _jsbn.BigInteger(challengeParameters.SALT, 16);\n\t        _this.getCachedDeviceKeyAndPassword();\n\t\n\t        var hkdf = authenticationHelper.getPasswordAuthenticationKey(_this.username, authDetails.getPassword(), serverBValue, salt);\n\t        var secretBlockBits = sjcl.codec.base64.toBits(challengeParameters.SECRET_BLOCK);\n\t\n\t        var mac = new sjcl.misc.hmac(hkdf, sjcl.hash.sha256);\n\t        mac.update(sjcl.codec.utf8String.toBits(_this.pool.getUserPoolId().split('_')[1]));\n\t        mac.update(sjcl.codec.utf8String.toBits(_this.username));\n\t        mac.update(secretBlockBits);\n\t        var dateNow = dateHelper.getNowString();\n\t        mac.update(sjcl.codec.utf8String.toBits(dateNow));\n\t        var signature = mac.digest();\n\t        var signatureString = sjcl.codec.base64.fromBits(signature);\n\t\n\t        var challengeResponses = {};\n\t\n\t        challengeResponses.USERNAME = _this.username;\n\t        challengeResponses.PASSWORD_CLAIM_SECRET_BLOCK = challengeParameters.SECRET_BLOCK;\n\t        challengeResponses.TIMESTAMP = dateNow;\n\t        challengeResponses.PASSWORD_CLAIM_SIGNATURE = signatureString;\n\t\n\t        if (_this.deviceKey != null) {\n\t          challengeResponses.DEVICE_KEY = _this.deviceKey;\n\t        }\n\t\n\t        _this.client.makeUnauthenticatedRequest('respondToAuthChallenge', {\n\t          ChallengeName: 'PASSWORD_VERIFIER',\n\t          ClientId: _this.pool.getClientId(),\n\t          ChallengeResponses: challengeResponses,\n\t          Session: data.Session\n\t        }, function (errAuthenticate, dataAuthenticate) {\n\t          if (errAuthenticate) {\n\t            return callback.onFailure(errAuthenticate);\n\t          }\n\t\n\t          var challengeName = dataAuthenticate.ChallengeName;\n\t          if (challengeName === 'NEW_PASSWORD_REQUIRED') {\n\t            _this.Session = dataAuthenticate.Session;\n\t            var userAttributes = null;\n\t            var rawRequiredAttributes = null;\n\t            var requiredAttributes = [];\n\t            var userAttributesPrefix = authenticationHelper.getNewPasswordRequiredChallengeUserAttributePrefix();\n\t\n\t            if (dataAuthenticate.ChallengeParameters) {\n\t              userAttributes = JSON.parse(dataAuthenticate.ChallengeParameters.userAttributes);\n\t              rawRequiredAttributes = JSON.parse(dataAuthenticate.ChallengeParameters.requiredAttributes);\n\t            }\n\t\n\t            if (rawRequiredAttributes) {\n\t              for (var i = 0; i < rawRequiredAttributes.length; i++) {\n\t                requiredAttributes[i] = rawRequiredAttributes[i].substr(userAttributesPrefix.length);\n\t              }\n\t            }\n\t            return callback.newPasswordRequired(userAttributes, requiredAttributes);\n\t          }\n\t          return _this.authenticateUserInternal(dataAuthenticate, authenticationHelper, callback);\n\t        });\n\t        return undefined;\n\t      });\n\t    }\n\t\n\t    /**\n\t    * PRIVATE ONLY: This is an internal only method and should not\n\t    * be directly called by the consumers.\n\t    * @param {object} dataAuthenticate authentication data\n\t    * @param {object} authenticationHelper helper created\n\t    * @param {callback} callback passed on from caller\n\t    * @returns {void}\n\t    */\n\t\n\t  }, {\n\t    key: 'authenticateUserInternal',\n\t    value: function authenticateUserInternal(dataAuthenticate, authenticationHelper, callback) {\n\t      var _this2 = this;\n\t\n\t      var challengeName = dataAuthenticate.ChallengeName;\n\t      if (challengeName === 'SMS_MFA') {\n\t        this.Session = dataAuthenticate.Session;\n\t        return callback.mfaRequired(challengeName);\n\t      }\n\t\n\t      if (challengeName === 'CUSTOM_CHALLENGE') {\n\t        this.Session = dataAuthenticate.Session;\n\t        return callback.customChallenge(dataAuthenticate.ChallengeParameters);\n\t      }\n\t\n\t      if (challengeName === 'DEVICE_SRP_AUTH') {\n\t        this.getDeviceResponse(callback);\n\t        return undefined;\n\t      }\n\t\n\t      this.signInUserSession = this.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n\t      this.cacheTokens();\n\t\n\t      var newDeviceMetadata = dataAuthenticate.AuthenticationResult.NewDeviceMetadata;\n\t      if (newDeviceMetadata == null) {\n\t        return callback.onSuccess(this.signInUserSession);\n\t      }\n\t\n\t      authenticationHelper.generateHashDevice(dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey, dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey);\n\t\n\t      var deviceSecretVerifierConfig = {\n\t        Salt: sjcl.codec.base64.fromBits(sjcl.codec.hex.toBits(authenticationHelper.getSaltDevices().toString(16))),\n\t        PasswordVerifier: sjcl.codec.base64.fromBits(sjcl.codec.hex.toBits(authenticationHelper.getVerifierDevices().toString(16)))\n\t      };\n\t\n\t      this.verifierDevices = sjcl.codec.base64.fromBits(authenticationHelper.getVerifierDevices());\n\t      this.deviceGroupKey = newDeviceMetadata.DeviceGroupKey;\n\t      this.randomPassword = authenticationHelper.getRandomPassword();\n\t\n\t      this.client.makeUnauthenticatedRequest('confirmDevice', {\n\t        DeviceKey: newDeviceMetadata.DeviceKey,\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n\t        DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n\t        DeviceName: navigator.userAgent\n\t      }, function (errConfirm, dataConfirm) {\n\t        if (errConfirm) {\n\t          return callback.onFailure(errConfirm);\n\t        }\n\t\n\t        _this2.deviceKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey;\n\t        _this2.cacheDeviceKeyAndPassword();\n\t        if (dataConfirm.UserConfirmationNecessary === true) {\n\t          return callback.onSuccess(_this2.signInUserSession, dataConfirm.UserConfirmationNecessary);\n\t        }\n\t        return callback.onSuccess(_this2.signInUserSession);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t    * This method is user to complete the NEW_PASSWORD_REQUIRED challenge.\n\t    * Pass the new password with any new user attributes to be updated.\n\t    * User attribute keys must be of format userAttributes.<attribute_name>.\n\t    * @param {string} newPassword new password for this user\n\t    * @param {object} requiredAttributeData map with values for all required attributes\n\t    * @param {object} callback Result callback map.\n\t    * @param {onFailure} callback.onFailure Called on any error.\n\t    * @param {mfaRequired} callback.mfaRequired MFA code required to continue.\n\t    * @param {customChallenge} callback.customChallenge Custom challenge\n\t    *         response required to continue.\n\t    * @param {authSuccess} callback.onSuccess Called on success with the new session.\n\t    * @returns {void}\n\t    */\n\t\n\t  }, {\n\t    key: 'completeNewPasswordChallenge',\n\t    value: function completeNewPasswordChallenge(newPassword, requiredAttributeData, callback) {\n\t      var _this3 = this;\n\t\n\t      if (!newPassword) {\n\t        return callback.onFailure('New password is required.');\n\t      }\n\t      var authenticationHelper = new _AuthenticationHelper2.default(this.pool.getUserPoolId().split('_')[1], this.pool.getParanoia());\n\t      var userAttributesPrefix = authenticationHelper.getNewPasswordRequiredChallengeUserAttributePrefix();\n\t\n\t      var finalUserAttributes = {};\n\t      if (requiredAttributeData) {\n\t        Object.keys(requiredAttributeData).forEach(function (key) {\n\t          finalUserAttributes[userAttributesPrefix + key] = requiredAttributeData[key];\n\t        });\n\t      }\n\t\n\t      finalUserAttributes.NEW_PASSWORD = newPassword;\n\t      finalUserAttributes.USERNAME = this.username;\n\t      this.client.makeUnauthenticatedRequest('respondToAuthChallenge', {\n\t        ChallengeName: 'NEW_PASSWORD_REQUIRED',\n\t        ClientId: this.pool.getClientId(),\n\t        ChallengeResponses: finalUserAttributes,\n\t        Session: this.Session\n\t      }, function (errAuthenticate, dataAuthenticate) {\n\t        if (errAuthenticate) {\n\t          return callback.onFailure(errAuthenticate);\n\t        }\n\t        return _this3.authenticateUserInternal(dataAuthenticate, authenticationHelper, callback);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to get a session using device authentication. It is called at the end of user\n\t     * authentication\n\t     *\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {authSuccess} callback.onSuccess Called on success with the new session.\n\t     * @returns {void}\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: 'getDeviceResponse',\n\t    value: function getDeviceResponse(callback) {\n\t      var _this4 = this;\n\t\n\t      var authenticationHelper = new _AuthenticationHelper2.default(this.deviceGroupKey, this.pool.getParanoia());\n\t      var dateHelper = new _DateHelper2.default();\n\t\n\t      var authParameters = {};\n\t\n\t      authParameters.USERNAME = this.username;\n\t      authParameters.DEVICE_KEY = this.deviceKey;\n\t      authParameters.SRP_A = authenticationHelper.getLargeAValue().toString(16);\n\t\n\t      this.client.makeUnauthenticatedRequest('respondToAuthChallenge', {\n\t        ChallengeName: 'DEVICE_SRP_AUTH',\n\t        ClientId: this.pool.getClientId(),\n\t        ChallengeResponses: authParameters\n\t      }, function (err, data) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t\n\t        var challengeParameters = data.ChallengeParameters;\n\t\n\t        var serverBValue = new _jsbn.BigInteger(challengeParameters.SRP_B, 16);\n\t        var salt = new _jsbn.BigInteger(challengeParameters.SALT, 16);\n\t\n\t        var hkdf = authenticationHelper.getPasswordAuthenticationKey(_this4.deviceKey, _this4.randomPassword, serverBValue, salt);\n\t        var secretBlockBits = sjcl.codec.base64.toBits(challengeParameters.SECRET_BLOCK);\n\t\n\t        var mac = new sjcl.misc.hmac(hkdf, sjcl.hash.sha256);\n\t        mac.update(sjcl.codec.utf8String.toBits(_this4.deviceGroupKey));\n\t        mac.update(sjcl.codec.utf8String.toBits(_this4.deviceKey));\n\t        mac.update(secretBlockBits);\n\t        var dateNow = dateHelper.getNowString();\n\t        mac.update(sjcl.codec.utf8String.toBits(dateNow));\n\t        var signature = mac.digest();\n\t        var signatureString = sjcl.codec.base64.fromBits(signature);\n\t\n\t        var challengeResponses = {};\n\t\n\t        challengeResponses.USERNAME = _this4.username;\n\t        challengeResponses.PASSWORD_CLAIM_SECRET_BLOCK = challengeParameters.SECRET_BLOCK;\n\t        challengeResponses.TIMESTAMP = dateNow;\n\t        challengeResponses.PASSWORD_CLAIM_SIGNATURE = signatureString;\n\t        challengeResponses.DEVICE_KEY = _this4.deviceKey;\n\t\n\t        _this4.client.makeUnauthenticatedRequest('respondToAuthChallenge', {\n\t          ChallengeName: 'DEVICE_PASSWORD_VERIFIER',\n\t          ClientId: _this4.pool.getClientId(),\n\t          ChallengeResponses: challengeResponses,\n\t          Session: data.Session\n\t        }, function (errAuthenticate, dataAuthenticate) {\n\t          if (errAuthenticate) {\n\t            return callback.onFailure(errAuthenticate);\n\t          }\n\t\n\t          _this4.signInUserSession = _this4.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n\t          _this4.cacheTokens();\n\t\n\t          return callback.onSuccess(_this4.signInUserSession);\n\t        });\n\t        return undefined;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used for a certain user to confirm the registration by using a confirmation code\n\t     * @param {string} confirmationCode Code entered by user.\n\t     * @param {bool} forceAliasCreation Allow migrating from an existing email / phone number.\n\t     * @param {nodeCallback<string>} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'confirmRegistration',\n\t    value: function confirmRegistration(confirmationCode, forceAliasCreation, callback) {\n\t      this.client.makeUnauthenticatedRequest('confirmSignUp', {\n\t        ClientId: this.pool.getClientId(),\n\t        ConfirmationCode: confirmationCode,\n\t        Username: this.username,\n\t        ForceAliasCreation: forceAliasCreation\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        return callback(null, 'SUCCESS');\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used by the user once he has the responses to a custom challenge\n\t     * @param {string} answerChallenge The custom challange answer.\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {customChallenge} callback.customChallenge\n\t     *    Custom challenge response required to continue.\n\t     * @param {authSuccess} callback.onSuccess Called on success with the new session.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'sendCustomChallengeAnswer',\n\t    value: function sendCustomChallengeAnswer(answerChallenge, callback) {\n\t      var _this5 = this;\n\t\n\t      var challengeResponses = {};\n\t      challengeResponses.USERNAME = this.username;\n\t      challengeResponses.ANSWER = answerChallenge;\n\t\n\t      this.client.makeUnauthenticatedRequest('respondToAuthChallenge', {\n\t        ChallengeName: 'CUSTOM_CHALLENGE',\n\t        ChallengeResponses: challengeResponses,\n\t        ClientId: this.pool.getClientId(),\n\t        Session: this.Session\n\t      }, function (err, data) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t\n\t        var challengeName = data.ChallengeName;\n\t\n\t        if (challengeName === 'CUSTOM_CHALLENGE') {\n\t          _this5.Session = data.Session;\n\t          return callback.customChallenge(data.challengeParameters);\n\t        }\n\t\n\t        _this5.signInUserSession = _this5.getCognitoUserSession(data.AuthenticationResult);\n\t        _this5.cacheTokens();\n\t        return callback.onSuccess(_this5.signInUserSession);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used by the user once he has an MFA code\n\t     * @param {string} confirmationCode The MFA code entered by the user.\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {authSuccess} callback.onSuccess Called on success with the new session.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'sendMFACode',\n\t    value: function sendMFACode(confirmationCode, callback) {\n\t      var _this6 = this;\n\t\n\t      var challengeResponses = {};\n\t      challengeResponses.USERNAME = this.username;\n\t      challengeResponses.SMS_MFA_CODE = confirmationCode;\n\t\n\t      if (this.deviceKey != null) {\n\t        challengeResponses.DEVICE_KEY = this.deviceKey;\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('respondToAuthChallenge', {\n\t        ChallengeName: 'SMS_MFA',\n\t        ChallengeResponses: challengeResponses,\n\t        ClientId: this.pool.getClientId(),\n\t        Session: this.Session\n\t      }, function (err, dataAuthenticate) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t\n\t        _this6.signInUserSession = _this6.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n\t        _this6.cacheTokens();\n\t\n\t        if (dataAuthenticate.AuthenticationResult.NewDeviceMetadata == null) {\n\t          return callback.onSuccess(_this6.signInUserSession);\n\t        }\n\t\n\t        var authenticationHelper = new _AuthenticationHelper2.default(_this6.pool.getUserPoolId().split('_')[1], _this6.pool.getParanoia());\n\t        authenticationHelper.generateHashDevice(dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey, dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey);\n\t\n\t        var deviceSecretVerifierConfig = {\n\t          Salt: sjcl.codec.base64.fromBits(sjcl.codec.hex.toBits(authenticationHelper.getSaltDevices().toString(16))),\n\t          PasswordVerifier: sjcl.codec.base64.fromBits(sjcl.codec.hex.toBits(authenticationHelper.getVerifierDevices().toString(16)))\n\t        };\n\t\n\t        _this6.verifierDevices = sjcl.codec.base64.fromBits(authenticationHelper.getVerifierDevices());\n\t        _this6.deviceGroupKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey;\n\t        _this6.randomPassword = authenticationHelper.getRandomPassword();\n\t\n\t        _this6.client.makeUnauthenticatedRequest('confirmDevice', {\n\t          DeviceKey: dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey,\n\t          AccessToken: _this6.signInUserSession.getAccessToken().getJwtToken(),\n\t          DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n\t          DeviceName: navigator.userAgent\n\t        }, function (errConfirm, dataConfirm) {\n\t          if (errConfirm) {\n\t            return callback.onFailure(errConfirm);\n\t          }\n\t\n\t          _this6.deviceKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey;\n\t          _this6.cacheDeviceKeyAndPassword();\n\t          if (dataConfirm.UserConfirmationNecessary === true) {\n\t            return callback.onSuccess(_this6.signInUserSession, dataConfirm.UserConfirmationNecessary);\n\t          }\n\t          return callback.onSuccess(_this6.signInUserSession);\n\t        });\n\t        return undefined;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used by an authenticated user to change the current password\n\t     * @param {string} oldUserPassword The current password.\n\t     * @param {string} newUserPassword The requested new password.\n\t     * @param {nodeCallback<string>} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'changePassword',\n\t    value: function changePassword(oldUserPassword, newUserPassword, callback) {\n\t      if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n\t        return callback(new Error('User is not authenticated'), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('changePassword', {\n\t        PreviousPassword: oldUserPassword,\n\t        ProposedPassword: newUserPassword,\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        return callback(null, 'SUCCESS');\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used by an authenticated user to enable MFA for himself\n\t     * @param {nodeCallback<string>} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'enableMFA',\n\t    value: function enableMFA(callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback(new Error('User is not authenticated'), null);\n\t      }\n\t\n\t      var mfaOptions = [];\n\t      var mfaEnabled = {\n\t        DeliveryMedium: 'SMS',\n\t        AttributeName: 'phone_number'\n\t      };\n\t      mfaOptions.push(mfaEnabled);\n\t\n\t      this.client.makeUnauthenticatedRequest('setUserSettings', {\n\t        MFAOptions: mfaOptions,\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        return callback(null, 'SUCCESS');\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used by an authenticated user to disable MFA for himself\n\t     * @param {nodeCallback<string>} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'disableMFA',\n\t    value: function disableMFA(callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback(new Error('User is not authenticated'), null);\n\t      }\n\t\n\t      var mfaOptions = [];\n\t\n\t      this.client.makeUnauthenticatedRequest('setUserSettings', {\n\t        MFAOptions: mfaOptions,\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        return callback(null, 'SUCCESS');\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used by an authenticated user to delete himself\n\t     * @param {nodeCallback<string>} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'deleteUser',\n\t    value: function deleteUser(callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback(new Error('User is not authenticated'), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('deleteUser', {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        return callback(null, 'SUCCESS');\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * @typedef {CognitoUserAttribute | { Name:string, Value:string }} AttributeArg\n\t     */\n\t    /**\n\t     * This is used by an authenticated user to change a list of attributes\n\t     * @param {AttributeArg[]} attributes A list of the new user attributes.\n\t     * @param {nodeCallback<string>} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'updateAttributes',\n\t    value: function updateAttributes(attributes, callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback(new Error('User is not authenticated'), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('updateUserAttributes', {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n\t        UserAttributes: attributes\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        return callback(null, 'SUCCESS');\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used by an authenticated user to get a list of attributes\n\t     * @param {nodeCallback<CognitoUserAttribute[]>} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'getUserAttributes',\n\t    value: function getUserAttributes(callback) {\n\t      if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n\t        return callback(new Error('User is not authenticated'), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('getUser', {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err, userData) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t\n\t        var attributeList = [];\n\t\n\t        for (var i = 0; i < userData.UserAttributes.length; i++) {\n\t          var attribute = {\n\t            Name: userData.UserAttributes[i].Name,\n\t            Value: userData.UserAttributes[i].Value\n\t          };\n\t          var userAttribute = new _CognitoUserAttribute2.default(attribute);\n\t          attributeList.push(userAttribute);\n\t        }\n\t\n\t        return callback(null, attributeList);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used by an authenticated user to delete a list of attributes\n\t     * @param {string[]} attributeList Names of the attributes to delete.\n\t     * @param {nodeCallback<string>} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'deleteAttributes',\n\t    value: function deleteAttributes(attributeList, callback) {\n\t      if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n\t        return callback(new Error('User is not authenticated'), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('deleteUserAttributes', {\n\t        UserAttributeNames: attributeList,\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        return callback(null, 'SUCCESS');\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used by a user to resend a confirmation code\n\t     * @param {nodeCallback<string>} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'resendConfirmationCode',\n\t    value: function resendConfirmationCode(callback) {\n\t      this.client.makeUnauthenticatedRequest('resendConfirmationCode', {\n\t        ClientId: this.pool.getClientId(),\n\t        Username: this.username\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        return callback(null, 'SUCCESS');\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used to get a session, either from the session object\n\t     * or from  the local storage, or by using a refresh token\n\t     *\n\t     * @param {nodeCallback<CognitoUserSession>} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'getSession',\n\t    value: function getSession(callback) {\n\t      if (this.username == null) {\n\t        return callback(new Error('Username is null. Cannot retrieve a new session'), null);\n\t      }\n\t\n\t      if (this.signInUserSession != null && this.signInUserSession.isValid()) {\n\t        return callback(null, this.signInUserSession);\n\t      }\n\t\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.pool.getClientId() + '.' + this.username;\n\t      var idTokenKey = keyPrefix + '.idToken';\n\t      var accessTokenKey = keyPrefix + '.accessToken';\n\t      var refreshTokenKey = keyPrefix + '.refreshToken';\n\t\n\t      var storage = this.localStorage;\n\t\n\t      if (storage.getItem(idTokenKey)) {\n\t        var idToken = new _CognitoIdToken2.default({\n\t          IdToken: storage.getItem(idTokenKey)\n\t        });\n\t        var accessToken = new _CognitoAccessToken2.default({\n\t          AccessToken: storage.getItem(accessTokenKey)\n\t        });\n\t        var refreshToken = new _CognitoRefreshToken2.default({\n\t          RefreshToken: storage.getItem(refreshTokenKey)\n\t        });\n\t\n\t        var sessionData = {\n\t          IdToken: idToken,\n\t          AccessToken: accessToken,\n\t          RefreshToken: refreshToken\n\t        };\n\t        var cachedSession = new _CognitoUserSession2.default(sessionData);\n\t        if (cachedSession.isValid()) {\n\t          this.signInUserSession = cachedSession;\n\t          return callback(null, this.signInUserSession);\n\t        }\n\t\n\t        if (refreshToken.getToken() == null) {\n\t          return callback(new Error('Cannot retrieve a new session. Please authenticate.'), null);\n\t        }\n\t\n\t        this.refreshSession(refreshToken, callback);\n\t      }\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This uses the refreshToken to retrieve a new session\n\t     * @param {CognitoRefreshToken} refreshToken A previous session's refresh token.\n\t     * @param {nodeCallback<CognitoUserSession>} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'refreshSession',\n\t    value: function refreshSession(refreshToken, callback) {\n\t      var _this7 = this;\n\t\n\t      var authParameters = {};\n\t      authParameters.REFRESH_TOKEN = refreshToken.getToken();\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.pool.getClientId();\n\t      var lastUserKey = keyPrefix + '.LastAuthUser';\n\t      var storage = this.localStorage;\n\t\n\t      if (storage.getItem(lastUserKey)) {\n\t        this.username = storage.getItem(lastUserKey);\n\t        var deviceKeyKey = keyPrefix + '.' + this.username + '.deviceKey';\n\t        this.deviceKey = storage.getItem(deviceKeyKey);\n\t        authParameters.DEVICE_KEY = this.deviceKey;\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('initiateAuth', {\n\t        ClientId: this.pool.getClientId(),\n\t        AuthFlow: 'REFRESH_TOKEN_AUTH',\n\t        AuthParameters: authParameters\n\t      }, function (err, authResult) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        if (authResult) {\n\t          var authenticationResult = authResult.AuthenticationResult;\n\t          if (!Object.prototype.hasOwnProperty.call(authenticationResult, 'RefreshToken')) {\n\t            authenticationResult.RefreshToken = refreshToken.getToken();\n\t          }\n\t          _this7.signInUserSession = _this7.getCognitoUserSession(authenticationResult);\n\t          _this7.cacheTokens();\n\t          return callback(null, _this7.signInUserSession);\n\t        }\n\t        return undefined;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used to save the session tokens to local storage\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'cacheTokens',\n\t    value: function cacheTokens() {\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.pool.getClientId();\n\t      var idTokenKey = keyPrefix + '.' + this.username + '.idToken';\n\t      var accessTokenKey = keyPrefix + '.' + this.username + '.accessToken';\n\t      var refreshTokenKey = keyPrefix + '.' + this.username + '.refreshToken';\n\t      var lastUserKey = keyPrefix + '.LastAuthUser';\n\t\n\t      var storage = this.localStorage;\n\t\n\t      storage.setItem(idTokenKey, this.signInUserSession.getIdToken().getJwtToken());\n\t      storage.setItem(accessTokenKey, this.signInUserSession.getAccessToken().getJwtToken());\n\t      storage.setItem(refreshTokenKey, this.signInUserSession.getRefreshToken().getToken());\n\t      storage.setItem(lastUserKey, this.username);\n\t    }\n\t\n\t    /**\n\t     * This is used to cache the device key and device group and device password\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'cacheDeviceKeyAndPassword',\n\t    value: function cacheDeviceKeyAndPassword() {\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.pool.getClientId() + '.' + this.username;\n\t      var deviceKeyKey = keyPrefix + '.deviceKey';\n\t      var randomPasswordKey = keyPrefix + '.randomPasswordKey';\n\t      var deviceGroupKeyKey = keyPrefix + '.deviceGroupKey';\n\t\n\t      var storage = this.localStorage;\n\t\n\t      storage.setItem(deviceKeyKey, this.deviceKey);\n\t      storage.setItem(randomPasswordKey, this.randomPassword);\n\t      storage.setItem(deviceGroupKeyKey, this.deviceGroupKey);\n\t    }\n\t\n\t    /**\n\t     * This is used to get current device key and device group and device password\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'getCachedDeviceKeyAndPassword',\n\t    value: function getCachedDeviceKeyAndPassword() {\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.pool.getClientId() + '.' + this.username;\n\t      var deviceKeyKey = keyPrefix + '.deviceKey';\n\t      var randomPasswordKey = keyPrefix + '.randomPasswordKey';\n\t      var deviceGroupKeyKey = keyPrefix + '.deviceGroupKey';\n\t\n\t      var storage = this.localStorage;\n\t\n\t      if (storage.getItem(deviceKeyKey)) {\n\t        this.deviceKey = storage.getItem(deviceKeyKey);\n\t        this.randomPassword = storage.getItem(randomPasswordKey);\n\t        this.deviceGroupKey = storage.getItem(deviceGroupKeyKey);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * This is used to clear the device key info from local storage\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'clearCachedDeviceKeyAndPassword',\n\t    value: function clearCachedDeviceKeyAndPassword() {\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.pool.getClientId() + '.' + this.username;\n\t      var deviceKeyKey = keyPrefix + '.deviceKey';\n\t      var randomPasswordKey = keyPrefix + '.randomPasswordKey';\n\t      var deviceGroupKeyKey = keyPrefix + '.deviceGroupKey';\n\t\n\t      var storage = this.localStorage;\n\t\n\t      storage.removeItem(deviceKeyKey);\n\t      storage.removeItem(randomPasswordKey);\n\t      storage.removeItem(deviceGroupKeyKey);\n\t    }\n\t\n\t    /**\n\t     * This is used to clear the session tokens from local storage\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'clearCachedTokens',\n\t    value: function clearCachedTokens() {\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.pool.getClientId();\n\t      var idTokenKey = keyPrefix + '.' + this.username + '.idToken';\n\t      var accessTokenKey = keyPrefix + '.' + this.username + '.accessToken';\n\t      var refreshTokenKey = keyPrefix + '.' + this.username + '.refreshToken';\n\t      var lastUserKey = keyPrefix + '.LastAuthUser';\n\t\n\t      var storage = this.localStorage;\n\t\n\t      storage.removeItem(idTokenKey);\n\t      storage.removeItem(accessTokenKey);\n\t      storage.removeItem(refreshTokenKey);\n\t      storage.removeItem(lastUserKey);\n\t    }\n\t\n\t    /**\n\t     * This is used to build a user session from tokens retrieved in the authentication result\n\t     * @param {object} authResult Successful auth response from server.\n\t     * @returns {CognitoUserSession} The new user session.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: 'getCognitoUserSession',\n\t    value: function getCognitoUserSession(authResult) {\n\t      var idToken = new _CognitoIdToken2.default(authResult);\n\t      var accessToken = new _CognitoAccessToken2.default(authResult);\n\t      var refreshToken = new _CognitoRefreshToken2.default(authResult);\n\t\n\t      var sessionData = {\n\t        IdToken: idToken,\n\t        AccessToken: accessToken,\n\t        RefreshToken: refreshToken\n\t      };\n\t\n\t      return new _CognitoUserSession2.default(sessionData);\n\t    }\n\t\n\t    /**\n\t     * This is used to initiate a forgot password request\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {inputVerificationCode?} callback.inputVerificationCode\n\t     *    Optional callback raised instead of onSuccess with response data.\n\t     * @param {onSuccess<void>?} callback.onSuccess Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'forgotPassword',\n\t    value: function forgotPassword(callback) {\n\t      this.client.makeUnauthenticatedRequest('forgotPassword', {\n\t        ClientId: this.pool.getClientId(),\n\t        Username: this.username\n\t      }, function (err, data) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        if (typeof callback.inputVerificationCode === 'function') {\n\t          return callback.inputVerificationCode(data);\n\t        }\n\t        return callback.onSuccess();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used to confirm a new password using a confirmationCode\n\t     * @param {string} confirmationCode Code entered by user.\n\t     * @param {string} newPassword Confirm new password.\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess<void>} callback.onSuccess Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'confirmPassword',\n\t    value: function confirmPassword(confirmationCode, newPassword, callback) {\n\t      this.client.makeUnauthenticatedRequest('confirmForgotPassword', {\n\t        ClientId: this.pool.getClientId(),\n\t        Username: this.username,\n\t        ConfirmationCode: confirmationCode,\n\t        Password: newPassword\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        return callback.onSuccess();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used to initiate an attribute confirmation request\n\t     * @param {string} attributeName User attribute that needs confirmation.\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {inputVerificationCode} callback.inputVerificationCode Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'getAttributeVerificationCode',\n\t    value: function getAttributeVerificationCode(attributeName, callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback(new Error('User is not authenticated'), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('getUserAttributeVerificationCode', {\n\t        AttributeName: attributeName,\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err, data) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        return callback.inputVerificationCode(data);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to confirm an attribute using a confirmation code\n\t     * @param {string} attributeName Attribute being confirmed.\n\t     * @param {string} confirmationCode Code entered by user.\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess<string>} callback.onSuccess Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'verifyAttribute',\n\t    value: function verifyAttribute(attributeName, confirmationCode, callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback(new Error('User is not authenticated'), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('verifyUserAttribute', {\n\t        AttributeName: attributeName,\n\t        Code: confirmationCode,\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        return callback.onSuccess('SUCCESS');\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to get the device information using the current device key\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess<*>} callback.onSuccess Called on success with device data.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'getDevice',\n\t    value: function getDevice(callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback(new Error('User is not authenticated'), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('getDevice', {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n\t        DeviceKey: this.deviceKey\n\t      }, function (err, data) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        return callback.onSuccess(data);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to forget the current device\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess<string>} callback.onSuccess Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'forgetDevice',\n\t    value: function forgetDevice(callback) {\n\t      var _this8 = this;\n\t\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback(new Error('User is not authenticated'), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('forgetDevice', {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n\t        DeviceKey: this.deviceKey\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        _this8.deviceKey = null;\n\t        _this8.deviceGroupkey = null;\n\t        _this8.randomPassword = null;\n\t        _this8.clearCachedDeviceKeyAndPassword();\n\t        return callback.onSuccess('SUCCESS');\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to set the device status as remembered\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess<string>} callback.onSuccess Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setDeviceStatusRemembered',\n\t    value: function setDeviceStatusRemembered(callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback(new Error('User is not authenticated'), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('updateDeviceStatus', {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n\t        DeviceKey: this.deviceKey,\n\t        DeviceRememberedStatus: 'remembered'\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        return callback.onSuccess('SUCCESS');\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to set the device status as not remembered\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess<string>} callback.onSuccess Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setDeviceStatusNotRemembered',\n\t    value: function setDeviceStatusNotRemembered(callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback(new Error('User is not authenticated'), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('updateDeviceStatus', {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n\t        DeviceKey: this.deviceKey,\n\t        DeviceRememberedStatus: 'not_remembered'\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        return callback.onSuccess('SUCCESS');\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to list all devices for a user\n\t     *\n\t     * @param {int} limit the number of devices returned in a call\n\t     * @param {string} paginationToken the pagination token in case any was returned before\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess<*>} callback.onSuccess Called on success with device list.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'listDevices',\n\t    value: function listDevices(limit, paginationToken, callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback(new Error('User is not authenticated'), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('listDevices', {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n\t        Limit: limit,\n\t        PaginationToken: paginationToken\n\t      }, function (err, data) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        return callback.onSuccess(data);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to globally revoke all tokens issued to a user\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess<string>} callback.onSuccess Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'globalSignOut',\n\t    value: function globalSignOut(callback) {\n\t      var _this9 = this;\n\t\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback(new Error('User is not authenticated'), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('globalSignOut', {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        _this9.clearCachedTokens();\n\t        return callback.onSuccess('SUCCESS');\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used for the user to signOut of the application and clear the cached tokens.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'signOut',\n\t    value: function signOut() {\n\t      this.signInUserSession = null;\n\t      this.clearCachedTokens();\n\t    }\n\t  }]);\n\t\n\t  return CognitoUser;\n\t}();\n\t\n\texports.default = CognitoUser;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\n\t * Copyright 2016 Amazon.com,\n\t * Inc. or its affiliates. All Rights Reserved.\n\t *\n\t * Licensed under the Amazon Software License (the \"License\").\n\t * You may not use this file except in compliance with the\n\t * License. A copy of the License is located at\n\t *\n\t *     http://aws.amazon.com/asl/\n\t *\n\t * or in the \"license\" file accompanying this file. This file is\n\t * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n\t * CONDITIONS OF ANY KIND, express or implied. See the License\n\t * for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t/** @class */\n\tvar CognitoUserAttribute = function () {\n\t  /**\n\t   * Constructs a new CognitoUserAttribute object\n\t   * @param {string=} Name The record's name\n\t   * @param {string=} Value The record's value\n\t   */\n\t  function CognitoUserAttribute() {\n\t    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    var Name = _ref.Name;\n\t    var Value = _ref.Value;\n\t\n\t    _classCallCheck(this, CognitoUserAttribute);\n\t\n\t    this.Name = Name || '';\n\t    this.Value = Value || '';\n\t  }\n\t\n\t  /**\n\t   * @returns {string} the record's value.\n\t   */\n\t\n\t\n\t  _createClass(CognitoUserAttribute, [{\n\t    key: 'getValue',\n\t    value: function getValue() {\n\t      return this.Value;\n\t    }\n\t\n\t    /**\n\t     * Sets the record's value.\n\t     * @param {string} value The new value.\n\t     * @returns {CognitoUserAttribute} The record for method chaining.\n\t     */\n\t\n\t  }, {\n\t    key: 'setValue',\n\t    value: function setValue(value) {\n\t      this.Value = value;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} the record's name.\n\t     */\n\t\n\t  }, {\n\t    key: 'getName',\n\t    value: function getName() {\n\t      return this.Name;\n\t    }\n\t\n\t    /**\n\t     * Sets the record's name\n\t     * @param {string} name The new name.\n\t     * @returns {CognitoUserAttribute} The record for method chaining.\n\t     */\n\t\n\t  }, {\n\t    key: 'setName',\n\t    value: function setName(name) {\n\t      this.Name = name;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} a string representation of the record.\n\t     */\n\t\n\t  }, {\n\t    key: 'toString',\n\t    value: function toString() {\n\t      return JSON.stringify(this);\n\t    }\n\t\n\t    /**\n\t     * @returns {object} a flat object representing the record.\n\t     */\n\t\n\t  }, {\n\t    key: 'toJSON',\n\t    value: function toJSON() {\n\t      return {\n\t        Name: this.Name,\n\t        Value: this.Value\n\t      };\n\t    }\n\t  }]);\n\t\n\t  return CognitoUserAttribute;\n\t}();\n\t\n\texports.default = CognitoUserAttribute;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\n\t * Copyright 2016 Amazon.com,\n\t * Inc. or its affiliates. All Rights Reserved.\n\t *\n\t * Licensed under the Amazon Software License (the \"License\").\n\t * You may not use this file except in compliance with the\n\t * License. A copy of the License is located at\n\t *\n\t *     http://aws.amazon.com/asl/\n\t *\n\t * or in the \"license\" file accompanying this file. This file is\n\t * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n\t * CONDITIONS OF ANY KIND, express or implied. See the License\n\t * for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t/** @class */\n\tvar CognitoUserSession = function () {\n\t  /**\n\t   * Constructs a new CognitoUserSession object\n\t   * @param {string} IdToken The session's Id token.\n\t   * @param {string=} RefreshToken The session's refresh token.\n\t   * @param {string} AccessToken The session's access token.\n\t   */\n\t  function CognitoUserSession() {\n\t    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    var IdToken = _ref.IdToken;\n\t    var RefreshToken = _ref.RefreshToken;\n\t    var AccessToken = _ref.AccessToken;\n\t\n\t    _classCallCheck(this, CognitoUserSession);\n\t\n\t    if (AccessToken == null || IdToken == null) {\n\t      throw new Error('Id token and Access Token must be present.');\n\t    }\n\t\n\t    this.idToken = IdToken;\n\t    this.refreshToken = RefreshToken;\n\t    this.accessToken = AccessToken;\n\t  }\n\t\n\t  /**\n\t   * @returns {CognitoIdToken} the session's Id token\n\t   */\n\t\n\t\n\t  _createClass(CognitoUserSession, [{\n\t    key: 'getIdToken',\n\t    value: function getIdToken() {\n\t      return this.idToken;\n\t    }\n\t\n\t    /**\n\t     * @returns {CognitoRefreshToken} the session's refresh token\n\t     */\n\t\n\t  }, {\n\t    key: 'getRefreshToken',\n\t    value: function getRefreshToken() {\n\t      return this.refreshToken;\n\t    }\n\t\n\t    /**\n\t     * @returns {CognitoAccessToken} the session's access token\n\t     */\n\t\n\t  }, {\n\t    key: 'getAccessToken',\n\t    value: function getAccessToken() {\n\t      return this.accessToken;\n\t    }\n\t\n\t    /**\n\t     * Checks to see if the session is still valid based on session expiry information found\n\t     * in tokens and the current time\n\t     * @returns {boolean} if the session is still valid\n\t     */\n\t\n\t  }, {\n\t    key: 'isValid',\n\t    value: function isValid() {\n\t      var now = Math.floor(new Date() / 1000);\n\t\n\t      return now < this.accessToken.getExpiration() && now < this.idToken.getExpiration();\n\t    }\n\t  }]);\n\t\n\t  return CognitoUserSession;\n\t}();\n\t\n\texports.default = CognitoUserSession;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\n\t * Copyright 2016 Amazon.com,\n\t * Inc. or its affiliates. All Rights Reserved.\n\t *\n\t * Licensed under the Amazon Software License (the \"License\").\n\t * You may not use this file except in compliance with the\n\t * License. A copy of the License is located at\n\t *\n\t *     http://aws.amazon.com/asl/\n\t *\n\t * or in the \"license\" file accompanying this file. This file is\n\t * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n\t * CONDITIONS OF ANY KIND, express or implied. See the License\n\t * for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\tvar monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\tvar weekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\t\n\t/** @class */\n\t\n\tvar DateHelper = function () {\n\t  function DateHelper() {\n\t    _classCallCheck(this, DateHelper);\n\t  }\n\t\n\t  _createClass(DateHelper, [{\n\t    key: 'getNowString',\n\t\n\t    /**\n\t     * @returns {string} The current time in \"ddd MMM D HH:mm:ss UTC YYYY\" format.\n\t     */\n\t    value: function getNowString() {\n\t      var now = new Date();\n\t\n\t      var weekDay = weekNames[now.getUTCDay()];\n\t      var month = monthNames[now.getUTCMonth()];\n\t      var day = now.getUTCDate();\n\t\n\t      var hours = now.getUTCHours();\n\t      if (hours < 10) {\n\t        hours = '0' + hours;\n\t      }\n\t\n\t      var minutes = now.getUTCMinutes();\n\t      if (minutes < 10) {\n\t        minutes = '0' + minutes;\n\t      }\n\t\n\t      var seconds = now.getUTCSeconds();\n\t      if (seconds < 10) {\n\t        seconds = '0' + seconds;\n\t      }\n\t\n\t      var year = now.getUTCFullYear();\n\t\n\t      // ddd MMM D HH:mm:ss UTC YYYY\n\t      var dateNow = weekDay + ' ' + month + ' ' + day + ' ' + hours + ':' + minutes + ':' + seconds + ' UTC ' + year;\n\t\n\t      return dateNow;\n\t    }\n\t  }]);\n\t\n\t  return DateHelper;\n\t}();\n\t\n\texports.default = DateHelper;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.10.0\n\t(function() {\n\t  var JSONStorage, KEY_FOR_EMPTY_STRING, LocalStorage, MetaKey, QUOTA_EXCEEDED_ERR, StorageEvent, _emptyDirectory, _escapeKey, _rm, createMap, events, fs, path, writeSync,\n\t    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t    hasProp = {}.hasOwnProperty;\n\t\n\t  path = __webpack_require__(31);\n\t\n\t  fs = __webpack_require__(2);\n\t\n\t  events = __webpack_require__(30);\n\t\n\t  writeSync = __webpack_require__(20).sync;\n\t\n\t  KEY_FOR_EMPTY_STRING = '---.EMPTY_STRING.---';\n\t\n\t  _emptyDirectory = function(target) {\n\t    var i, len, p, ref, results;\n\t    ref = fs.readdirSync(target);\n\t    results = [];\n\t    for (i = 0, len = ref.length; i < len; i++) {\n\t      p = ref[i];\n\t      results.push(_rm(path.join(target, p)));\n\t    }\n\t    return results;\n\t  };\n\t\n\t  _rm = function(target) {\n\t    if (fs.statSync(target).isDirectory()) {\n\t      _emptyDirectory(target);\n\t      return fs.rmdirSync(target);\n\t    } else {\n\t      return fs.unlinkSync(target);\n\t    }\n\t  };\n\t\n\t  _escapeKey = function(key) {\n\t    var newKey;\n\t    if (key === '') {\n\t      newKey = KEY_FOR_EMPTY_STRING;\n\t    } else {\n\t      newKey = key.toString();\n\t    }\n\t    return newKey;\n\t  };\n\t\n\t  QUOTA_EXCEEDED_ERR = (function(superClass) {\n\t    extend(QUOTA_EXCEEDED_ERR, superClass);\n\t\n\t    function QUOTA_EXCEEDED_ERR(message) {\n\t      this.message = message != null ? message : 'Unknown error.';\n\t      if (Error.captureStackTrace != null) {\n\t        Error.captureStackTrace(this, this.constructor);\n\t      }\n\t      this.name = this.constructor.name;\n\t    }\n\t\n\t    QUOTA_EXCEEDED_ERR.prototype.toString = function() {\n\t      return this.name + \": \" + this.message;\n\t    };\n\t\n\t    return QUOTA_EXCEEDED_ERR;\n\t\n\t  })(Error);\n\t\n\t  StorageEvent = (function() {\n\t    function StorageEvent(key1, oldValue1, newValue1, url, storageArea) {\n\t      this.key = key1;\n\t      this.oldValue = oldValue1;\n\t      this.newValue = newValue1;\n\t      this.url = url;\n\t      this.storageArea = storageArea != null ? storageArea : 'localStorage';\n\t    }\n\t\n\t    return StorageEvent;\n\t\n\t  })();\n\t\n\t  MetaKey = (function() {\n\t    function MetaKey(key1, index1) {\n\t      this.key = key1;\n\t      this.index = index1;\n\t      if (!(this instanceof MetaKey)) {\n\t        return new MetaKey(this.key, this.index);\n\t      }\n\t    }\n\t\n\t    return MetaKey;\n\t\n\t  })();\n\t\n\t  createMap = function() {\n\t    var Map;\n\t    Map = function() {};\n\t    Map.prototype = Object.create(null);\n\t    return new Map();\n\t  };\n\t\n\t  LocalStorage = (function(superClass) {\n\t    var instanceMap;\n\t\n\t    extend(LocalStorage, superClass);\n\t\n\t    instanceMap = {};\n\t\n\t    function LocalStorage(_location, quota) {\n\t      this._location = _location;\n\t      this.quota = quota != null ? quota : 5 * 1024 * 1024;\n\t      if (!(this instanceof LocalStorage)) {\n\t        return new LocalStorage(this._location, this.quota);\n\t      }\n\t      this._location = path.resolve(this._location);\n\t      if (instanceMap[this._location] != null) {\n\t        return instanceMap[this._location];\n\t      }\n\t      this.length = 0;\n\t      this._bytesInUse = 0;\n\t      this._keys = [];\n\t      this._metaKeyMap = createMap();\n\t      this._eventUrl = \"pid:\" + process.pid;\n\t      this._init();\n\t      this._QUOTA_EXCEEDED_ERR = QUOTA_EXCEEDED_ERR;\n\t      instanceMap[this._location] = this;\n\t      return instanceMap[this._location];\n\t    }\n\t\n\t    LocalStorage.prototype._init = function() {\n\t      var _MetaKey, _decodedKey, _keys, error, i, index, k, len, stat;\n\t      try {\n\t        stat = fs.statSync(this._location);\n\t        if ((stat != null) && !stat.isDirectory()) {\n\t          throw new Error(\"A file exists at the location '\" + this._location + \"' when trying to create/open localStorage\");\n\t        }\n\t        this._bytesInUse = 0;\n\t        this.length = 0;\n\t        _keys = fs.readdirSync(this._location);\n\t        for (index = i = 0, len = _keys.length; i < len; index = ++i) {\n\t          k = _keys[index];\n\t          _decodedKey = decodeURIComponent(k);\n\t          this._keys.push(_decodedKey);\n\t          _MetaKey = new MetaKey(k, index);\n\t          this._metaKeyMap[_decodedKey] = _MetaKey;\n\t          stat = this._getStat(k);\n\t          if ((stat != null ? stat.size : void 0) != null) {\n\t            _MetaKey.size = stat.size;\n\t            this._bytesInUse += stat.size;\n\t          }\n\t        }\n\t        this.length = _keys.length;\n\t      } catch (error) {\n\t        fs.mkdirSync(this._location);\n\t      }\n\t    };\n\t\n\t    LocalStorage.prototype.setItem = function(key, value) {\n\t      var encodedKey, evnt, existsBeforeSet, filename, hasListeners, metaKey, oldLength, oldValue, valueString, valueStringLength;\n\t      hasListeners = events.EventEmitter.listenerCount(this, 'storage');\n\t      oldValue = null;\n\t      if (hasListeners) {\n\t        oldValue = this.getItem(key);\n\t      }\n\t      key = _escapeKey(key);\n\t      encodedKey = encodeURIComponent(key);\n\t      filename = path.join(this._location, encodedKey);\n\t      valueString = value.toString();\n\t      valueStringLength = valueString.length;\n\t      metaKey = this._metaKeyMap[key];\n\t      existsBeforeSet = !!metaKey;\n\t      if (existsBeforeSet) {\n\t        oldLength = metaKey.size;\n\t      } else {\n\t        oldLength = 0;\n\t      }\n\t      if (this._bytesInUse - oldLength + valueStringLength > this.quota) {\n\t        throw new QUOTA_EXCEEDED_ERR();\n\t      }\n\t      writeSync(filename, valueString, 'utf8');\n\t      if (!existsBeforeSet) {\n\t        metaKey = new MetaKey(encodedKey, (this._keys.push(key)) - 1);\n\t        metaKey.size = valueStringLength;\n\t        this._metaKeyMap[key] = metaKey;\n\t        this.length += 1;\n\t        this._bytesInUse += valueStringLength;\n\t      }\n\t      if (hasListeners) {\n\t        evnt = new StorageEvent(key, oldValue, value, this._eventUrl);\n\t        return this.emit('storage', evnt);\n\t      }\n\t    };\n\t\n\t    LocalStorage.prototype.getItem = function(key) {\n\t      var filename, metaKey;\n\t      key = _escapeKey(key);\n\t      metaKey = this._metaKeyMap[key];\n\t      if (!!metaKey) {\n\t        filename = path.join(this._location, metaKey.key);\n\t        return fs.readFileSync(filename, 'utf8');\n\t      } else {\n\t        return null;\n\t      }\n\t    };\n\t\n\t    LocalStorage.prototype._getStat = function(key) {\n\t      var error, filename;\n\t      key = _escapeKey(key);\n\t      filename = path.join(this._location, encodeURIComponent(key));\n\t      try {\n\t        return fs.statSync(filename);\n\t      } catch (error) {\n\t        return null;\n\t      }\n\t    };\n\t\n\t    LocalStorage.prototype.removeItem = function(key) {\n\t      var evnt, filename, hasListeners, k, meta, metaKey, oldValue, ref, v;\n\t      key = _escapeKey(key);\n\t      metaKey = this._metaKeyMap[key];\n\t      if (!!metaKey) {\n\t        hasListeners = events.EventEmitter.listenerCount(this, 'storage');\n\t        oldValue = null;\n\t        if (hasListeners) {\n\t          oldValue = this.getItem(key);\n\t        }\n\t        delete this._metaKeyMap[key];\n\t        this.length -= 1;\n\t        this._bytesInUse -= metaKey.size;\n\t        filename = path.join(this._location, metaKey.key);\n\t        this._keys.splice(metaKey.index, 1);\n\t        ref = this._metaKeyMap;\n\t        for (k in ref) {\n\t          v = ref[k];\n\t          meta = this._metaKeyMap[k];\n\t          if (meta.index > metaKey.index) {\n\t            meta.index -= 1;\n\t          }\n\t        }\n\t        _rm(filename);\n\t        if (hasListeners) {\n\t          evnt = new StorageEvent(key, oldValue, null, this._eventUrl);\n\t          return this.emit('storage', evnt);\n\t        }\n\t      }\n\t    };\n\t\n\t    LocalStorage.prototype.key = function(n) {\n\t      return this._keys[n];\n\t    };\n\t\n\t    LocalStorage.prototype.clear = function() {\n\t      var evnt;\n\t      _emptyDirectory(this._location);\n\t      this._metaKeyMap = createMap();\n\t      this._keys = [];\n\t      this.length = 0;\n\t      this._bytesInUse = 0;\n\t      if (events.EventEmitter.listenerCount(this, 'storage')) {\n\t        evnt = new StorageEvent(null, null, null, this._eventUrl);\n\t        return this.emit('storage', evnt);\n\t      }\n\t    };\n\t\n\t    LocalStorage.prototype._getBytesInUse = function() {\n\t      return this._bytesInUse;\n\t    };\n\t\n\t    LocalStorage.prototype._deleteLocation = function() {\n\t      delete instanceMap[this._location];\n\t      _rm(this._location);\n\t      this._metaKeyMap = {};\n\t      this._keys = [];\n\t      this.length = 0;\n\t      return this._bytesInUse = 0;\n\t    };\n\t\n\t    return LocalStorage;\n\t\n\t  })(events.EventEmitter);\n\t\n\t  JSONStorage = (function(superClass) {\n\t    extend(JSONStorage, superClass);\n\t\n\t    function JSONStorage() {\n\t      return JSONStorage.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    JSONStorage.prototype.setItem = function(key, value) {\n\t      var newValue;\n\t      newValue = JSON.stringify(value);\n\t      return JSONStorage.__super__.setItem.call(this, key, newValue);\n\t    };\n\t\n\t    JSONStorage.prototype.getItem = function(key) {\n\t      return JSON.parse(JSONStorage.__super__.getItem.call(this, key));\n\t    };\n\t\n\t    return JSONStorage;\n\t\n\t  })(LocalStorage);\n\t\n\t  exports.LocalStorage = LocalStorage;\n\t\n\t  exports.JSONStorage = JSONStorage;\n\t\n\t  exports.QUOTA_EXCEEDED_ERR = QUOTA_EXCEEDED_ERR;\n\t\n\t}).call(this);\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict'\n\t\n\tvar fs = __webpack_require__(2)\n\t\n\tmodule.exports = clone(fs)\n\t\n\tfunction clone (obj) {\n\t  if (obj === null || typeof obj !== 'object')\n\t    return obj\n\t\n\t  if (obj instanceof Object)\n\t    var copy = { __proto__: obj.__proto__ }\n\t  else\n\t    var copy = Object.create(null)\n\t\n\t  Object.getOwnPropertyNames(obj).forEach(function (key) {\n\t    Object.defineProperty(copy, key, Object.getOwnPropertyDescriptor(obj, key))\n\t  })\n\t\n\t  return copy\n\t}\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = bindActor\n\tfunction bindActor () {\n\t  var args = \n\t        Array.prototype.slice.call\n\t        (arguments) // jswtf.\n\t    , obj = null\n\t    , fn\n\t  if (typeof args[0] === \"object\") {\n\t    obj = args.shift()\n\t    fn = args.shift()\n\t    if (typeof fn === \"string\")\n\t      fn = obj[ fn ]\n\t  } else fn = args.shift()\n\t  return function (cb) {\n\t    fn.apply(obj, args.concat(cb)) }\n\t}\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"util\");\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_15__;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_16__;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\n\t * Copyright 2016 Amazon.com,\n\t * Inc. or its affiliates. All Rights Reserved.\n\t *\n\t * Licensed under the Amazon Software License (the \"License\").\n\t * You may not use this file except in compliance with the\n\t * License. A copy of the License is located at\n\t *\n\t *     http://aws.amazon.com/asl/\n\t *\n\t * or in the \"license\" file accompanying this file. This file is\n\t * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n\t * CONDITIONS OF ANY KIND, express or implied. See the License\n\t * for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t/** @class */\n\tvar AuthenticationDetails = function () {\n\t  /**\n\t   * Constructs a new AuthenticationDetails object\n\t   * @param {object=} data Creation options.\n\t   * @param {string} data.Username User being authenticated.\n\t   * @param {string} data.Password Plain-text password to authenticate with.\n\t   * @param {(AttributeArg[])?} data.ValidationData Application extra metadata.\n\t   */\n\t  function AuthenticationDetails(data) {\n\t    _classCallCheck(this, AuthenticationDetails);\n\t\n\t    var _ref = data || {};\n\t\n\t    var ValidationData = _ref.ValidationData;\n\t    var Username = _ref.Username;\n\t    var Password = _ref.Password;\n\t\n\t    this.validationData = ValidationData || [];\n\t    this.username = Username;\n\t    this.password = Password;\n\t  }\n\t\n\t  /**\n\t   * @returns {string} the record's username\n\t   */\n\t\n\t\n\t  _createClass(AuthenticationDetails, [{\n\t    key: \"getUsername\",\n\t    value: function getUsername() {\n\t      return this.username;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} the record's password\n\t     */\n\t\n\t  }, {\n\t    key: \"getPassword\",\n\t    value: function getPassword() {\n\t      return this.password;\n\t    }\n\t\n\t    /**\n\t     * @returns {Array} the record's validationData\n\t     */\n\t\n\t  }, {\n\t    key: \"getValidationData\",\n\t    value: function getValidationData() {\n\t      return this.validationData;\n\t    }\n\t  }]);\n\t\n\t  return AuthenticationDetails;\n\t}();\n\t\n\texports.default = AuthenticationDetails;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\n\topyright 2016 Amazon.com,\n\tnc. or its affiliates. All Rights Reserved.\n\tn\ticensed under the Amazon Software License (the \"License\").\n\tou may not use this file except in compliance with the\n\ticense. A copy of the License is located at\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *     http://aws.amazon.com/asl/\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *\n\tor in the \"license\" file accompanying this file. This file is\n\tdistributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n\texpress or implied. See the License\n\tfor the specific language governing permissions and\n\tlimitations under the License.\n\tn\t\n\tvar _nodeLocalstorage = __webpack_require__(11);\n\t\n\tvar _cognitoidentityserviceprovider = __webpack_require__(15);\n\t\n\tvar _cognitoidentityserviceprovider2 = _interopRequireDefault(_cognitoidentityserviceprovider);\n\t\n\tvar _CognitoUser = __webpack_require__(7);\n\t\n\tvar _CognitoUser2 = _interopRequireDefault(_CognitoUser);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** @class */\n\tvar CognitoUserPool = function () {\n\t  /**\n\t   * Constructs a new CognitoUserPool object\n\t   * @param {object} data Creation options.\n\t   * @param {string} data.UserPoolId Cognito user pool id.\n\t   * @param {string} data.ClientId User pool application client id.\n\t   * @param {int=} data.Paranoia Random number generation paranoia level.\n\t   */\n\t  function CognitoUserPool(data) {\n\t    _classCallCheck(this, CognitoUserPool);\n\t\n\t    var _ref = data || {};\n\t\n\t    var UserPoolId = _ref.UserPoolId;\n\t    var ClientId = _ref.ClientId;\n\t    var Paranoia = _ref.Paranoia;\n\t\n\t    if (!UserPoolId || !ClientId) {\n\t      throw new Error('Both UserPoolId and ClientId are required.');\n\t    }\n\t    if (!/^[\\w-]+_.+$/.test(UserPoolId)) {\n\t      throw new Error('Invalid UserPoolId format.');\n\t    }\n\t    var region = UserPoolId.split('_')[0];\n\t\n\t    this.userPoolId = UserPoolId;\n\t    this.clientId = ClientId;\n\t    this.paranoia = Paranoia || 0;\n\t\n\t    this.client = new _cognitoidentityserviceprovider2.default({ apiVersion: '2016-04-19', region: region });\n\t    this.localStorage = new _nodeLocalstorage.LocalStorage('./.scratch');\n\t  }\n\t\n\t  /**\n\t   * @returns {string} the user pool id\n\t   */\n\t\n\t\n\t  _createClass(CognitoUserPool, [{\n\t    key: 'getUserPoolId',\n\t    value: function getUserPoolId() {\n\t      return this.userPoolId;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} the client id\n\t     */\n\t\n\t  }, {\n\t    key: 'getClientId',\n\t    value: function getClientId() {\n\t      return this.clientId;\n\t    }\n\t\n\t    /**\n\t     * @returns {int} the paranoia level\n\t     */\n\t\n\t  }, {\n\t    key: 'getParanoia',\n\t    value: function getParanoia() {\n\t      return this.paranoia;\n\t    }\n\t\n\t    /**\n\t     * sets paranoia level\n\t     * @param {int} paranoia The new paranoia level.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setParanoia',\n\t    value: function setParanoia(paranoia) {\n\t      this.paranoia = paranoia;\n\t    }\n\t\n\t    /**\n\t     * @typedef {object} SignUpResult\n\t     * @property {CognitoUser} user New user.\n\t     * @property {bool} userConfirmed If the user is already confirmed.\n\t     */\n\t    /**\n\t     * method for signing up a user\n\t     * @param {string} username User's username.\n\t     * @param {string} password Plain-text initial password entered by user.\n\t     * @param {(AttributeArg[])=} userAttributes New user attributes.\n\t     * @param {(AttributeArg[])=} validationData Application metadata.\n\t     * @param {nodeCallback<SignUpResult>} callback Called on error or with the new user.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'signUp',\n\t    value: function signUp(username, password, userAttributes, validationData, callback) {\n\t      var _this = this;\n\t\n\t      this.client.makeUnauthenticatedRequest('signUp', {\n\t        ClientId: this.clientId,\n\t        Username: username,\n\t        Password: password,\n\t        UserAttributes: userAttributes,\n\t        ValidationData: validationData\n\t      }, function (err, data) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t\n\t        var cognitoUser = {\n\t          Username: username,\n\t          Pool: _this\n\t        };\n\t\n\t        var returnData = {\n\t          user: new _CognitoUser2.default(cognitoUser),\n\t          userConfirmed: data.UserConfirmed\n\t        };\n\t\n\t        return callback(null, returnData);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * method for getting the current user of the application from the local storage\n\t     *\n\t     * @returns {CognitoUser} the user retrieved from storage\n\t     */\n\t\n\t  }, {\n\t    key: 'getCurrentUser',\n\t    value: function getCurrentUser() {\n\t      var lastUserKey = 'CognitoIdentityServiceProvider.' + this.clientId + '.LastAuthUser';\n\t      var storage = localStorage;\n\t\n\t      var lastAuthUser = storage.getItem(lastUserKey);\n\t      if (lastAuthUser) {\n\t        var cognitoUser = {\n\t          Username: lastAuthUser,\n\t          Pool: this\n\t        };\n\t\n\t        return new _CognitoUser2.default(cognitoUser);\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return CognitoUserPool;\n\t}();\n\t\n\texports.default = CognitoUserPool;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _AuthenticationDetails = __webpack_require__(17);\n\t\n\tObject.defineProperty(exports, 'AuthenticationDetails', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_AuthenticationDetails).default;\n\t  }\n\t});\n\t\n\tvar _AuthenticationHelper = __webpack_require__(3);\n\t\n\tObject.defineProperty(exports, 'AuthenticationHelper', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_AuthenticationHelper).default;\n\t  }\n\t});\n\t\n\tvar _CognitoAccessToken = __webpack_require__(4);\n\t\n\tObject.defineProperty(exports, 'CognitoAccessToken', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoAccessToken).default;\n\t  }\n\t});\n\t\n\tvar _CognitoIdToken = __webpack_require__(5);\n\t\n\tObject.defineProperty(exports, 'CognitoIdToken', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoIdToken).default;\n\t  }\n\t});\n\t\n\tvar _CognitoRefreshToken = __webpack_require__(6);\n\t\n\tObject.defineProperty(exports, 'CognitoRefreshToken', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoRefreshToken).default;\n\t  }\n\t});\n\t\n\tvar _CognitoUser = __webpack_require__(7);\n\t\n\tObject.defineProperty(exports, 'CognitoUser', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoUser).default;\n\t  }\n\t});\n\t\n\tvar _CognitoUserAttribute = __webpack_require__(8);\n\t\n\tObject.defineProperty(exports, 'CognitoUserAttribute', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoUserAttribute).default;\n\t  }\n\t});\n\t\n\tvar _CognitoUserPool = __webpack_require__(18);\n\t\n\tObject.defineProperty(exports, 'CognitoUserPool', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoUserPool).default;\n\t  }\n\t});\n\t\n\tvar _CognitoUserSession = __webpack_require__(9);\n\t\n\tObject.defineProperty(exports, 'CognitoUserSession', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoUserSession).default;\n\t  }\n\t});\n\t\n\tvar _DateHelper = __webpack_require__(10);\n\t\n\tObject.defineProperty(exports, 'DateHelper', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_DateHelper).default;\n\t  }\n\t});\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__filename) {'use strict'\n\tvar fs = __webpack_require__(21)\n\tvar chain = __webpack_require__(27).chain\n\tvar MurmurHash3 = __webpack_require__(24)\n\tvar extend = Object.assign || __webpack_require__(14)._extend\n\t\n\tfunction murmurhex () {\n\t  var hash = new MurmurHash3()\n\t  for (var ii = 0; ii < arguments.length; ++ii) hash.hash('' + arguments[ii])\n\t  return hash.result()\n\t}\n\tvar invocations = 0\n\tvar getTmpname = function (filename) {\n\t  return filename + '.' + murmurhex(__filename, process.pid, ++invocations)\n\t}\n\t\n\tmodule.exports = function writeFile (filename, data, options, callback) {\n\t  if (options instanceof Function) {\n\t    callback = options\n\t    options = null\n\t  }\n\t  if (!options) options = {}\n\t  var tmpfile = getTmpname(filename)\n\t\n\t  if (options.mode && options.chmod) {\n\t    return thenWriteFile()\n\t  } else {\n\t    // Either mode or chown is not explicitly set\n\t    // Default behavior is to copy it from original file\n\t    return fs.stat(filename, function (err, stats) {\n\t      options = extend({}, options)\n\t      if (!err && stats && !options.mode) {\n\t        options.mode = stats.mode\n\t      }\n\t      if (!err && stats && !options.chown && process.getuid) {\n\t        options.chown = { uid: stats.uid, gid: stats.gid }\n\t      }\n\t      return thenWriteFile()\n\t    })\n\t  }\n\t\n\t  function thenWriteFile () {\n\t    chain([\n\t      [fs, fs.writeFile, tmpfile, data, options.encoding || 'utf8'],\n\t      options.mode && [fs, fs.chmod, tmpfile, options.mode],\n\t      options.chown && [fs, fs.chown, tmpfile, options.chown.uid, options.chown.gid],\n\t      [fs, fs.rename, tmpfile, filename]\n\t    ], function (err) {\n\t      err ? fs.unlink(tmpfile, function () { callback(err) })\n\t        : callback()\n\t    })\n\t  }\n\t}\n\t\n\tmodule.exports.sync = function writeFileSync (filename, data, options) {\n\t  if (!options) options = {}\n\t  var tmpfile = getTmpname(filename)\n\t\n\t  try {\n\t    if (!options.mode || !options.chmod) {\n\t      // Either mode or chown is not explicitly set\n\t      // Default behavior is to copy it from original file\n\t      try {\n\t        var stats = fs.statSync(filename)\n\t\n\t        options = extend({}, options)\n\t        if (!options.mode) {\n\t          options.mode = stats.mode\n\t        }\n\t        if (!options.chown && process.getuid) {\n\t          options.chown = { uid: stats.uid, gid: stats.gid }\n\t        }\n\t      } catch (ex) {\n\t        // ignore stat errors\n\t      }\n\t    }\n\t\n\t    fs.writeFileSync(tmpfile, data, options.encoding || 'utf8')\n\t    if (options.chown) fs.chownSync(tmpfile, options.chown.uid, options.chown.gid)\n\t    if (options.mode) fs.chmodSync(tmpfile, options.mode)\n\t    fs.renameSync(tmpfile, filename)\n\t  } catch (err) {\n\t    try { fs.unlinkSync(tmpfile) } catch (e) {}\n\t    throw err\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, \"/index.js\"))\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar fs = __webpack_require__(2)\n\tvar polyfills = __webpack_require__(23)\n\tvar legacy = __webpack_require__(22)\n\tvar queue = []\n\t\n\tvar util = __webpack_require__(14)\n\t\n\tfunction noop () {}\n\t\n\tvar debug = noop\n\tif (util.debuglog)\n\t  debug = util.debuglog('gfs4')\n\telse if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || ''))\n\t  debug = function() {\n\t    var m = util.format.apply(util, arguments)\n\t    m = 'GFS4: ' + m.split(/\\n/).join('\\nGFS4: ')\n\t    console.error(m)\n\t  }\n\t\n\tif (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || '')) {\n\t  process.on('exit', function() {\n\t    debug(queue)\n\t    __webpack_require__(28).equal(queue.length, 0)\n\t  })\n\t}\n\t\n\tmodule.exports = patch(__webpack_require__(12))\n\tif (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH) {\n\t  module.exports = patch(fs)\n\t}\n\t\n\t// Always patch fs.close/closeSync, because we want to\n\t// retry() whenever a close happens *anywhere* in the program.\n\t// This is essential when multiple graceful-fs instances are\n\t// in play at the same time.\n\tmodule.exports.close =\n\tfs.close = (function (fs$close) { return function (fd, cb) {\n\t  return fs$close.call(fs, fd, function (err) {\n\t    if (!err)\n\t      retry()\n\t\n\t    if (typeof cb === 'function')\n\t      cb.apply(this, arguments)\n\t  })\n\t}})(fs.close)\n\t\n\tmodule.exports.closeSync =\n\tfs.closeSync = (function (fs$closeSync) { return function (fd) {\n\t  // Note that graceful-fs also retries when fs.closeSync() fails.\n\t  // Looks like a bug to me, although it's probably a harmless one.\n\t  var rval = fs$closeSync.apply(fs, arguments)\n\t  retry()\n\t  return rval\n\t}})(fs.closeSync)\n\t\n\tfunction patch (fs) {\n\t  // Everything that references the open() function needs to be in here\n\t  polyfills(fs)\n\t  fs.gracefulify = patch\n\t  fs.FileReadStream = ReadStream;  // Legacy name.\n\t  fs.FileWriteStream = WriteStream;  // Legacy name.\n\t  fs.createReadStream = createReadStream\n\t  fs.createWriteStream = createWriteStream\n\t  var fs$readFile = fs.readFile\n\t  fs.readFile = readFile\n\t  function readFile (path, options, cb) {\n\t    if (typeof options === 'function')\n\t      cb = options, options = null\n\t\n\t    return go$readFile(path, options, cb)\n\t\n\t    function go$readFile (path, options, cb) {\n\t      return fs$readFile(path, options, function (err) {\n\t        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n\t          enqueue([go$readFile, [path, options, cb]])\n\t        else {\n\t          if (typeof cb === 'function')\n\t            cb.apply(this, arguments)\n\t          retry()\n\t        }\n\t      })\n\t    }\n\t  }\n\t\n\t  var fs$writeFile = fs.writeFile\n\t  fs.writeFile = writeFile\n\t  function writeFile (path, data, options, cb) {\n\t    if (typeof options === 'function')\n\t      cb = options, options = null\n\t\n\t    return go$writeFile(path, data, options, cb)\n\t\n\t    function go$writeFile (path, data, options, cb) {\n\t      return fs$writeFile(path, data, options, function (err) {\n\t        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n\t          enqueue([go$writeFile, [path, data, options, cb]])\n\t        else {\n\t          if (typeof cb === 'function')\n\t            cb.apply(this, arguments)\n\t          retry()\n\t        }\n\t      })\n\t    }\n\t  }\n\t\n\t  var fs$appendFile = fs.appendFile\n\t  if (fs$appendFile)\n\t    fs.appendFile = appendFile\n\t  function appendFile (path, data, options, cb) {\n\t    if (typeof options === 'function')\n\t      cb = options, options = null\n\t\n\t    return go$appendFile(path, data, options, cb)\n\t\n\t    function go$appendFile (path, data, options, cb) {\n\t      return fs$appendFile(path, data, options, function (err) {\n\t        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n\t          enqueue([go$appendFile, [path, data, options, cb]])\n\t        else {\n\t          if (typeof cb === 'function')\n\t            cb.apply(this, arguments)\n\t          retry()\n\t        }\n\t      })\n\t    }\n\t  }\n\t\n\t  var fs$readdir = fs.readdir\n\t  fs.readdir = readdir\n\t  function readdir (path, options, cb) {\n\t    var args = [path]\n\t    if (typeof options !== 'function') {\n\t      args.push(options)\n\t    } else {\n\t      cb = options\n\t    }\n\t    args.push(go$readdir$cb)\n\t\n\t    return go$readdir(args)\n\t\n\t    function go$readdir$cb (err, files) {\n\t      if (files && files.sort)\n\t        files.sort()\n\t\n\t      if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n\t        enqueue([go$readdir, [args]])\n\t      else {\n\t        if (typeof cb === 'function')\n\t          cb.apply(this, arguments)\n\t        retry()\n\t      }\n\t    }\n\t  }\n\t\n\t  function go$readdir (args) {\n\t    return fs$readdir.apply(fs, args)\n\t  }\n\t\n\t  if (process.version.substr(0, 4) === 'v0.8') {\n\t    var legStreams = legacy(fs)\n\t    ReadStream = legStreams.ReadStream\n\t    WriteStream = legStreams.WriteStream\n\t  }\n\t\n\t  var fs$ReadStream = fs.ReadStream\n\t  ReadStream.prototype = Object.create(fs$ReadStream.prototype)\n\t  ReadStream.prototype.open = ReadStream$open\n\t\n\t  var fs$WriteStream = fs.WriteStream\n\t  WriteStream.prototype = Object.create(fs$WriteStream.prototype)\n\t  WriteStream.prototype.open = WriteStream$open\n\t\n\t  fs.ReadStream = ReadStream\n\t  fs.WriteStream = WriteStream\n\t\n\t  function ReadStream (path, options) {\n\t    if (this instanceof ReadStream)\n\t      return fs$ReadStream.apply(this, arguments), this\n\t    else\n\t      return ReadStream.apply(Object.create(ReadStream.prototype), arguments)\n\t  }\n\t\n\t  function ReadStream$open () {\n\t    var that = this\n\t    open(that.path, that.flags, that.mode, function (err, fd) {\n\t      if (err) {\n\t        if (that.autoClose)\n\t          that.destroy()\n\t\n\t        that.emit('error', err)\n\t      } else {\n\t        that.fd = fd\n\t        that.emit('open', fd)\n\t        that.read()\n\t      }\n\t    })\n\t  }\n\t\n\t  function WriteStream (path, options) {\n\t    if (this instanceof WriteStream)\n\t      return fs$WriteStream.apply(this, arguments), this\n\t    else\n\t      return WriteStream.apply(Object.create(WriteStream.prototype), arguments)\n\t  }\n\t\n\t  function WriteStream$open () {\n\t    var that = this\n\t    open(that.path, that.flags, that.mode, function (err, fd) {\n\t      if (err) {\n\t        that.destroy()\n\t        that.emit('error', err)\n\t      } else {\n\t        that.fd = fd\n\t        that.emit('open', fd)\n\t      }\n\t    })\n\t  }\n\t\n\t  function createReadStream (path, options) {\n\t    return new ReadStream(path, options)\n\t  }\n\t\n\t  function createWriteStream (path, options) {\n\t    return new WriteStream(path, options)\n\t  }\n\t\n\t  var fs$open = fs.open\n\t  fs.open = open\n\t  function open (path, flags, mode, cb) {\n\t    if (typeof mode === 'function')\n\t      cb = mode, mode = null\n\t\n\t    return go$open(path, flags, mode, cb)\n\t\n\t    function go$open (path, flags, mode, cb) {\n\t      return fs$open(path, flags, mode, function (err, fd) {\n\t        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n\t          enqueue([go$open, [path, flags, mode, cb]])\n\t        else {\n\t          if (typeof cb === 'function')\n\t            cb.apply(this, arguments)\n\t          retry()\n\t        }\n\t      })\n\t    }\n\t  }\n\t\n\t  return fs\n\t}\n\t\n\tfunction enqueue (elem) {\n\t  debug('ENQUEUE', elem[0].name, elem[1])\n\t  queue.push(elem)\n\t}\n\t\n\tfunction retry () {\n\t  var elem = queue.shift()\n\t  if (elem) {\n\t    debug('RETRY', elem[0].name, elem[1])\n\t    elem[0].apply(null, elem[1])\n\t  }\n\t}\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Stream = __webpack_require__(32).Stream\n\t\n\tmodule.exports = legacy\n\t\n\tfunction legacy (fs) {\n\t  return {\n\t    ReadStream: ReadStream,\n\t    WriteStream: WriteStream\n\t  }\n\t\n\t  function ReadStream (path, options) {\n\t    if (!(this instanceof ReadStream)) return new ReadStream(path, options);\n\t\n\t    Stream.call(this);\n\t\n\t    var self = this;\n\t\n\t    this.path = path;\n\t    this.fd = null;\n\t    this.readable = true;\n\t    this.paused = false;\n\t\n\t    this.flags = 'r';\n\t    this.mode = 438; /*=0666*/\n\t    this.bufferSize = 64 * 1024;\n\t\n\t    options = options || {};\n\t\n\t    // Mixin options into this\n\t    var keys = Object.keys(options);\n\t    for (var index = 0, length = keys.length; index < length; index++) {\n\t      var key = keys[index];\n\t      this[key] = options[key];\n\t    }\n\t\n\t    if (this.encoding) this.setEncoding(this.encoding);\n\t\n\t    if (this.start !== undefined) {\n\t      if ('number' !== typeof this.start) {\n\t        throw TypeError('start must be a Number');\n\t      }\n\t      if (this.end === undefined) {\n\t        this.end = Infinity;\n\t      } else if ('number' !== typeof this.end) {\n\t        throw TypeError('end must be a Number');\n\t      }\n\t\n\t      if (this.start > this.end) {\n\t        throw new Error('start must be <= end');\n\t      }\n\t\n\t      this.pos = this.start;\n\t    }\n\t\n\t    if (this.fd !== null) {\n\t      process.nextTick(function() {\n\t        self._read();\n\t      });\n\t      return;\n\t    }\n\t\n\t    fs.open(this.path, this.flags, this.mode, function (err, fd) {\n\t      if (err) {\n\t        self.emit('error', err);\n\t        self.readable = false;\n\t        return;\n\t      }\n\t\n\t      self.fd = fd;\n\t      self.emit('open', fd);\n\t      self._read();\n\t    })\n\t  }\n\t\n\t  function WriteStream (path, options) {\n\t    if (!(this instanceof WriteStream)) return new WriteStream(path, options);\n\t\n\t    Stream.call(this);\n\t\n\t    this.path = path;\n\t    this.fd = null;\n\t    this.writable = true;\n\t\n\t    this.flags = 'w';\n\t    this.encoding = 'binary';\n\t    this.mode = 438; /*=0666*/\n\t    this.bytesWritten = 0;\n\t\n\t    options = options || {};\n\t\n\t    // Mixin options into this\n\t    var keys = Object.keys(options);\n\t    for (var index = 0, length = keys.length; index < length; index++) {\n\t      var key = keys[index];\n\t      this[key] = options[key];\n\t    }\n\t\n\t    if (this.start !== undefined) {\n\t      if ('number' !== typeof this.start) {\n\t        throw TypeError('start must be a Number');\n\t      }\n\t      if (this.start < 0) {\n\t        throw new Error('start must be >= zero');\n\t      }\n\t\n\t      this.pos = this.start;\n\t    }\n\t\n\t    this.busy = false;\n\t    this._queue = [];\n\t\n\t    if (this.fd === null) {\n\t      this._open = fs.open;\n\t      this._queue.push([this._open, this.path, this.flags, this.mode, undefined]);\n\t      this.flush();\n\t    }\n\t  }\n\t}\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar fs = __webpack_require__(12)\n\tvar constants = __webpack_require__(29)\n\t\n\tvar origCwd = process.cwd\n\tvar cwd = null\n\tprocess.cwd = function() {\n\t  if (!cwd)\n\t    cwd = origCwd.call(process)\n\t  return cwd\n\t}\n\ttry {\n\t  process.cwd()\n\t} catch (er) {}\n\t\n\tvar chdir = process.chdir\n\tprocess.chdir = function(d) {\n\t  cwd = null\n\t  chdir.call(process, d)\n\t}\n\t\n\tmodule.exports = patch\n\t\n\tfunction patch (fs) {\n\t  // (re-)implement some things that are known busted or missing.\n\t\n\t  // lchmod, broken prior to 0.6.2\n\t  // back-port the fix here.\n\t  if (constants.hasOwnProperty('O_SYMLINK') &&\n\t      process.version.match(/^v0\\.6\\.[0-2]|^v0\\.5\\./)) {\n\t    patchLchmod(fs)\n\t  }\n\t\n\t  // lutimes implementation, or no-op\n\t  if (!fs.lutimes) {\n\t    patchLutimes(fs)\n\t  }\n\t\n\t  // https://github.com/isaacs/node-graceful-fs/issues/4\n\t  // Chown should not fail on einval or eperm if non-root.\n\t  // It should not fail on enosys ever, as this just indicates\n\t  // that a fs doesn't support the intended operation.\n\t\n\t  fs.chown = chownFix(fs.chown)\n\t  fs.fchown = chownFix(fs.fchown)\n\t  fs.lchown = chownFix(fs.lchown)\n\t\n\t  fs.chmod = chmodFix(fs.chmod)\n\t  fs.fchmod = chmodFix(fs.fchmod)\n\t  fs.lchmod = chmodFix(fs.lchmod)\n\t\n\t  fs.chownSync = chownFixSync(fs.chownSync)\n\t  fs.fchownSync = chownFixSync(fs.fchownSync)\n\t  fs.lchownSync = chownFixSync(fs.lchownSync)\n\t\n\t  fs.chmodSync = chmodFixSync(fs.chmodSync)\n\t  fs.fchmodSync = chmodFixSync(fs.fchmodSync)\n\t  fs.lchmodSync = chmodFixSync(fs.lchmodSync)\n\t\n\t  fs.stat = statFix(fs.stat)\n\t  fs.fstat = statFix(fs.fstat)\n\t  fs.lstat = statFix(fs.lstat)\n\t\n\t  fs.statSync = statFixSync(fs.statSync)\n\t  fs.fstatSync = statFixSync(fs.fstatSync)\n\t  fs.lstatSync = statFixSync(fs.lstatSync)\n\t\n\t  // if lchmod/lchown do not exist, then make them no-ops\n\t  if (!fs.lchmod) {\n\t    fs.lchmod = function (path, mode, cb) {\n\t      if (cb) process.nextTick(cb)\n\t    }\n\t    fs.lchmodSync = function () {}\n\t  }\n\t  if (!fs.lchown) {\n\t    fs.lchown = function (path, uid, gid, cb) {\n\t      if (cb) process.nextTick(cb)\n\t    }\n\t    fs.lchownSync = function () {}\n\t  }\n\t\n\t  // on Windows, A/V software can lock the directory, causing this\n\t  // to fail with an EACCES or EPERM if the directory contains newly\n\t  // created files.  Try again on failure, for up to 1 second.\n\t  if (process.platform === \"win32\") {\n\t    fs.rename = (function (fs$rename) { return function (from, to, cb) {\n\t      var start = Date.now()\n\t      fs$rename(from, to, function CB (er) {\n\t        if (er\n\t            && (er.code === \"EACCES\" || er.code === \"EPERM\")\n\t            && Date.now() - start < 1000) {\n\t          return fs$rename(from, to, CB)\n\t        }\n\t        if (cb) cb(er)\n\t      })\n\t    }})(fs.rename)\n\t  }\n\t\n\t  // if read() returns EAGAIN, then just try it again.\n\t  fs.read = (function (fs$read) { return function (fd, buffer, offset, length, position, callback_) {\n\t    var callback\n\t    if (callback_ && typeof callback_ === 'function') {\n\t      var eagCounter = 0\n\t      callback = function (er, _, __) {\n\t        if (er && er.code === 'EAGAIN' && eagCounter < 10) {\n\t          eagCounter ++\n\t          return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n\t        }\n\t        callback_.apply(this, arguments)\n\t      }\n\t    }\n\t    return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n\t  }})(fs.read)\n\t\n\t  fs.readSync = (function (fs$readSync) { return function (fd, buffer, offset, length, position) {\n\t    var eagCounter = 0\n\t    while (true) {\n\t      try {\n\t        return fs$readSync.call(fs, fd, buffer, offset, length, position)\n\t      } catch (er) {\n\t        if (er.code === 'EAGAIN' && eagCounter < 10) {\n\t          eagCounter ++\n\t          continue\n\t        }\n\t        throw er\n\t      }\n\t    }\n\t  }})(fs.readSync)\n\t}\n\t\n\tfunction patchLchmod (fs) {\n\t  fs.lchmod = function (path, mode, callback) {\n\t    fs.open( path\n\t           , constants.O_WRONLY | constants.O_SYMLINK\n\t           , mode\n\t           , function (err, fd) {\n\t      if (err) {\n\t        if (callback) callback(err)\n\t        return\n\t      }\n\t      // prefer to return the chmod error, if one occurs,\n\t      // but still try to close, and report closing errors if they occur.\n\t      fs.fchmod(fd, mode, function (err) {\n\t        fs.close(fd, function(err2) {\n\t          if (callback) callback(err || err2)\n\t        })\n\t      })\n\t    })\n\t  }\n\t\n\t  fs.lchmodSync = function (path, mode) {\n\t    var fd = fs.openSync(path, constants.O_WRONLY | constants.O_SYMLINK, mode)\n\t\n\t    // prefer to return the chmod error, if one occurs,\n\t    // but still try to close, and report closing errors if they occur.\n\t    var threw = true\n\t    var ret\n\t    try {\n\t      ret = fs.fchmodSync(fd, mode)\n\t      threw = false\n\t    } finally {\n\t      if (threw) {\n\t        try {\n\t          fs.closeSync(fd)\n\t        } catch (er) {}\n\t      } else {\n\t        fs.closeSync(fd)\n\t      }\n\t    }\n\t    return ret\n\t  }\n\t}\n\t\n\tfunction patchLutimes (fs) {\n\t  if (constants.hasOwnProperty(\"O_SYMLINK\")) {\n\t    fs.lutimes = function (path, at, mt, cb) {\n\t      fs.open(path, constants.O_SYMLINK, function (er, fd) {\n\t        if (er) {\n\t          if (cb) cb(er)\n\t          return\n\t        }\n\t        fs.futimes(fd, at, mt, function (er) {\n\t          fs.close(fd, function (er2) {\n\t            if (cb) cb(er || er2)\n\t          })\n\t        })\n\t      })\n\t    }\n\t\n\t    fs.lutimesSync = function (path, at, mt) {\n\t      var fd = fs.openSync(path, constants.O_SYMLINK)\n\t      var ret\n\t      var threw = true\n\t      try {\n\t        ret = fs.futimesSync(fd, at, mt)\n\t        threw = false\n\t      } finally {\n\t        if (threw) {\n\t          try {\n\t            fs.closeSync(fd)\n\t          } catch (er) {}\n\t        } else {\n\t          fs.closeSync(fd)\n\t        }\n\t      }\n\t      return ret\n\t    }\n\t\n\t  } else {\n\t    fs.lutimes = function (_a, _b, _c, cb) { if (cb) process.nextTick(cb) }\n\t    fs.lutimesSync = function () {}\n\t  }\n\t}\n\t\n\tfunction chmodFix (orig) {\n\t  if (!orig) return orig\n\t  return function (target, mode, cb) {\n\t    return orig.call(fs, target, mode, function (er) {\n\t      if (chownErOk(er)) er = null\n\t      if (cb) cb.apply(this, arguments)\n\t    })\n\t  }\n\t}\n\t\n\tfunction chmodFixSync (orig) {\n\t  if (!orig) return orig\n\t  return function (target, mode) {\n\t    try {\n\t      return orig.call(fs, target, mode)\n\t    } catch (er) {\n\t      if (!chownErOk(er)) throw er\n\t    }\n\t  }\n\t}\n\t\n\t\n\tfunction chownFix (orig) {\n\t  if (!orig) return orig\n\t  return function (target, uid, gid, cb) {\n\t    return orig.call(fs, target, uid, gid, function (er) {\n\t      if (chownErOk(er)) er = null\n\t      if (cb) cb.apply(this, arguments)\n\t    })\n\t  }\n\t}\n\t\n\tfunction chownFixSync (orig) {\n\t  if (!orig) return orig\n\t  return function (target, uid, gid) {\n\t    try {\n\t      return orig.call(fs, target, uid, gid)\n\t    } catch (er) {\n\t      if (!chownErOk(er)) throw er\n\t    }\n\t  }\n\t}\n\t\n\t\n\tfunction statFix (orig) {\n\t  if (!orig) return orig\n\t  // Older versions of Node erroneously returned signed integers for\n\t  // uid + gid.\n\t  return function (target, cb) {\n\t    return orig.call(fs, target, function (er, stats) {\n\t      if (!stats) return cb.apply(this, arguments)\n\t      if (stats.uid < 0) stats.uid += 0x100000000\n\t      if (stats.gid < 0) stats.gid += 0x100000000\n\t      if (cb) cb.apply(this, arguments)\n\t    })\n\t  }\n\t}\n\t\n\tfunction statFixSync (orig) {\n\t  if (!orig) return orig\n\t  // Older versions of Node erroneously returned signed integers for\n\t  // uid + gid.\n\t  return function (target) {\n\t    var stats = orig.call(fs, target)\n\t    if (stats.uid < 0) stats.uid += 0x100000000\n\t    if (stats.gid < 0) stats.gid += 0x100000000\n\t    return stats;\n\t  }\n\t}\n\t\n\t// ENOSYS means that the fs doesn't support the op. Just ignore\n\t// that, because it doesn't matter.\n\t//\n\t// if there's no getuid, or if getuid() is something other\n\t// than 0, and the error is EINVAL or EPERM, then just ignore\n\t// it.\n\t//\n\t// This specific case is a silent failure in cp, install, tar,\n\t// and most other unix tools that manage permissions.\n\t//\n\t// When running as root, or if other types of errors are\n\t// encountered, then it's strict.\n\tfunction chownErOk (er) {\n\t  if (!er)\n\t    return true\n\t\n\t  if (er.code === \"ENOSYS\")\n\t    return true\n\t\n\t  var nonroot = !process.getuid || process.getuid() !== 0\n\t  if (nonroot) {\n\t    if (er.code === \"EINVAL\" || er.code === \"EPERM\")\n\t      return true\n\t  }\n\t\n\t  return false\n\t}\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @preserve\n\t * JS Implementation of incremental MurmurHash3 (r150) (as of May 10, 2013)\n\t *\n\t * @author <a href=\"mailto:jensyt@gmail.com\">Jens Taylor</a>\n\t * @see http://github.com/homebrewing/brauhaus-diff\n\t * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n\t * @see http://github.com/garycourt/murmurhash-js\n\t * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n\t * @see http://sites.google.com/site/murmurhash/\n\t */\n\t(function(){\n\t    var cache;\n\t\n\t    // Call this function without `new` to use the cached object (good for\n\t    // single-threaded environments), or with `new` to create a new object.\n\t    //\n\t    // @param {string} key A UTF-16 or ASCII string\n\t    // @param {number} seed An optional positive integer\n\t    // @return {object} A MurmurHash3 object for incremental hashing\n\t    function MurmurHash3(key, seed) {\n\t        var m = this instanceof MurmurHash3 ? this : cache;\n\t        m.reset(seed)\n\t        if (typeof key === 'string' && key.length > 0) {\n\t            m.hash(key);\n\t        }\n\t\n\t        if (m !== this) {\n\t            return m;\n\t        }\n\t    };\n\t\n\t    // Incrementally add a string to this hash\n\t    //\n\t    // @param {string} key A UTF-16 or ASCII string\n\t    // @return {object} this\n\t    MurmurHash3.prototype.hash = function(key) {\n\t        var h1, k1, i, top, len;\n\t\n\t        len = key.length;\n\t        this.len += len;\n\t\n\t        k1 = this.k1;\n\t        i = 0;\n\t        switch (this.rem) {\n\t            case 0: k1 ^= len > i ? (key.charCodeAt(i++) & 0xffff) : 0;\n\t            case 1: k1 ^= len > i ? (key.charCodeAt(i++) & 0xffff) << 8 : 0;\n\t            case 2: k1 ^= len > i ? (key.charCodeAt(i++) & 0xffff) << 16 : 0;\n\t            case 3:\n\t                k1 ^= len > i ? (key.charCodeAt(i) & 0xff) << 24 : 0;\n\t                k1 ^= len > i ? (key.charCodeAt(i++) & 0xff00) >> 8 : 0;\n\t        }\n\t\n\t        this.rem = (len + this.rem) & 3; // & 3 is same as % 4\n\t        len -= this.rem;\n\t        if (len > 0) {\n\t            h1 = this.h1;\n\t            while (1) {\n\t                k1 = (k1 * 0x2d51 + (k1 & 0xffff) * 0xcc9e0000) & 0xffffffff;\n\t                k1 = (k1 << 15) | (k1 >>> 17);\n\t                k1 = (k1 * 0x3593 + (k1 & 0xffff) * 0x1b870000) & 0xffffffff;\n\t\n\t                h1 ^= k1;\n\t                h1 = (h1 << 13) | (h1 >>> 19);\n\t                h1 = (h1 * 5 + 0xe6546b64) & 0xffffffff;\n\t\n\t                if (i >= len) {\n\t                    break;\n\t                }\n\t\n\t                k1 = ((key.charCodeAt(i++) & 0xffff)) ^\n\t                     ((key.charCodeAt(i++) & 0xffff) << 8) ^\n\t                     ((key.charCodeAt(i++) & 0xffff) << 16);\n\t                top = key.charCodeAt(i++);\n\t                k1 ^= ((top & 0xff) << 24) ^\n\t                      ((top & 0xff00) >> 8);\n\t            }\n\t\n\t            k1 = 0;\n\t            switch (this.rem) {\n\t                case 3: k1 ^= (key.charCodeAt(i + 2) & 0xffff) << 16;\n\t                case 2: k1 ^= (key.charCodeAt(i + 1) & 0xffff) << 8;\n\t                case 1: k1 ^= (key.charCodeAt(i) & 0xffff);\n\t            }\n\t\n\t            this.h1 = h1;\n\t        }\n\t\n\t        this.k1 = k1;\n\t        return this;\n\t    };\n\t\n\t    // Get the result of this hash\n\t    //\n\t    // @return {number} The 32-bit hash\n\t    MurmurHash3.prototype.result = function() {\n\t        var k1, h1;\n\t        \n\t        k1 = this.k1;\n\t        h1 = this.h1;\n\t\n\t        if (k1 > 0) {\n\t            k1 = (k1 * 0x2d51 + (k1 & 0xffff) * 0xcc9e0000) & 0xffffffff;\n\t            k1 = (k1 << 15) | (k1 >>> 17);\n\t            k1 = (k1 * 0x3593 + (k1 & 0xffff) * 0x1b870000) & 0xffffffff;\n\t            h1 ^= k1;\n\t        }\n\t\n\t        h1 ^= this.len;\n\t\n\t        h1 ^= h1 >>> 16;\n\t        h1 = (h1 * 0xca6b + (h1 & 0xffff) * 0x85eb0000) & 0xffffffff;\n\t        h1 ^= h1 >>> 13;\n\t        h1 = (h1 * 0xae35 + (h1 & 0xffff) * 0xc2b20000) & 0xffffffff;\n\t        h1 ^= h1 >>> 16;\n\t\n\t        return h1 >>> 0;\n\t    };\n\t\n\t    // Reset the hash object for reuse\n\t    //\n\t    // @param {number} seed An optional positive integer\n\t    MurmurHash3.prototype.reset = function(seed) {\n\t        this.h1 = typeof seed === 'number' ? seed : 0;\n\t        this.rem = this.k1 = this.len = 0;\n\t        return this;\n\t    };\n\t\n\t    // A cached object to use. This can be safely used if you're in a single-\n\t    // threaded environment, otherwise you need to create new hashes to use.\n\t    cache = new MurmurHash3();\n\t\n\t    if (true) {\n\t        module.exports = MurmurHash3;\n\t    } else {\n\t        this.MurmurHash3 = MurmurHash3;\n\t    }\n\t}());\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t\n\t/*\n\tusage:\n\t\n\t// do something to a list of things\n\tasyncMap(myListOfStuff, function (thing, cb) { doSomething(thing.foo, cb) }, cb)\n\t// do more than one thing to each item\n\tasyncMap(list, fooFn, barFn, cb)\n\t\n\t*/\n\t\n\tmodule.exports = asyncMap\n\t\n\tfunction asyncMap () {\n\t  var steps = Array.prototype.slice.call(arguments)\n\t    , list = steps.shift() || []\n\t    , cb_ = steps.pop()\n\t  if (typeof cb_ !== \"function\") throw new Error(\n\t    \"No callback provided to asyncMap\")\n\t  if (!list) return cb_(null, [])\n\t  if (!Array.isArray(list)) list = [list]\n\t  var n = steps.length\n\t    , data = [] // 2d array\n\t    , errState = null\n\t    , l = list.length\n\t    , a = l * n\n\t  if (!a) return cb_(null, [])\n\t  function cb (er) {\n\t    if (er && !errState) errState = er\n\t\n\t    var argLen = arguments.length\n\t    for (var i = 1; i < argLen; i ++) if (arguments[i] !== undefined) {\n\t      data[i - 1] = (data[i - 1] || []).concat(arguments[i])\n\t    }\n\t    // see if any new things have been added.\n\t    if (list.length > l) {\n\t      var newList = list.slice(l)\n\t      a += (list.length - l) * n\n\t      l = list.length\n\t      process.nextTick(function () {\n\t        newList.forEach(function (ar) {\n\t          steps.forEach(function (fn) { fn(ar, cb) })\n\t        })\n\t      })\n\t    }\n\t\n\t    if (--a === 0) cb_.apply(null, [errState].concat(data))\n\t  }\n\t  // expect the supplied cb function to be called\n\t  // \"n\" times for each thing in the array.\n\t  list.forEach(function (ar) {\n\t    steps.forEach(function (fn) { fn(ar, cb) })\n\t  })\n\t}\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = chain\n\tvar bindActor = __webpack_require__(13)\n\tchain.first = {} ; chain.last = {}\n\tfunction chain (things, cb) {\n\t  var res = []\n\t  ;(function LOOP (i, len) {\n\t    if (i >= len) return cb(null,res)\n\t    if (Array.isArray(things[i]))\n\t      things[i] = bindActor.apply(null,\n\t        things[i].map(function(i){\n\t          return (i===chain.first) ? res[0]\n\t           : (i===chain.last)\n\t             ? res[res.length - 1] : i }))\n\t    if (!things[i]) return LOOP(i + 1, len)\n\t    things[i](function (er, data) {\n\t      if (er) return cb(er, res)\n\t      if (data !== undefined) res = res.concat(data)\n\t      LOOP(i + 1, len)\n\t    })\n\t  })(0, things.length) }\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports.asyncMap = __webpack_require__(25)\n\texports.bindActor = __webpack_require__(13)\n\texports.chain = __webpack_require__(26)\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"assert\");\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"constants\");\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"events\");\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"path\");\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"stream\");\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** amazon-cognito-identity.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 32c4d0703a3baacba887\n **/","import CognitoIdentityServiceProvider from 'aws-sdk/clients/cognitoidentityserviceprovider';\nimport * as enhancements from './src';\n\nexport * from './src';\n\nObject.keys(enhancements).forEach(key => {\n  CognitoIdentityServiceProvider[key] = enhancements[key];\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./enhance.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"sjcl\"\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = require(\"fs\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"fs\"\n ** module id = 2\n ** module chunks = 0\n **/","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as sjcl from 'sjcl';\nimport { BigInteger } from 'jsbn';\n\nconst initN = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1'\n  + '29024E088A67CC74020BBEA63B139B22514A08798E3404DD'\n  + 'EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245'\n  + 'E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED'\n  + 'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3D'\n  + 'C2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F'\n  + '83655D23DCA3AD961C62F356208552BB9ED529077096966D'\n  + '670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B'\n  + 'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9'\n  + 'DE2BCBF6955817183995497CEA956AE515D2261898FA0510'\n  + '15728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64'\n  + 'ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7'\n  + 'ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6B'\n  + 'F12FFA06D98A0864D87602733EC86A64521F2B18177B200C'\n  + 'BBE117577A615D6C770988C0BAD946E208E24FA074E5AB31'\n  + '43DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF';\n\nconst newPasswordRequiredChallengeUserAttributePrefix = 'userAttributes.';\n\n/** @class */\nexport default class AuthenticationHelper {\n  /**\n   * Constructs a new AuthenticationHelper object\n   * @param {string} PoolName Cognito user pool name.\n   * @param {int} paranoia Random number generation paranoia level.\n   */\n  constructor(PoolName, paranoia) {\n    this.N = new BigInteger(initN, 16);\n    this.g = new BigInteger('2');\n    this.k = new BigInteger(this.hexHash(`00${this.N.toString(16)}0${this.g.toString(16)}`), 16);\n\n    this.paranoia = paranoia;\n\n    this.smallAValue = this.generateRandomSmallA();\n    this.largeAValue = this.calculateA(this.smallAValue);\n\n    this.infoBits = sjcl.codec.utf8String.toBits('Caldera Derived Key');\n\n    this.poolName = PoolName;\n  }\n\n  /**\n   * @returns {BigInteger} small A, a random number\n   */\n  getSmallAValue() {\n    return this.smallAValue;\n  }\n\n  /**\n   * @returns {BigInteger} large A, a value generated from small A\n   */\n  getLargeAValue() {\n    return this.largeAValue;\n  }\n\n  /**\n   * helper function to generate a random big integer\n   * @returns {BigInteger} a random value.\n   * @private\n   */\n  generateRandomSmallA() {\n    const words = sjcl.random.randomWords(32, this.paranoia);\n    const hexRandom = sjcl.codec.hex.fromBits(words);\n\n    const randomBigInt = new BigInteger(hexRandom, 16);\n    const smallABigInt = randomBigInt.mod(this.N);\n\n    return smallABigInt;\n  }\n\n  /**\n   * helper function to generate a random string\n   * @returns {string} a random value.\n   * @private\n   */\n  generateRandomString() {\n    const words = sjcl.random.randomWords(10, this.paranoia);\n    const stringRandom = sjcl.codec.base64.fromBits(words);\n\n    return stringRandom;\n  }\n\n  /**\n   * @returns {string} Generated random value included in password hash.\n   */\n  getRandomPassword() {\n    return this.randomPassword;\n  }\n\n  /**\n   * @returns {string} Generated random value included in devices hash.\n   */\n  getSaltDevices() {\n    return this.SaltToHashDevices;\n  }\n\n  /**\n   * @returns {string} Value used to verify devices.\n   */\n  getVerifierDevices() {\n    return this.verifierDevices;\n  }\n\n  /**\n   * Generate salts and compute verifier.\n   * @param {string} deviceGroupKey Devices to generate verifier for.\n   * @param {string} username User to generate verifier for.\n   * @returns {void}\n   */\n  generateHashDevice(deviceGroupKey, username) {\n    this.randomPassword = this.generateRandomString();\n    const combinedString = `${deviceGroupKey}${username}:${this.randomPassword}`;\n    const hashedString = this.hash(combinedString);\n\n    const words = sjcl.random.randomWords(4, this.paranoia);\n    const hexRandom = sjcl.codec.hex.fromBits(words);\n    const saltDevices = new BigInteger(hexRandom, 16);\n    const firstCharSalt = saltDevices.toString(16)[0];\n    this.SaltToHashDevices = saltDevices.toString(16);\n\n    if (saltDevices.toString(16).length % 2 === 1) {\n      this.SaltToHashDevices = `0${this.SaltToHashDevices}`;\n    } else if ('89ABCDEFabcdef'.indexOf(firstCharSalt) !== -1) {\n      this.SaltToHashDevices = `00${this.SaltToHashDevices}`;\n    }\n    const verifierDevicesNotPadded = this.g.modPow(\n      new BigInteger(this.hexHash(this.SaltToHashDevices + hashedString), 16),\n      this.N);\n\n    const firstCharVerifierDevices = verifierDevicesNotPadded.toString(16)[0];\n    this.verifierDevices = verifierDevicesNotPadded.toString(16);\n\n    if (verifierDevicesNotPadded.toString(16).length % 2 === 1) {\n      this.verifierDevices = `0${this.verifierDevices}`;\n    } else if ('89ABCDEFabcdef'.indexOf(firstCharVerifierDevices) !== -1) {\n      this.verifierDevices = `00${this.verifierDevices}`;\n    }\n  }\n\n  /**\n   * Calculate the client's public value A = g^a%N\n   * with the generated random number a\n   * @param {BigInteger} a Randomly generated small A.\n   * @returns {BigInteger} Computed large A.\n   * @private\n   */\n  calculateA(a) {\n    const A = this.g.modPow(a, this.N);\n\n    if (A.mod(this.N).toString() === '0') {\n      throw new Error('Illegal paramater. A mod N cannot be 0.');\n    }\n    return A;\n  }\n\n  /**\n   * Calculate the client's value U which is the hash of A and B\n   * @param {BigInteger} A Large A value.\n   * @param {BigInteger} B Server B value.\n   * @returns {BigInteger} Computed U value.\n   * @private\n   */\n  calculateU(A, B) {\n    const firstCharA = A.toString(16)[0];\n    const firstCharB = B.toString(16)[0];\n    let AToHash = A.toString(16);\n    let BToHash = B.toString(16);\n\n    if (A.toString(16).length % 2 === 1) {\n      AToHash = `0${AToHash}`;\n    } else if ('89ABCDEFabcdef'.indexOf(firstCharA) !== -1) {\n      AToHash = `00${AToHash}`;\n    }\n\n    if (B.toString(16).length % 2 === 1) {\n      BToHash = `0${BToHash}`;\n    } else if ('89ABCDEFabcdef'.indexOf(firstCharB) !== -1) {\n      BToHash = `00${BToHash}`;\n    }\n\n    this.UHexHash = this.hexHash(AToHash + BToHash);\n    const finalU = new BigInteger(this.UHexHash, 16);\n\n    return finalU;\n  }\n\n  /**\n   * Calculate a hash from a bitArray\n   * @param {sjcl.bitArray} bitArray Value to hash.\n   * @returns {String} Hex-encoded hash.\n   * @private\n   */\n  hash(bitArray) {\n    const hashHex = sjcl.codec.hex.fromBits(sjcl.hash.sha256.hash(bitArray));\n    return (new Array(64 - hashHex.length).join('0')) + hashHex;\n  }\n\n  /**\n   * Calculate a hash from a hex string\n   * @param {String} hexStr Value to hash.\n   * @returns {String} Hex-encoded hash.\n   * @private\n   */\n  hexHash(hexStr) {\n    const hashHex = sjcl.codec.hex.fromBits(sjcl.hash.sha256.hash(sjcl.codec.hex.toBits(hexStr)));\n    return (new Array(64 - hashHex.length).join('0')) + hashHex;\n  }\n\n  /**\n   * Standard hkdf algorithm\n   * @param {sjcl.bitArray} ikm Input key material.\n   * @param {sjcl.bitArray} salt Salt value.\n   * @returns {sjcl.bitArray} Strong key material.\n   * @private\n   */\n  computehkdf(ikm, salt) {\n    const mac = new sjcl.misc.hmac(salt, sjcl.hash.sha256);\n    mac.update(ikm);\n    const prk = mac.digest();\n    const hmac = new sjcl.misc.hmac(prk, sjcl.hash.sha256);\n    const infoBitsUpdate = sjcl.bitArray.concat(\n      this.infoBits,\n      sjcl.codec.utf8String.toBits(String.fromCharCode(1)));\n    hmac.update(infoBitsUpdate);\n\n    return sjcl.bitArray.clamp(hmac.digest(), 128);\n  }\n\n  /**\n   * Calculates the final hkdf based on computed S value, and computed U value and the key\n   * @param {String} username Username.\n   * @param {String} password Password.\n   * @param {BigInteger} serverBValue Server B value.\n   * @param {BigInteger} salt Generated salt.\n   * @returns {sjcl.bitArray} Computed HKDF value.\n   */\n  getPasswordAuthenticationKey(username, password, serverBValue, salt) {\n    if (serverBValue.mod(this.N).equals(new BigInteger('0', 16))) {\n      throw new Error('B cannot be zero.');\n    }\n\n    this.UValue = this.calculateU(this.largeAValue, serverBValue);\n\n    if (this.UValue.equals(new BigInteger('0', 16))) {\n      throw new Error('U cannot be zero.');\n    }\n\n    const usernamePassword = `${this.poolName}${username}:${password}`;\n    const usernamePasswordHash = this.hash(usernamePassword);\n\n    const firstCharSalt = salt.toString(16)[0];\n    let SaltToHash = salt.toString(16);\n\n    if (salt.toString(16).length % 2 === 1) {\n      SaltToHash = `0${SaltToHash}`;\n    } else if ('89ABCDEFabcdef'.indexOf(firstCharSalt) !== -1) {\n      SaltToHash = `00${SaltToHash}`;\n    }\n\n    const xValue = new BigInteger(this.hexHash(SaltToHash + usernamePasswordHash), 16);\n\n    const gModPowXN = this.g.modPow(xValue, this.N);\n    const intValue2 = serverBValue.subtract(this.k.multiply(gModPowXN));\n    const sValue = intValue2.modPow(\n      this.smallAValue.add(this.UValue.multiply(xValue)),\n      this.N\n    ).mod(this.N);\n\n    let SToHash = sValue.toString(16);\n    const firstCharS = sValue.toString(16)[0];\n\n    if (sValue.toString(16).length % 2 === 1) {\n      SToHash = `0${SToHash}`;\n    } else if ('89ABCDEFabcdef'.indexOf(firstCharS) !== -1) {\n      SToHash = `00${SToHash}`;\n    }\n\n    let UValueToHash = this.UHexHash;\n    const firstCharU = this.UHexHash[0];\n\n    if (this.UHexHash.length % 2 === 1) {\n      UValueToHash = `0${UValueToHash}`;\n    } else if (this.UHexHash.length % 2 === 0 && '89ABCDEFabcdef'.indexOf(firstCharU) !== -1) {\n      UValueToHash = `00${UValueToHash}`;\n    }\n\n    const hkdf = this.computehkdf(\n      sjcl.codec.hex.toBits(SToHash),\n      sjcl.codec.hex.toBits(UValueToHash));\n\n    return hkdf;\n  }\n\n  /**\n  * Return constant newPasswordRequiredChallengeUserAttributePrefix\n  * @return {newPasswordRequiredChallengeUserAttributePrefix} constant prefix value\n  */\n  getNewPasswordRequiredChallengeUserAttributePrefix() {\n    return newPasswordRequiredChallengeUserAttributePrefix;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/AuthenticationHelper.js\n **/","/*\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as sjcl from 'sjcl';\n\n/** @class */\nexport default class CognitoAccessToken {\n  /**\n   * Constructs a new CognitoAccessToken object\n   * @param {string=} AccessToken The JWT access token.\n   */\n  constructor({ AccessToken } = {}) {\n    // Assign object\n    this.jwtToken = AccessToken || '';\n  }\n\n  /**\n   * @returns {string} the record's token.\n   */\n  getJwtToken() {\n    return this.jwtToken;\n  }\n\n  /**\n   * @returns {int} the token's expiration (exp member).\n   */\n  getExpiration() {\n    const payload = this.jwtToken.split('.')[1];\n    const expiration = JSON.parse(\n      sjcl.codec.utf8String.fromBits(sjcl.codec.base64url.toBits(payload)));\n    return expiration.exp;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/CognitoAccessToken.js\n **/","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as sjcl from 'sjcl';\n\n/** @class */\nexport default class CognitoIdToken {\n  /**\n   * Constructs a new CognitoIdToken object\n   * @param {string=} IdToken The JWT Id token\n   */\n  constructor({ IdToken } = {}) {\n    // Assign object\n    this.jwtToken = IdToken || '';\n  }\n\n  /**\n   * @returns {string} the record's token.\n   */\n  getJwtToken() {\n    return this.jwtToken;\n  }\n\n  /**\n   * @returns {int} the token's expiration (exp member).\n   */\n  getExpiration() {\n    const payload = this.jwtToken.split('.')[1];\n    const expiration = JSON.parse(\n      sjcl.codec.utf8String.fromBits(sjcl.codec.base64url.toBits(payload)));\n    return expiration.exp;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/CognitoIdToken.js\n **/","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nexport default class CognitoRefreshToken {\n  /**\n   * Constructs a new CognitoRefreshToken object\n   * @param {string=} RefreshToken The JWT refresh token.\n   */\n  constructor({ RefreshToken } = {}) {\n    // Assign object\n    this.token = RefreshToken || '';\n  }\n\n  /**\n   * @returns {string} the record's token.\n   */\n  getToken() {\n    return this.token;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/CognitoRefreshToken.js\n **/","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as sjcl from 'sjcl';\nimport { BigInteger } from 'jsbn';\nimport { LocalStorage } from 'node-localstorage';\n\nimport AuthenticationHelper from './AuthenticationHelper';\nimport CognitoAccessToken from './CognitoAccessToken';\nimport CognitoIdToken from './CognitoIdToken';\nimport CognitoRefreshToken from './CognitoRefreshToken';\nimport CognitoUserSession from './CognitoUserSession';\nimport DateHelper from './DateHelper';\nimport CognitoUserAttribute from './CognitoUserAttribute';\n\n/**\n * @callback nodeCallback\n * @template T result\n * @param {*} err The operation failure reason, or null.\n * @param {T} result The operation result.\n */\n\n/**\n * @callback onFailure\n * @param {*} err Failure reason.\n */\n\n/**\n * @callback onSuccess\n * @template T result\n * @param {T} result The operation result.\n */\n\n/**\n * @callback mfaRequired\n * @param {*} details MFA challenge details.\n */\n\n/**\n * @callback customChallenge\n * @param {*} details Custom challenge details.\n */\n\n/**\n * @callback inputVerificationCode\n * @param {*} data Server response.\n */\n\n/**\n * @callback authSuccess\n * @param {CognitoUserSession} session The new session.\n * @param {bool=} userConfirmationNecessary User must be confirmed.\n */\n\n\n/** @class */\nexport default class CognitoUser {\n  /**\n   * Constructs a new CognitoUser object\n   * @param {object} data Creation options\n   * @param {string} data.Username The user's username.\n   * @param {CognitoUserPool} data.Pool Pool containing the user.\n   */\n  constructor(data) {\n    if (data == null || data.Username == null || data.Pool == null) {\n      throw new Error('Username and pool information are required.');\n    }\n\n    this.username = data.Username || '';\n    this.pool = data.Pool;\n    this.Session = null;\n\n    this.client = data.Pool.client;\n\n    this.signInUserSession = null;\n    this.authenticationFlowType = 'USER_SRP_AUTH';\n    this.localStorage = new LocalStorage('./.scratch');\n  }\n\n  /**\n   * @returns {CognitoUserSession} the current session for this user\n   */\n  getSignInUserSession() {\n    return this.signInUserSession;\n  }\n\n  /**\n   * @returns {string} the user's username\n   */\n  getUsername() {\n    return this.username;\n  }\n\n  /**\n   * @returns {String} the authentication flow type\n   */\n  getAuthenticationFlowType() {\n    return this.authenticationFlowType;\n  }\n\n  /**\n   * sets authentication flow type\n   * @param {string} authenticationFlowType New value.\n   * @returns {void}\n   */\n  setAuthenticationFlowType(authenticationFlowType) {\n    this.authenticationFlowType = authenticationFlowType;\n  }\n\n  /**\n   * This is used for authenticating the user. it calls the AuthenticationHelper for SRP related\n   * stuff\n   * @param {AuthenticationDetails} authDetails Contains the authentication data\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {newPasswordRequired} callback.newPasswordRequired new\n   *        password and any required attributes are required to continue\n   * @param {mfaRequired} callback.mfaRequired MFA code\n   *        required to continue.\n   * @param {customChallenge} callback.customChallenge Custom challenge\n   *        response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n  authenticateUser(authDetails, callback) {\n    const authenticationHelper = new AuthenticationHelper(\n      this.pool.getUserPoolId().split('_')[1],\n      this.pool.getParanoia());\n    const dateHelper = new DateHelper();\n\n    let serverBValue;\n    let salt;\n    const authParameters = {};\n\n    if (this.deviceKey != null) {\n      authParameters.DEVICE_KEY = this.deviceKey;\n    }\n\n    authParameters.USERNAME = this.username;\n    authParameters.SRP_A = authenticationHelper.getLargeAValue().toString(16);\n\n    if (this.authenticationFlowType === 'CUSTOM_AUTH') {\n      authParameters.CHALLENGE_NAME = 'SRP_A';\n    }\n\n    this.client.makeUnauthenticatedRequest('initiateAuth', {\n      AuthFlow: this.authenticationFlowType,\n      ClientId: this.pool.getClientId(),\n      AuthParameters: authParameters,\n      ClientMetadata: authDetails.getValidationData(),\n    }, (err, data) => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      const challengeParameters = data.ChallengeParameters;\n\n      this.username = challengeParameters.USER_ID_FOR_SRP;\n      serverBValue = new BigInteger(challengeParameters.SRP_B, 16);\n      salt = new BigInteger(challengeParameters.SALT, 16);\n      this.getCachedDeviceKeyAndPassword();\n\n      const hkdf = authenticationHelper.getPasswordAuthenticationKey(\n        this.username,\n        authDetails.getPassword(),\n        serverBValue,\n        salt);\n      const secretBlockBits = sjcl.codec.base64.toBits(challengeParameters.SECRET_BLOCK);\n\n      const mac = new sjcl.misc.hmac(hkdf, sjcl.hash.sha256);\n      mac.update(sjcl.codec.utf8String.toBits(this.pool.getUserPoolId().split('_')[1]));\n      mac.update(sjcl.codec.utf8String.toBits(this.username));\n      mac.update(secretBlockBits);\n      const dateNow = dateHelper.getNowString();\n      mac.update(sjcl.codec.utf8String.toBits(dateNow));\n      const signature = mac.digest();\n      const signatureString = sjcl.codec.base64.fromBits(signature);\n\n      const challengeResponses = {};\n\n      challengeResponses.USERNAME = this.username;\n      challengeResponses.PASSWORD_CLAIM_SECRET_BLOCK = challengeParameters.SECRET_BLOCK;\n      challengeResponses.TIMESTAMP = dateNow;\n      challengeResponses.PASSWORD_CLAIM_SIGNATURE = signatureString;\n\n      if (this.deviceKey != null) {\n        challengeResponses.DEVICE_KEY = this.deviceKey;\n      }\n\n      this.client.makeUnauthenticatedRequest('respondToAuthChallenge', {\n        ChallengeName: 'PASSWORD_VERIFIER',\n        ClientId: this.pool.getClientId(),\n        ChallengeResponses: challengeResponses,\n        Session: data.Session,\n      }, (errAuthenticate, dataAuthenticate) => {\n        if (errAuthenticate) {\n          return callback.onFailure(errAuthenticate);\n        }\n\n        const challengeName = dataAuthenticate.ChallengeName;\n        if (challengeName === 'NEW_PASSWORD_REQUIRED') {\n          this.Session = dataAuthenticate.Session;\n          let userAttributes = null;\n          let rawRequiredAttributes = null;\n          const requiredAttributes = [];\n          const userAttributesPrefix = authenticationHelper\n            .getNewPasswordRequiredChallengeUserAttributePrefix();\n\n          if (dataAuthenticate.ChallengeParameters) {\n            userAttributes = JSON.parse(\n              dataAuthenticate.ChallengeParameters.userAttributes);\n            rawRequiredAttributes = JSON.parse(\n              dataAuthenticate.ChallengeParameters.requiredAttributes);\n          }\n\n          if (rawRequiredAttributes) {\n            for (let i = 0; i < rawRequiredAttributes.length; i++) {\n              requiredAttributes[i] = rawRequiredAttributes[i].substr(userAttributesPrefix.length);\n            }\n          }\n          return callback.newPasswordRequired(userAttributes, requiredAttributes);\n        }\n        return this.authenticateUserInternal(dataAuthenticate, authenticationHelper, callback);\n      });\n      return undefined;\n    });\n  }\n\n  /**\n  * PRIVATE ONLY: This is an internal only method and should not\n  * be directly called by the consumers.\n  * @param {object} dataAuthenticate authentication data\n  * @param {object} authenticationHelper helper created\n  * @param {callback} callback passed on from caller\n  * @returns {void}\n  */\n  authenticateUserInternal(dataAuthenticate, authenticationHelper, callback) {\n    const challengeName = dataAuthenticate.ChallengeName;\n    if (challengeName === 'SMS_MFA') {\n      this.Session = dataAuthenticate.Session;\n      return callback.mfaRequired(challengeName);\n    }\n\n    if (challengeName === 'CUSTOM_CHALLENGE') {\n      this.Session = dataAuthenticate.Session;\n      return callback.customChallenge(dataAuthenticate.ChallengeParameters);\n    }\n\n    if (challengeName === 'DEVICE_SRP_AUTH') {\n      this.getDeviceResponse(callback);\n      return undefined;\n    }\n\n    this.signInUserSession = this.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n    this.cacheTokens();\n\n    const newDeviceMetadata = dataAuthenticate.AuthenticationResult.NewDeviceMetadata;\n    if (newDeviceMetadata == null) {\n      return callback.onSuccess(this.signInUserSession);\n    }\n\n    authenticationHelper.generateHashDevice(\n      dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey,\n      dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey);\n\n    const deviceSecretVerifierConfig = {\n      Salt: sjcl.codec.base64.fromBits(sjcl.codec.hex.toBits(\n              authenticationHelper.getSaltDevices().toString(16))),\n      PasswordVerifier: sjcl.codec.base64.fromBits(sjcl.codec.hex.toBits(\n              authenticationHelper.getVerifierDevices().toString(16))),\n    };\n\n    this.verifierDevices = sjcl.codec.base64.fromBits(\n      authenticationHelper.getVerifierDevices());\n    this.deviceGroupKey = newDeviceMetadata.DeviceGroupKey;\n    this.randomPassword = authenticationHelper.getRandomPassword();\n\n    this.client.makeUnauthenticatedRequest('confirmDevice', {\n      DeviceKey: newDeviceMetadata.DeviceKey,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n      DeviceName: navigator.userAgent,\n    }, (errConfirm, dataConfirm) => {\n      if (errConfirm) {\n        return callback.onFailure(errConfirm);\n      }\n\n      this.deviceKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey;\n      this.cacheDeviceKeyAndPassword();\n      if (dataConfirm.UserConfirmationNecessary === true) {\n        return callback.onSuccess(\n          this.signInUserSession, dataConfirm.UserConfirmationNecessary);\n      }\n      return callback.onSuccess(this.signInUserSession);\n    });\n    return undefined;\n  }\n\n  /**\n  * This method is user to complete the NEW_PASSWORD_REQUIRED challenge.\n  * Pass the new password with any new user attributes to be updated.\n  * User attribute keys must be of format userAttributes.<attribute_name>.\n  * @param {string} newPassword new password for this user\n  * @param {object} requiredAttributeData map with values for all required attributes\n  * @param {object} callback Result callback map.\n  * @param {onFailure} callback.onFailure Called on any error.\n  * @param {mfaRequired} callback.mfaRequired MFA code required to continue.\n  * @param {customChallenge} callback.customChallenge Custom challenge\n  *         response required to continue.\n  * @param {authSuccess} callback.onSuccess Called on success with the new session.\n  * @returns {void}\n  */\n  completeNewPasswordChallenge(newPassword, requiredAttributeData, callback) {\n    if (!newPassword) {\n      return callback.onFailure('New password is required.');\n    }\n    const authenticationHelper = new AuthenticationHelper(\n      this.pool.getUserPoolId().split('_')[1], this.pool.getParanoia());\n    const userAttributesPrefix = authenticationHelper\n      .getNewPasswordRequiredChallengeUserAttributePrefix();\n\n    const finalUserAttributes = {};\n    if (requiredAttributeData) {\n      Object.keys(requiredAttributeData).forEach((key) => {\n        finalUserAttributes[userAttributesPrefix + key] = requiredAttributeData[key];\n      });\n    }\n\n    finalUserAttributes.NEW_PASSWORD = newPassword;\n    finalUserAttributes.USERNAME = this.username;\n    this.client.makeUnauthenticatedRequest('respondToAuthChallenge', {\n      ChallengeName: 'NEW_PASSWORD_REQUIRED',\n      ClientId: this.pool.getClientId(),\n      ChallengeResponses: finalUserAttributes,\n      Session: this.Session,\n    }, (errAuthenticate, dataAuthenticate) => {\n      if (errAuthenticate) {\n        return callback.onFailure(errAuthenticate);\n      }\n      return this.authenticateUserInternal(dataAuthenticate, authenticationHelper, callback);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to get a session using device authentication. It is called at the end of user\n   * authentication\n   *\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   * @private\n   */\n  getDeviceResponse(callback) {\n    const authenticationHelper = new AuthenticationHelper(\n      this.deviceGroupKey,\n      this.pool.getParanoia());\n    const dateHelper = new DateHelper();\n\n    const authParameters = {};\n\n    authParameters.USERNAME = this.username;\n    authParameters.DEVICE_KEY = this.deviceKey;\n    authParameters.SRP_A = authenticationHelper.getLargeAValue().toString(16);\n\n    this.client.makeUnauthenticatedRequest('respondToAuthChallenge', {\n      ChallengeName: 'DEVICE_SRP_AUTH',\n      ClientId: this.pool.getClientId(),\n      ChallengeResponses: authParameters,\n    }, (err, data) => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      const challengeParameters = data.ChallengeParameters;\n\n      const serverBValue = new BigInteger(challengeParameters.SRP_B, 16);\n      const salt = new BigInteger(challengeParameters.SALT, 16);\n\n      const hkdf = authenticationHelper.getPasswordAuthenticationKey(\n        this.deviceKey,\n        this.randomPassword,\n        serverBValue,\n        salt);\n      const secretBlockBits = sjcl.codec.base64.toBits(challengeParameters.SECRET_BLOCK);\n\n      const mac = new sjcl.misc.hmac(hkdf, sjcl.hash.sha256);\n      mac.update(sjcl.codec.utf8String.toBits(this.deviceGroupKey));\n      mac.update(sjcl.codec.utf8String.toBits(this.deviceKey));\n      mac.update(secretBlockBits);\n      const dateNow = dateHelper.getNowString();\n      mac.update(sjcl.codec.utf8String.toBits(dateNow));\n      const signature = mac.digest();\n      const signatureString = sjcl.codec.base64.fromBits(signature);\n\n      const challengeResponses = {};\n\n      challengeResponses.USERNAME = this.username;\n      challengeResponses.PASSWORD_CLAIM_SECRET_BLOCK = challengeParameters.SECRET_BLOCK;\n      challengeResponses.TIMESTAMP = dateNow;\n      challengeResponses.PASSWORD_CLAIM_SIGNATURE = signatureString;\n      challengeResponses.DEVICE_KEY = this.deviceKey;\n\n      this.client.makeUnauthenticatedRequest('respondToAuthChallenge', {\n        ChallengeName: 'DEVICE_PASSWORD_VERIFIER',\n        ClientId: this.pool.getClientId(),\n        ChallengeResponses: challengeResponses,\n        Session: data.Session,\n      }, (errAuthenticate, dataAuthenticate) => {\n        if (errAuthenticate) {\n          return callback.onFailure(errAuthenticate);\n        }\n\n        this.signInUserSession = this.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n        this.cacheTokens();\n\n        return callback.onSuccess(this.signInUserSession);\n      });\n      return undefined;\n    });\n  }\n\n  /**\n   * This is used for a certain user to confirm the registration by using a confirmation code\n   * @param {string} confirmationCode Code entered by user.\n   * @param {bool} forceAliasCreation Allow migrating from an existing email / phone number.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  confirmRegistration(confirmationCode, forceAliasCreation, callback) {\n    this.client.makeUnauthenticatedRequest('confirmSignUp', {\n      ClientId: this.pool.getClientId(),\n      ConfirmationCode: confirmationCode,\n      Username: this.username,\n      ForceAliasCreation: forceAliasCreation,\n    }, err => {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n  }\n\n  /**\n   * This is used by the user once he has the responses to a custom challenge\n   * @param {string} answerChallenge The custom challange answer.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {customChallenge} callback.customChallenge\n   *    Custom challenge response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n  sendCustomChallengeAnswer(answerChallenge, callback) {\n    const challengeResponses = {};\n    challengeResponses.USERNAME = this.username;\n    challengeResponses.ANSWER = answerChallenge;\n\n    this.client.makeUnauthenticatedRequest('respondToAuthChallenge', {\n      ChallengeName: 'CUSTOM_CHALLENGE',\n      ChallengeResponses: challengeResponses,\n      ClientId: this.pool.getClientId(),\n      Session: this.Session,\n    }, (err, data) => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      const challengeName = data.ChallengeName;\n\n      if (challengeName === 'CUSTOM_CHALLENGE') {\n        this.Session = data.Session;\n        return callback.customChallenge(data.challengeParameters);\n      }\n\n      this.signInUserSession = this.getCognitoUserSession(data.AuthenticationResult);\n      this.cacheTokens();\n      return callback.onSuccess(this.signInUserSession);\n    });\n  }\n\n  /**\n   * This is used by the user once he has an MFA code\n   * @param {string} confirmationCode The MFA code entered by the user.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n  sendMFACode(confirmationCode, callback) {\n    const challengeResponses = {};\n    challengeResponses.USERNAME = this.username;\n    challengeResponses.SMS_MFA_CODE = confirmationCode;\n\n    if (this.deviceKey != null) {\n      challengeResponses.DEVICE_KEY = this.deviceKey;\n    }\n\n    this.client.makeUnauthenticatedRequest('respondToAuthChallenge', {\n      ChallengeName: 'SMS_MFA',\n      ChallengeResponses: challengeResponses,\n      ClientId: this.pool.getClientId(),\n      Session: this.Session,\n    }, (err, dataAuthenticate) => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      this.signInUserSession = this.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n      this.cacheTokens();\n\n      if (dataAuthenticate.AuthenticationResult.NewDeviceMetadata == null) {\n        return callback.onSuccess(this.signInUserSession);\n      }\n\n      const authenticationHelper = new AuthenticationHelper(\n        this.pool.getUserPoolId().split('_')[1],\n        this.pool.getParanoia());\n      authenticationHelper.generateHashDevice(\n        dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey,\n        dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey);\n\n      const deviceSecretVerifierConfig = {\n        Salt: sjcl.codec.base64.fromBits(sjcl.codec.hex.toBits(\n          authenticationHelper.getSaltDevices().toString(16))),\n        PasswordVerifier: sjcl.codec.base64.fromBits(sjcl.codec.hex.toBits(\n          authenticationHelper.getVerifierDevices().toString(16))),\n      };\n\n      this.verifierDevices = sjcl.codec.base64.fromBits(\n        authenticationHelper.getVerifierDevices());\n      this.deviceGroupKey = dataAuthenticate.AuthenticationResult\n        .NewDeviceMetadata.DeviceGroupKey;\n      this.randomPassword = authenticationHelper.getRandomPassword();\n\n      this.client.makeUnauthenticatedRequest('confirmDevice', {\n        DeviceKey: dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey,\n        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n        DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n        DeviceName: navigator.userAgent,\n      }, (errConfirm, dataConfirm) => {\n        if (errConfirm) {\n          return callback.onFailure(errConfirm);\n        }\n\n        this.deviceKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey;\n        this.cacheDeviceKeyAndPassword();\n        if (dataConfirm.UserConfirmationNecessary === true) {\n          return callback.onSuccess(\n            this.signInUserSession,\n            dataConfirm.UserConfirmationNecessary);\n        }\n        return callback.onSuccess(this.signInUserSession);\n      });\n      return undefined;\n    });\n  }\n\n  /**\n   * This is used by an authenticated user to change the current password\n   * @param {string} oldUserPassword The current password.\n   * @param {string} newUserPassword The requested new password.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  changePassword(oldUserPassword, newUserPassword, callback) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.makeUnauthenticatedRequest('changePassword', {\n      PreviousPassword: oldUserPassword,\n      ProposedPassword: newUserPassword,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, err => {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used by an authenticated user to enable MFA for himself\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  enableMFA(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    const mfaOptions = [];\n    const mfaEnabled = {\n      DeliveryMedium: 'SMS',\n      AttributeName: 'phone_number',\n    };\n    mfaOptions.push(mfaEnabled);\n\n    this.client.makeUnauthenticatedRequest('setUserSettings', {\n      MFAOptions: mfaOptions,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, err => {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used by an authenticated user to disable MFA for himself\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  disableMFA(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    const mfaOptions = [];\n\n    this.client.makeUnauthenticatedRequest('setUserSettings', {\n      MFAOptions: mfaOptions,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, err => {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n\n\n  /**\n   * This is used by an authenticated user to delete himself\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  deleteUser(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.makeUnauthenticatedRequest('deleteUser', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, err => {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * @typedef {CognitoUserAttribute | { Name:string, Value:string }} AttributeArg\n   */\n  /**\n   * This is used by an authenticated user to change a list of attributes\n   * @param {AttributeArg[]} attributes A list of the new user attributes.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  updateAttributes(attributes, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.makeUnauthenticatedRequest('updateUserAttributes', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      UserAttributes: attributes,\n    }, err => {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used by an authenticated user to get a list of attributes\n   * @param {nodeCallback<CognitoUserAttribute[]>} callback Called on success or error.\n   * @returns {void}\n   */\n  getUserAttributes(callback) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.makeUnauthenticatedRequest('getUser', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, (err, userData) => {\n      if (err) {\n        return callback(err, null);\n      }\n\n      const attributeList = [];\n\n      for (let i = 0; i < userData.UserAttributes.length; i++) {\n        const attribute = {\n          Name: userData.UserAttributes[i].Name,\n          Value: userData.UserAttributes[i].Value,\n        };\n        const userAttribute = new CognitoUserAttribute(attribute);\n        attributeList.push(userAttribute);\n      }\n\n      return callback(null, attributeList);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used by an authenticated user to delete a list of attributes\n   * @param {string[]} attributeList Names of the attributes to delete.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  deleteAttributes(attributeList, callback) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.makeUnauthenticatedRequest('deleteUserAttributes', {\n      UserAttributeNames: attributeList,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, err => {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used by a user to resend a confirmation code\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  resendConfirmationCode(callback) {\n    this.client.makeUnauthenticatedRequest('resendConfirmationCode', {\n      ClientId: this.pool.getClientId(),\n      Username: this.username,\n    }, err => {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n  }\n\n  /**\n   * This is used to get a session, either from the session object\n   * or from  the local storage, or by using a refresh token\n   *\n   * @param {nodeCallback<CognitoUserSession>} callback Called on success or error.\n   * @returns {void}\n   */\n  getSession(callback) {\n    if (this.username == null) {\n      return callback(new Error('Username is null. Cannot retrieve a new session'), null);\n    }\n\n    if (this.signInUserSession != null && this.signInUserSession.isValid()) {\n      return callback(null, this.signInUserSession);\n    }\n\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.pool.getClientId()}.${this.username}`;\n    const idTokenKey = `${keyPrefix}.idToken`;\n    const accessTokenKey = `${keyPrefix}.accessToken`;\n    const refreshTokenKey = `${keyPrefix}.refreshToken`;\n\n    const storage = this.localStorage;\n\n    if (storage.getItem(idTokenKey)) {\n      const idToken = new CognitoIdToken({\n        IdToken: storage.getItem(idTokenKey),\n      });\n      const accessToken = new CognitoAccessToken({\n        AccessToken: storage.getItem(accessTokenKey),\n      });\n      const refreshToken = new CognitoRefreshToken({\n        RefreshToken: storage.getItem(refreshTokenKey),\n      });\n\n      const sessionData = {\n        IdToken: idToken,\n        AccessToken: accessToken,\n        RefreshToken: refreshToken,\n      };\n      const cachedSession = new CognitoUserSession(sessionData);\n      if (cachedSession.isValid()) {\n        this.signInUserSession = cachedSession;\n        return callback(null, this.signInUserSession);\n      }\n\n      if (refreshToken.getToken() == null) {\n        return callback(new Error('Cannot retrieve a new session. Please authenticate.'), null);\n      }\n\n      this.refreshSession(refreshToken, callback);\n    }\n    return undefined;\n  }\n\n\n  /**\n   * This uses the refreshToken to retrieve a new session\n   * @param {CognitoRefreshToken} refreshToken A previous session's refresh token.\n   * @param {nodeCallback<CognitoUserSession>} callback Called on success or error.\n   * @returns {void}\n   */\n  refreshSession(refreshToken, callback) {\n    const authParameters = {};\n    authParameters.REFRESH_TOKEN = refreshToken.getToken();\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.pool.getClientId()}`;\n    const lastUserKey = `${keyPrefix}.LastAuthUser`;\n    const storage = this.localStorage;\n\n    if (storage.getItem(lastUserKey)) {\n      this.username = storage.getItem(lastUserKey);\n      const deviceKeyKey = `${keyPrefix}.${this.username}.deviceKey`;\n      this.deviceKey = storage.getItem(deviceKeyKey);\n      authParameters.DEVICE_KEY = this.deviceKey;\n    }\n\n    this.client.makeUnauthenticatedRequest('initiateAuth', {\n      ClientId: this.pool.getClientId(),\n      AuthFlow: 'REFRESH_TOKEN_AUTH',\n      AuthParameters: authParameters,\n    }, (err, authResult) => {\n      if (err) {\n        return callback(err, null);\n      }\n      if (authResult) {\n        const authenticationResult = authResult.AuthenticationResult;\n        if (!Object.prototype.hasOwnProperty.call(authenticationResult, 'RefreshToken')) {\n          authenticationResult.RefreshToken = refreshToken.getToken();\n        }\n        this.signInUserSession = this.getCognitoUserSession(authenticationResult);\n        this.cacheTokens();\n        return callback(null, this.signInUserSession);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * This is used to save the session tokens to local storage\n   * @returns {void}\n   */\n  cacheTokens() {\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.pool.getClientId()}`;\n    const idTokenKey = `${keyPrefix}.${this.username}.idToken`;\n    const accessTokenKey = `${keyPrefix}.${this.username}.accessToken`;\n    const refreshTokenKey = `${keyPrefix}.${this.username}.refreshToken`;\n    const lastUserKey = `${keyPrefix}.LastAuthUser`;\n\n    const storage = this.localStorage;\n\n    storage.setItem(idTokenKey, this.signInUserSession.getIdToken().getJwtToken());\n    storage.setItem(accessTokenKey, this.signInUserSession.getAccessToken().getJwtToken());\n    storage.setItem(refreshTokenKey, this.signInUserSession.getRefreshToken().getToken());\n    storage.setItem(lastUserKey, this.username);\n  }\n\n  /**\n   * This is used to cache the device key and device group and device password\n   * @returns {void}\n   */\n  cacheDeviceKeyAndPassword() {\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.pool.getClientId()}.${this.username}`;\n    const deviceKeyKey = `${keyPrefix}.deviceKey`;\n    const randomPasswordKey = `${keyPrefix}.randomPasswordKey`;\n    const deviceGroupKeyKey = `${keyPrefix}.deviceGroupKey`;\n\n    const storage = this.localStorage;\n\n    storage.setItem(deviceKeyKey, this.deviceKey);\n    storage.setItem(randomPasswordKey, this.randomPassword);\n    storage.setItem(deviceGroupKeyKey, this.deviceGroupKey);\n  }\n\n  /**\n   * This is used to get current device key and device group and device password\n   * @returns {void}\n   */\n  getCachedDeviceKeyAndPassword() {\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.pool.getClientId()}.${this.username}`;\n    const deviceKeyKey = `${keyPrefix}.deviceKey`;\n    const randomPasswordKey = `${keyPrefix}.randomPasswordKey`;\n    const deviceGroupKeyKey = `${keyPrefix}.deviceGroupKey`;\n\n    const storage = this.localStorage;\n\n    if (storage.getItem(deviceKeyKey)) {\n      this.deviceKey = storage.getItem(deviceKeyKey);\n      this.randomPassword = storage.getItem(randomPasswordKey);\n      this.deviceGroupKey = storage.getItem(deviceGroupKeyKey);\n    }\n  }\n\n  /**\n   * This is used to clear the device key info from local storage\n   * @returns {void}\n   */\n  clearCachedDeviceKeyAndPassword() {\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.pool.getClientId()}.${this.username}`;\n    const deviceKeyKey = `${keyPrefix}.deviceKey`;\n    const randomPasswordKey = `${keyPrefix}.randomPasswordKey`;\n    const deviceGroupKeyKey = `${keyPrefix}.deviceGroupKey`;\n\n    const storage = this.localStorage;\n\n    storage.removeItem(deviceKeyKey);\n    storage.removeItem(randomPasswordKey);\n    storage.removeItem(deviceGroupKeyKey);\n  }\n\n  /**\n   * This is used to clear the session tokens from local storage\n   * @returns {void}\n   */\n  clearCachedTokens() {\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.pool.getClientId()}`;\n    const idTokenKey = `${keyPrefix}.${this.username}.idToken`;\n    const accessTokenKey = `${keyPrefix}.${this.username}.accessToken`;\n    const refreshTokenKey = `${keyPrefix}.${this.username}.refreshToken`;\n    const lastUserKey = `${keyPrefix}.LastAuthUser`;\n\n    const storage = this.localStorage;\n\n    storage.removeItem(idTokenKey);\n    storage.removeItem(accessTokenKey);\n    storage.removeItem(refreshTokenKey);\n    storage.removeItem(lastUserKey);\n  }\n\n  /**\n   * This is used to build a user session from tokens retrieved in the authentication result\n   * @param {object} authResult Successful auth response from server.\n   * @returns {CognitoUserSession} The new user session.\n   * @private\n   */\n  getCognitoUserSession(authResult) {\n    const idToken = new CognitoIdToken(authResult);\n    const accessToken = new CognitoAccessToken(authResult);\n    const refreshToken = new CognitoRefreshToken(authResult);\n\n    const sessionData = {\n      IdToken: idToken,\n      AccessToken: accessToken,\n      RefreshToken: refreshToken,\n    };\n\n    return new CognitoUserSession(sessionData);\n  }\n\n  /**\n   * This is used to initiate a forgot password request\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {inputVerificationCode?} callback.inputVerificationCode\n   *    Optional callback raised instead of onSuccess with response data.\n   * @param {onSuccess<void>?} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  forgotPassword(callback) {\n    this.client.makeUnauthenticatedRequest('forgotPassword', {\n      ClientId: this.pool.getClientId(),\n      Username: this.username,\n    }, (err, data) => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      if (typeof callback.inputVerificationCode === 'function') {\n        return callback.inputVerificationCode(data);\n      }\n      return callback.onSuccess();\n    });\n  }\n\n  /**\n   * This is used to confirm a new password using a confirmationCode\n   * @param {string} confirmationCode Code entered by user.\n   * @param {string} newPassword Confirm new password.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<void>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  confirmPassword(confirmationCode, newPassword, callback) {\n    this.client.makeUnauthenticatedRequest('confirmForgotPassword', {\n      ClientId: this.pool.getClientId(),\n      Username: this.username,\n      ConfirmationCode: confirmationCode,\n      Password: newPassword,\n    }, err => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess();\n    });\n  }\n\n  /**\n   * This is used to initiate an attribute confirmation request\n   * @param {string} attributeName User attribute that needs confirmation.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {inputVerificationCode} callback.inputVerificationCode Called on success.\n   * @returns {void}\n   */\n  getAttributeVerificationCode(attributeName, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.makeUnauthenticatedRequest('getUserAttributeVerificationCode', {\n      AttributeName: attributeName,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, (err, data) => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.inputVerificationCode(data);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to confirm an attribute using a confirmation code\n   * @param {string} attributeName Attribute being confirmed.\n   * @param {string} confirmationCode Code entered by user.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  verifyAttribute(attributeName, confirmationCode, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.makeUnauthenticatedRequest('verifyUserAttribute', {\n      AttributeName: attributeName,\n      Code: confirmationCode,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, err => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to get the device information using the current device key\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<*>} callback.onSuccess Called on success with device data.\n   * @returns {void}\n   */\n  getDevice(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.makeUnauthenticatedRequest('getDevice', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey,\n    }, (err, data) => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess(data);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to forget the current device\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  forgetDevice(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.makeUnauthenticatedRequest('forgetDevice', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey,\n    }, err => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      this.deviceKey = null;\n      this.deviceGroupkey = null;\n      this.randomPassword = null;\n      this.clearCachedDeviceKeyAndPassword();\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to set the device status as remembered\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  setDeviceStatusRemembered(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.makeUnauthenticatedRequest('updateDeviceStatus', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey,\n      DeviceRememberedStatus: 'remembered',\n    }, err => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to set the device status as not remembered\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  setDeviceStatusNotRemembered(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.makeUnauthenticatedRequest('updateDeviceStatus', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey,\n      DeviceRememberedStatus: 'not_remembered',\n    }, err => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to list all devices for a user\n   *\n   * @param {int} limit the number of devices returned in a call\n   * @param {string} paginationToken the pagination token in case any was returned before\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<*>} callback.onSuccess Called on success with device list.\n   * @returns {void}\n   */\n  listDevices(limit, paginationToken, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.makeUnauthenticatedRequest('listDevices', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      Limit: limit,\n      PaginationToken: paginationToken,\n    }, (err, data) => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess(data);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to globally revoke all tokens issued to a user\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  globalSignOut(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.makeUnauthenticatedRequest('globalSignOut', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, err => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      this.clearCachedTokens();\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used for the user to signOut of the application and clear the cached tokens.\n   * @returns {void}\n   */\n  signOut() {\n    this.signInUserSession = null;\n    this.clearCachedTokens();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/CognitoUser.js\n **/","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nexport default class CognitoUserAttribute {\n  /**\n   * Constructs a new CognitoUserAttribute object\n   * @param {string=} Name The record's name\n   * @param {string=} Value The record's value\n   */\n  constructor({ Name, Value } = {}) {\n    this.Name = Name || '';\n    this.Value = Value || '';\n  }\n\n  /**\n   * @returns {string} the record's value.\n   */\n  getValue() {\n    return this.Value;\n  }\n\n  /**\n   * Sets the record's value.\n   * @param {string} value The new value.\n   * @returns {CognitoUserAttribute} The record for method chaining.\n   */\n  setValue(value) {\n    this.Value = value;\n    return this;\n  }\n\n  /**\n   * @returns {string} the record's name.\n   */\n  getName() {\n    return this.Name;\n  }\n\n  /**\n   * Sets the record's name\n   * @param {string} name The new name.\n   * @returns {CognitoUserAttribute} The record for method chaining.\n   */\n  setName(name) {\n    this.Name = name;\n    return this;\n  }\n\n  /**\n   * @returns {string} a string representation of the record.\n   */\n  toString() {\n    return JSON.stringify(this);\n  }\n\n  /**\n   * @returns {object} a flat object representing the record.\n   */\n  toJSON() {\n    return {\n      Name: this.Name,\n      Value: this.Value,\n    };\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/CognitoUserAttribute.js\n **/","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nexport default class CognitoUserSession {\n  /**\n   * Constructs a new CognitoUserSession object\n   * @param {string} IdToken The session's Id token.\n   * @param {string=} RefreshToken The session's refresh token.\n   * @param {string} AccessToken The session's access token.\n   */\n  constructor({ IdToken, RefreshToken, AccessToken } = {}) {\n    if (AccessToken == null || IdToken == null) {\n      throw new Error('Id token and Access Token must be present.');\n    }\n\n    this.idToken = IdToken;\n    this.refreshToken = RefreshToken;\n    this.accessToken = AccessToken;\n  }\n\n  /**\n   * @returns {CognitoIdToken} the session's Id token\n   */\n  getIdToken() {\n    return this.idToken;\n  }\n\n  /**\n   * @returns {CognitoRefreshToken} the session's refresh token\n   */\n  getRefreshToken() {\n    return this.refreshToken;\n  }\n\n  /**\n   * @returns {CognitoAccessToken} the session's access token\n   */\n  getAccessToken() {\n    return this.accessToken;\n  }\n\n  /**\n   * Checks to see if the session is still valid based on session expiry information found\n   * in tokens and the current time\n   * @returns {boolean} if the session is still valid\n   */\n  isValid() {\n    const now = Math.floor(new Date() / 1000);\n\n    return now < this.accessToken.getExpiration() && now < this.idToken.getExpiration();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/CognitoUserSession.js\n **/","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst monthNames =\n  ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nconst weekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n/** @class */\nexport default class DateHelper {\n  /**\n   * @returns {string} The current time in \"ddd MMM D HH:mm:ss UTC YYYY\" format.\n   */\n  getNowString() {\n    const now = new Date();\n\n    const weekDay = weekNames[now.getUTCDay()];\n    const month = monthNames[now.getUTCMonth()];\n    const day = now.getUTCDate();\n\n    let hours = now.getUTCHours();\n    if (hours < 10) {\n      hours = `0${hours}`;\n    }\n\n    let minutes = now.getUTCMinutes();\n    if (minutes < 10) {\n      minutes = `0${minutes}`;\n    }\n\n    let seconds = now.getUTCSeconds();\n    if (seconds < 10) {\n      seconds = `0${seconds}`;\n    }\n\n    const year = now.getUTCFullYear();\n\n    // ddd MMM D HH:mm:ss UTC YYYY\n    const dateNow = `${weekDay} ${month} ${day} ${hours}:${minutes}:${seconds} UTC ${year}`;\n\n    return dateNow;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/DateHelper.js\n **/","// Generated by CoffeeScript 1.10.0\n(function() {\n  var JSONStorage, KEY_FOR_EMPTY_STRING, LocalStorage, MetaKey, QUOTA_EXCEEDED_ERR, StorageEvent, _emptyDirectory, _escapeKey, _rm, createMap, events, fs, path, writeSync,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  path = require('path');\n\n  fs = require('fs');\n\n  events = require('events');\n\n  writeSync = require('write-file-atomic').sync;\n\n  KEY_FOR_EMPTY_STRING = '---.EMPTY_STRING.---';\n\n  _emptyDirectory = function(target) {\n    var i, len, p, ref, results;\n    ref = fs.readdirSync(target);\n    results = [];\n    for (i = 0, len = ref.length; i < len; i++) {\n      p = ref[i];\n      results.push(_rm(path.join(target, p)));\n    }\n    return results;\n  };\n\n  _rm = function(target) {\n    if (fs.statSync(target).isDirectory()) {\n      _emptyDirectory(target);\n      return fs.rmdirSync(target);\n    } else {\n      return fs.unlinkSync(target);\n    }\n  };\n\n  _escapeKey = function(key) {\n    var newKey;\n    if (key === '') {\n      newKey = KEY_FOR_EMPTY_STRING;\n    } else {\n      newKey = key.toString();\n    }\n    return newKey;\n  };\n\n  QUOTA_EXCEEDED_ERR = (function(superClass) {\n    extend(QUOTA_EXCEEDED_ERR, superClass);\n\n    function QUOTA_EXCEEDED_ERR(message) {\n      this.message = message != null ? message : 'Unknown error.';\n      if (Error.captureStackTrace != null) {\n        Error.captureStackTrace(this, this.constructor);\n      }\n      this.name = this.constructor.name;\n    }\n\n    QUOTA_EXCEEDED_ERR.prototype.toString = function() {\n      return this.name + \": \" + this.message;\n    };\n\n    return QUOTA_EXCEEDED_ERR;\n\n  })(Error);\n\n  StorageEvent = (function() {\n    function StorageEvent(key1, oldValue1, newValue1, url, storageArea) {\n      this.key = key1;\n      this.oldValue = oldValue1;\n      this.newValue = newValue1;\n      this.url = url;\n      this.storageArea = storageArea != null ? storageArea : 'localStorage';\n    }\n\n    return StorageEvent;\n\n  })();\n\n  MetaKey = (function() {\n    function MetaKey(key1, index1) {\n      this.key = key1;\n      this.index = index1;\n      if (!(this instanceof MetaKey)) {\n        return new MetaKey(this.key, this.index);\n      }\n    }\n\n    return MetaKey;\n\n  })();\n\n  createMap = function() {\n    var Map;\n    Map = function() {};\n    Map.prototype = Object.create(null);\n    return new Map();\n  };\n\n  LocalStorage = (function(superClass) {\n    var instanceMap;\n\n    extend(LocalStorage, superClass);\n\n    instanceMap = {};\n\n    function LocalStorage(_location, quota) {\n      this._location = _location;\n      this.quota = quota != null ? quota : 5 * 1024 * 1024;\n      if (!(this instanceof LocalStorage)) {\n        return new LocalStorage(this._location, this.quota);\n      }\n      this._location = path.resolve(this._location);\n      if (instanceMap[this._location] != null) {\n        return instanceMap[this._location];\n      }\n      this.length = 0;\n      this._bytesInUse = 0;\n      this._keys = [];\n      this._metaKeyMap = createMap();\n      this._eventUrl = \"pid:\" + process.pid;\n      this._init();\n      this._QUOTA_EXCEEDED_ERR = QUOTA_EXCEEDED_ERR;\n      instanceMap[this._location] = this;\n      return instanceMap[this._location];\n    }\n\n    LocalStorage.prototype._init = function() {\n      var _MetaKey, _decodedKey, _keys, error, i, index, k, len, stat;\n      try {\n        stat = fs.statSync(this._location);\n        if ((stat != null) && !stat.isDirectory()) {\n          throw new Error(\"A file exists at the location '\" + this._location + \"' when trying to create/open localStorage\");\n        }\n        this._bytesInUse = 0;\n        this.length = 0;\n        _keys = fs.readdirSync(this._location);\n        for (index = i = 0, len = _keys.length; i < len; index = ++i) {\n          k = _keys[index];\n          _decodedKey = decodeURIComponent(k);\n          this._keys.push(_decodedKey);\n          _MetaKey = new MetaKey(k, index);\n          this._metaKeyMap[_decodedKey] = _MetaKey;\n          stat = this._getStat(k);\n          if ((stat != null ? stat.size : void 0) != null) {\n            _MetaKey.size = stat.size;\n            this._bytesInUse += stat.size;\n          }\n        }\n        this.length = _keys.length;\n      } catch (error) {\n        fs.mkdirSync(this._location);\n      }\n    };\n\n    LocalStorage.prototype.setItem = function(key, value) {\n      var encodedKey, evnt, existsBeforeSet, filename, hasListeners, metaKey, oldLength, oldValue, valueString, valueStringLength;\n      hasListeners = events.EventEmitter.listenerCount(this, 'storage');\n      oldValue = null;\n      if (hasListeners) {\n        oldValue = this.getItem(key);\n      }\n      key = _escapeKey(key);\n      encodedKey = encodeURIComponent(key);\n      filename = path.join(this._location, encodedKey);\n      valueString = value.toString();\n      valueStringLength = valueString.length;\n      metaKey = this._metaKeyMap[key];\n      existsBeforeSet = !!metaKey;\n      if (existsBeforeSet) {\n        oldLength = metaKey.size;\n      } else {\n        oldLength = 0;\n      }\n      if (this._bytesInUse - oldLength + valueStringLength > this.quota) {\n        throw new QUOTA_EXCEEDED_ERR();\n      }\n      writeSync(filename, valueString, 'utf8');\n      if (!existsBeforeSet) {\n        metaKey = new MetaKey(encodedKey, (this._keys.push(key)) - 1);\n        metaKey.size = valueStringLength;\n        this._metaKeyMap[key] = metaKey;\n        this.length += 1;\n        this._bytesInUse += valueStringLength;\n      }\n      if (hasListeners) {\n        evnt = new StorageEvent(key, oldValue, value, this._eventUrl);\n        return this.emit('storage', evnt);\n      }\n    };\n\n    LocalStorage.prototype.getItem = function(key) {\n      var filename, metaKey;\n      key = _escapeKey(key);\n      metaKey = this._metaKeyMap[key];\n      if (!!metaKey) {\n        filename = path.join(this._location, metaKey.key);\n        return fs.readFileSync(filename, 'utf8');\n      } else {\n        return null;\n      }\n    };\n\n    LocalStorage.prototype._getStat = function(key) {\n      var error, filename;\n      key = _escapeKey(key);\n      filename = path.join(this._location, encodeURIComponent(key));\n      try {\n        return fs.statSync(filename);\n      } catch (error) {\n        return null;\n      }\n    };\n\n    LocalStorage.prototype.removeItem = function(key) {\n      var evnt, filename, hasListeners, k, meta, metaKey, oldValue, ref, v;\n      key = _escapeKey(key);\n      metaKey = this._metaKeyMap[key];\n      if (!!metaKey) {\n        hasListeners = events.EventEmitter.listenerCount(this, 'storage');\n        oldValue = null;\n        if (hasListeners) {\n          oldValue = this.getItem(key);\n        }\n        delete this._metaKeyMap[key];\n        this.length -= 1;\n        this._bytesInUse -= metaKey.size;\n        filename = path.join(this._location, metaKey.key);\n        this._keys.splice(metaKey.index, 1);\n        ref = this._metaKeyMap;\n        for (k in ref) {\n          v = ref[k];\n          meta = this._metaKeyMap[k];\n          if (meta.index > metaKey.index) {\n            meta.index -= 1;\n          }\n        }\n        _rm(filename);\n        if (hasListeners) {\n          evnt = new StorageEvent(key, oldValue, null, this._eventUrl);\n          return this.emit('storage', evnt);\n        }\n      }\n    };\n\n    LocalStorage.prototype.key = function(n) {\n      return this._keys[n];\n    };\n\n    LocalStorage.prototype.clear = function() {\n      var evnt;\n      _emptyDirectory(this._location);\n      this._metaKeyMap = createMap();\n      this._keys = [];\n      this.length = 0;\n      this._bytesInUse = 0;\n      if (events.EventEmitter.listenerCount(this, 'storage')) {\n        evnt = new StorageEvent(null, null, null, this._eventUrl);\n        return this.emit('storage', evnt);\n      }\n    };\n\n    LocalStorage.prototype._getBytesInUse = function() {\n      return this._bytesInUse;\n    };\n\n    LocalStorage.prototype._deleteLocation = function() {\n      delete instanceMap[this._location];\n      _rm(this._location);\n      this._metaKeyMap = {};\n      this._keys = [];\n      this.length = 0;\n      return this._bytesInUse = 0;\n    };\n\n    return LocalStorage;\n\n  })(events.EventEmitter);\n\n  JSONStorage = (function(superClass) {\n    extend(JSONStorage, superClass);\n\n    function JSONStorage() {\n      return JSONStorage.__super__.constructor.apply(this, arguments);\n    }\n\n    JSONStorage.prototype.setItem = function(key, value) {\n      var newValue;\n      newValue = JSON.stringify(value);\n      return JSONStorage.__super__.setItem.call(this, key, newValue);\n    };\n\n    JSONStorage.prototype.getItem = function(key) {\n      return JSON.parse(JSONStorage.__super__.getItem.call(this, key));\n    };\n\n    return JSONStorage;\n\n  })(LocalStorage);\n\n  exports.LocalStorage = LocalStorage;\n\n  exports.JSONStorage = JSONStorage;\n\n  exports.QUOTA_EXCEEDED_ERR = QUOTA_EXCEEDED_ERR;\n\n}).call(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/node-localstorage/LocalStorage.js\n ** module id = 11\n ** module chunks = 0\n **/","'use strict'\n\nvar fs = require('fs')\n\nmodule.exports = clone(fs)\n\nfunction clone (obj) {\n  if (obj === null || typeof obj !== 'object')\n    return obj\n\n  if (obj instanceof Object)\n    var copy = { __proto__: obj.__proto__ }\n  else\n    var copy = Object.create(null)\n\n  Object.getOwnPropertyNames(obj).forEach(function (key) {\n    Object.defineProperty(copy, key, Object.getOwnPropertyDescriptor(obj, key))\n  })\n\n  return copy\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/node-localstorage/~/write-file-atomic/~/graceful-fs/fs.js\n ** module id = 12\n ** module chunks = 0\n **/","module.exports = bindActor\nfunction bindActor () {\n  var args = \n        Array.prototype.slice.call\n        (arguments) // jswtf.\n    , obj = null\n    , fn\n  if (typeof args[0] === \"object\") {\n    obj = args.shift()\n    fn = args.shift()\n    if (typeof fn === \"string\")\n      fn = obj[ fn ]\n  } else fn = args.shift()\n  return function (cb) {\n    fn.apply(obj, args.concat(cb)) }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/node-localstorage/~/write-file-atomic/~/slide/lib/bind-actor.js\n ** module id = 13\n ** module chunks = 0\n **/","module.exports = require(\"util\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"util\"\n ** module id = 14\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_15__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":[\"AWSCognito\",\"CognitoIdentityServiceProvider\"],\"commonjs2\":\"aws-sdk/clients/cognitoidentityserviceprovider\",\"commonjs\":\"aws-sdk/clients/cognitoidentityserviceprovider\",\"amd\":\"aws-sdk/clients/cognitoidentityserviceprovider\"}\n ** module id = 15\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_16__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":[],\"commonjs2\":\"jsbn\",\"commonjs\":\"jsbn\",\"amd\":\"jsbn\"}\n ** module id = 16\n ** module chunks = 0\n **/","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nexport default class AuthenticationDetails {\n  /**\n   * Constructs a new AuthenticationDetails object\n   * @param {object=} data Creation options.\n   * @param {string} data.Username User being authenticated.\n   * @param {string} data.Password Plain-text password to authenticate with.\n   * @param {(AttributeArg[])?} data.ValidationData Application extra metadata.\n   */\n  constructor(data) {\n    const { ValidationData, Username, Password } = data || {};\n    this.validationData = ValidationData || [];\n    this.username = Username;\n    this.password = Password;\n  }\n\n  /**\n   * @returns {string} the record's username\n   */\n  getUsername() {\n    return this.username;\n  }\n\n  /**\n   * @returns {string} the record's password\n   */\n  getPassword() {\n    return this.password;\n  }\n\n  /**\n   * @returns {Array} the record's validationData\n   */\n  getValidationData() {\n    return this.validationData;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/AuthenticationDetails.js\n **/","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LocalStorage } from 'node-localstorage';\n\nimport CognitoIdentityServiceProvider from 'aws-sdk/clients/cognitoidentityserviceprovider';\n\nimport CognitoUser from './CognitoUser';\n\n/** @class */\nexport default class CognitoUserPool {\n  /**\n   * Constructs a new CognitoUserPool object\n   * @param {object} data Creation options.\n   * @param {string} data.UserPoolId Cognito user pool id.\n   * @param {string} data.ClientId User pool application client id.\n   * @param {int=} data.Paranoia Random number generation paranoia level.\n   */\n  constructor(data) {\n    const { UserPoolId, ClientId, Paranoia } = data || {};\n    if (!UserPoolId || !ClientId) {\n      throw new Error('Both UserPoolId and ClientId are required.');\n    }\n    if (!/^[\\w-]+_.+$/.test(UserPoolId)) {\n      throw new Error('Invalid UserPoolId format.');\n    }\n    const region = UserPoolId.split('_')[0];\n\n    this.userPoolId = UserPoolId;\n    this.clientId = ClientId;\n    this.paranoia = Paranoia || 0;\n\n    this.client = new CognitoIdentityServiceProvider({ apiVersion: '2016-04-19', region });\n    this.localStorage = new LocalStorage('./.scratch');\n  }\n\n  /**\n   * @returns {string} the user pool id\n   */\n  getUserPoolId() {\n    return this.userPoolId;\n  }\n\n  /**\n   * @returns {string} the client id\n   */\n  getClientId() {\n    return this.clientId;\n  }\n\n  /**\n   * @returns {int} the paranoia level\n   */\n  getParanoia() {\n    return this.paranoia;\n  }\n\n  /**\n   * sets paranoia level\n   * @param {int} paranoia The new paranoia level.\n   * @returns {void}\n   */\n  setParanoia(paranoia) {\n    this.paranoia = paranoia;\n  }\n\n  /**\n   * @typedef {object} SignUpResult\n   * @property {CognitoUser} user New user.\n   * @property {bool} userConfirmed If the user is already confirmed.\n   */\n  /**\n   * method for signing up a user\n   * @param {string} username User's username.\n   * @param {string} password Plain-text initial password entered by user.\n   * @param {(AttributeArg[])=} userAttributes New user attributes.\n   * @param {(AttributeArg[])=} validationData Application metadata.\n   * @param {nodeCallback<SignUpResult>} callback Called on error or with the new user.\n   * @returns {void}\n   */\n  signUp(username, password, userAttributes, validationData, callback) {\n    this.client.makeUnauthenticatedRequest('signUp', {\n      ClientId: this.clientId,\n      Username: username,\n      Password: password,\n      UserAttributes: userAttributes,\n      ValidationData: validationData,\n    }, (err, data) => {\n      if (err) {\n        return callback(err, null);\n      }\n\n      const cognitoUser = {\n        Username: username,\n        Pool: this,\n      };\n\n      const returnData = {\n        user: new CognitoUser(cognitoUser),\n        userConfirmed: data.UserConfirmed,\n      };\n\n      return callback(null, returnData);\n    });\n  }\n\n\n  /**\n   * method for getting the current user of the application from the local storage\n   *\n   * @returns {CognitoUser} the user retrieved from storage\n   */\n  getCurrentUser() {\n    const lastUserKey = `CognitoIdentityServiceProvider.${this.clientId}.LastAuthUser`;\n    const storage = localStorage;\n\n    const lastAuthUser = storage.getItem(lastUserKey);\n    if (lastAuthUser) {\n      const cognitoUser = {\n        Username: lastAuthUser,\n        Pool: this,\n      };\n\n      return new CognitoUser(cognitoUser);\n    }\n\n    return null;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/CognitoUserPool.js\n **/","'use strict'\nvar fs = require('graceful-fs')\nvar chain = require('slide').chain\nvar MurmurHash3 = require('imurmurhash')\nvar extend = Object.assign || require('util')._extend\n\nfunction murmurhex () {\n  var hash = new MurmurHash3()\n  for (var ii = 0; ii < arguments.length; ++ii) hash.hash('' + arguments[ii])\n  return hash.result()\n}\nvar invocations = 0\nvar getTmpname = function (filename) {\n  return filename + '.' + murmurhex(__filename, process.pid, ++invocations)\n}\n\nmodule.exports = function writeFile (filename, data, options, callback) {\n  if (options instanceof Function) {\n    callback = options\n    options = null\n  }\n  if (!options) options = {}\n  var tmpfile = getTmpname(filename)\n\n  if (options.mode && options.chmod) {\n    return thenWriteFile()\n  } else {\n    // Either mode or chown is not explicitly set\n    // Default behavior is to copy it from original file\n    return fs.stat(filename, function (err, stats) {\n      options = extend({}, options)\n      if (!err && stats && !options.mode) {\n        options.mode = stats.mode\n      }\n      if (!err && stats && !options.chown && process.getuid) {\n        options.chown = { uid: stats.uid, gid: stats.gid }\n      }\n      return thenWriteFile()\n    })\n  }\n\n  function thenWriteFile () {\n    chain([\n      [fs, fs.writeFile, tmpfile, data, options.encoding || 'utf8'],\n      options.mode && [fs, fs.chmod, tmpfile, options.mode],\n      options.chown && [fs, fs.chown, tmpfile, options.chown.uid, options.chown.gid],\n      [fs, fs.rename, tmpfile, filename]\n    ], function (err) {\n      err ? fs.unlink(tmpfile, function () { callback(err) })\n        : callback()\n    })\n  }\n}\n\nmodule.exports.sync = function writeFileSync (filename, data, options) {\n  if (!options) options = {}\n  var tmpfile = getTmpname(filename)\n\n  try {\n    if (!options.mode || !options.chmod) {\n      // Either mode or chown is not explicitly set\n      // Default behavior is to copy it from original file\n      try {\n        var stats = fs.statSync(filename)\n\n        options = extend({}, options)\n        if (!options.mode) {\n          options.mode = stats.mode\n        }\n        if (!options.chown && process.getuid) {\n          options.chown = { uid: stats.uid, gid: stats.gid }\n        }\n      } catch (ex) {\n        // ignore stat errors\n      }\n    }\n\n    fs.writeFileSync(tmpfile, data, options.encoding || 'utf8')\n    if (options.chown) fs.chownSync(tmpfile, options.chown.uid, options.chown.gid)\n    if (options.mode) fs.chmodSync(tmpfile, options.mode)\n    fs.renameSync(tmpfile, filename)\n  } catch (err) {\n    try { fs.unlinkSync(tmpfile) } catch (e) {}\n    throw err\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/node-localstorage/~/write-file-atomic/index.js\n ** module id = 20\n ** module chunks = 0\n **/","var fs = require('fs')\nvar polyfills = require('./polyfills.js')\nvar legacy = require('./legacy-streams.js')\nvar queue = []\n\nvar util = require('util')\n\nfunction noop () {}\n\nvar debug = noop\nif (util.debuglog)\n  debug = util.debuglog('gfs4')\nelse if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || ''))\n  debug = function() {\n    var m = util.format.apply(util, arguments)\n    m = 'GFS4: ' + m.split(/\\n/).join('\\nGFS4: ')\n    console.error(m)\n  }\n\nif (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || '')) {\n  process.on('exit', function() {\n    debug(queue)\n    require('assert').equal(queue.length, 0)\n  })\n}\n\nmodule.exports = patch(require('./fs.js'))\nif (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH) {\n  module.exports = patch(fs)\n}\n\n// Always patch fs.close/closeSync, because we want to\n// retry() whenever a close happens *anywhere* in the program.\n// This is essential when multiple graceful-fs instances are\n// in play at the same time.\nmodule.exports.close =\nfs.close = (function (fs$close) { return function (fd, cb) {\n  return fs$close.call(fs, fd, function (err) {\n    if (!err)\n      retry()\n\n    if (typeof cb === 'function')\n      cb.apply(this, arguments)\n  })\n}})(fs.close)\n\nmodule.exports.closeSync =\nfs.closeSync = (function (fs$closeSync) { return function (fd) {\n  // Note that graceful-fs also retries when fs.closeSync() fails.\n  // Looks like a bug to me, although it's probably a harmless one.\n  var rval = fs$closeSync.apply(fs, arguments)\n  retry()\n  return rval\n}})(fs.closeSync)\n\nfunction patch (fs) {\n  // Everything that references the open() function needs to be in here\n  polyfills(fs)\n  fs.gracefulify = patch\n  fs.FileReadStream = ReadStream;  // Legacy name.\n  fs.FileWriteStream = WriteStream;  // Legacy name.\n  fs.createReadStream = createReadStream\n  fs.createWriteStream = createWriteStream\n  var fs$readFile = fs.readFile\n  fs.readFile = readFile\n  function readFile (path, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$readFile(path, options, cb)\n\n    function go$readFile (path, options, cb) {\n      return fs$readFile(path, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$readFile, [path, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$writeFile = fs.writeFile\n  fs.writeFile = writeFile\n  function writeFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$writeFile(path, data, options, cb)\n\n    function go$writeFile (path, data, options, cb) {\n      return fs$writeFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$writeFile, [path, data, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$appendFile = fs.appendFile\n  if (fs$appendFile)\n    fs.appendFile = appendFile\n  function appendFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$appendFile(path, data, options, cb)\n\n    function go$appendFile (path, data, options, cb) {\n      return fs$appendFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$appendFile, [path, data, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$readdir = fs.readdir\n  fs.readdir = readdir\n  function readdir (path, options, cb) {\n    var args = [path]\n    if (typeof options !== 'function') {\n      args.push(options)\n    } else {\n      cb = options\n    }\n    args.push(go$readdir$cb)\n\n    return go$readdir(args)\n\n    function go$readdir$cb (err, files) {\n      if (files && files.sort)\n        files.sort()\n\n      if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n        enqueue([go$readdir, [args]])\n      else {\n        if (typeof cb === 'function')\n          cb.apply(this, arguments)\n        retry()\n      }\n    }\n  }\n\n  function go$readdir (args) {\n    return fs$readdir.apply(fs, args)\n  }\n\n  if (process.version.substr(0, 4) === 'v0.8') {\n    var legStreams = legacy(fs)\n    ReadStream = legStreams.ReadStream\n    WriteStream = legStreams.WriteStream\n  }\n\n  var fs$ReadStream = fs.ReadStream\n  ReadStream.prototype = Object.create(fs$ReadStream.prototype)\n  ReadStream.prototype.open = ReadStream$open\n\n  var fs$WriteStream = fs.WriteStream\n  WriteStream.prototype = Object.create(fs$WriteStream.prototype)\n  WriteStream.prototype.open = WriteStream$open\n\n  fs.ReadStream = ReadStream\n  fs.WriteStream = WriteStream\n\n  function ReadStream (path, options) {\n    if (this instanceof ReadStream)\n      return fs$ReadStream.apply(this, arguments), this\n    else\n      return ReadStream.apply(Object.create(ReadStream.prototype), arguments)\n  }\n\n  function ReadStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        if (that.autoClose)\n          that.destroy()\n\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n        that.read()\n      }\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (this instanceof WriteStream)\n      return fs$WriteStream.apply(this, arguments), this\n    else\n      return WriteStream.apply(Object.create(WriteStream.prototype), arguments)\n  }\n\n  function WriteStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        that.destroy()\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n      }\n    })\n  }\n\n  function createReadStream (path, options) {\n    return new ReadStream(path, options)\n  }\n\n  function createWriteStream (path, options) {\n    return new WriteStream(path, options)\n  }\n\n  var fs$open = fs.open\n  fs.open = open\n  function open (path, flags, mode, cb) {\n    if (typeof mode === 'function')\n      cb = mode, mode = null\n\n    return go$open(path, flags, mode, cb)\n\n    function go$open (path, flags, mode, cb) {\n      return fs$open(path, flags, mode, function (err, fd) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$open, [path, flags, mode, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  return fs\n}\n\nfunction enqueue (elem) {\n  debug('ENQUEUE', elem[0].name, elem[1])\n  queue.push(elem)\n}\n\nfunction retry () {\n  var elem = queue.shift()\n  if (elem) {\n    debug('RETRY', elem[0].name, elem[1])\n    elem[0].apply(null, elem[1])\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/node-localstorage/~/write-file-atomic/~/graceful-fs/graceful-fs.js\n ** module id = 21\n ** module chunks = 0\n **/","var Stream = require('stream').Stream\n\nmodule.exports = legacy\n\nfunction legacy (fs) {\n  return {\n    ReadStream: ReadStream,\n    WriteStream: WriteStream\n  }\n\n  function ReadStream (path, options) {\n    if (!(this instanceof ReadStream)) return new ReadStream(path, options);\n\n    Stream.call(this);\n\n    var self = this;\n\n    this.path = path;\n    this.fd = null;\n    this.readable = true;\n    this.paused = false;\n\n    this.flags = 'r';\n    this.mode = 438; /*=0666*/\n    this.bufferSize = 64 * 1024;\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.encoding) this.setEncoding(this.encoding);\n\n    if (this.start !== undefined) {\n      if ('number' !== typeof this.start) {\n        throw TypeError('start must be a Number');\n      }\n      if (this.end === undefined) {\n        this.end = Infinity;\n      } else if ('number' !== typeof this.end) {\n        throw TypeError('end must be a Number');\n      }\n\n      if (this.start > this.end) {\n        throw new Error('start must be <= end');\n      }\n\n      this.pos = this.start;\n    }\n\n    if (this.fd !== null) {\n      process.nextTick(function() {\n        self._read();\n      });\n      return;\n    }\n\n    fs.open(this.path, this.flags, this.mode, function (err, fd) {\n      if (err) {\n        self.emit('error', err);\n        self.readable = false;\n        return;\n      }\n\n      self.fd = fd;\n      self.emit('open', fd);\n      self._read();\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (!(this instanceof WriteStream)) return new WriteStream(path, options);\n\n    Stream.call(this);\n\n    this.path = path;\n    this.fd = null;\n    this.writable = true;\n\n    this.flags = 'w';\n    this.encoding = 'binary';\n    this.mode = 438; /*=0666*/\n    this.bytesWritten = 0;\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.start !== undefined) {\n      if ('number' !== typeof this.start) {\n        throw TypeError('start must be a Number');\n      }\n      if (this.start < 0) {\n        throw new Error('start must be >= zero');\n      }\n\n      this.pos = this.start;\n    }\n\n    this.busy = false;\n    this._queue = [];\n\n    if (this.fd === null) {\n      this._open = fs.open;\n      this._queue.push([this._open, this.path, this.flags, this.mode, undefined]);\n      this.flush();\n    }\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/node-localstorage/~/write-file-atomic/~/graceful-fs/legacy-streams.js\n ** module id = 22\n ** module chunks = 0\n **/","var fs = require('./fs.js')\nvar constants = require('constants')\n\nvar origCwd = process.cwd\nvar cwd = null\nprocess.cwd = function() {\n  if (!cwd)\n    cwd = origCwd.call(process)\n  return cwd\n}\ntry {\n  process.cwd()\n} catch (er) {}\n\nvar chdir = process.chdir\nprocess.chdir = function(d) {\n  cwd = null\n  chdir.call(process, d)\n}\n\nmodule.exports = patch\n\nfunction patch (fs) {\n  // (re-)implement some things that are known busted or missing.\n\n  // lchmod, broken prior to 0.6.2\n  // back-port the fix here.\n  if (constants.hasOwnProperty('O_SYMLINK') &&\n      process.version.match(/^v0\\.6\\.[0-2]|^v0\\.5\\./)) {\n    patchLchmod(fs)\n  }\n\n  // lutimes implementation, or no-op\n  if (!fs.lutimes) {\n    patchLutimes(fs)\n  }\n\n  // https://github.com/isaacs/node-graceful-fs/issues/4\n  // Chown should not fail on einval or eperm if non-root.\n  // It should not fail on enosys ever, as this just indicates\n  // that a fs doesn't support the intended operation.\n\n  fs.chown = chownFix(fs.chown)\n  fs.fchown = chownFix(fs.fchown)\n  fs.lchown = chownFix(fs.lchown)\n\n  fs.chmod = chmodFix(fs.chmod)\n  fs.fchmod = chmodFix(fs.fchmod)\n  fs.lchmod = chmodFix(fs.lchmod)\n\n  fs.chownSync = chownFixSync(fs.chownSync)\n  fs.fchownSync = chownFixSync(fs.fchownSync)\n  fs.lchownSync = chownFixSync(fs.lchownSync)\n\n  fs.chmodSync = chmodFixSync(fs.chmodSync)\n  fs.fchmodSync = chmodFixSync(fs.fchmodSync)\n  fs.lchmodSync = chmodFixSync(fs.lchmodSync)\n\n  fs.stat = statFix(fs.stat)\n  fs.fstat = statFix(fs.fstat)\n  fs.lstat = statFix(fs.lstat)\n\n  fs.statSync = statFixSync(fs.statSync)\n  fs.fstatSync = statFixSync(fs.fstatSync)\n  fs.lstatSync = statFixSync(fs.lstatSync)\n\n  // if lchmod/lchown do not exist, then make them no-ops\n  if (!fs.lchmod) {\n    fs.lchmod = function (path, mode, cb) {\n      if (cb) process.nextTick(cb)\n    }\n    fs.lchmodSync = function () {}\n  }\n  if (!fs.lchown) {\n    fs.lchown = function (path, uid, gid, cb) {\n      if (cb) process.nextTick(cb)\n    }\n    fs.lchownSync = function () {}\n  }\n\n  // on Windows, A/V software can lock the directory, causing this\n  // to fail with an EACCES or EPERM if the directory contains newly\n  // created files.  Try again on failure, for up to 1 second.\n  if (process.platform === \"win32\") {\n    fs.rename = (function (fs$rename) { return function (from, to, cb) {\n      var start = Date.now()\n      fs$rename(from, to, function CB (er) {\n        if (er\n            && (er.code === \"EACCES\" || er.code === \"EPERM\")\n            && Date.now() - start < 1000) {\n          return fs$rename(from, to, CB)\n        }\n        if (cb) cb(er)\n      })\n    }})(fs.rename)\n  }\n\n  // if read() returns EAGAIN, then just try it again.\n  fs.read = (function (fs$read) { return function (fd, buffer, offset, length, position, callback_) {\n    var callback\n    if (callback_ && typeof callback_ === 'function') {\n      var eagCounter = 0\n      callback = function (er, _, __) {\n        if (er && er.code === 'EAGAIN' && eagCounter < 10) {\n          eagCounter ++\n          return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n        }\n        callback_.apply(this, arguments)\n      }\n    }\n    return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n  }})(fs.read)\n\n  fs.readSync = (function (fs$readSync) { return function (fd, buffer, offset, length, position) {\n    var eagCounter = 0\n    while (true) {\n      try {\n        return fs$readSync.call(fs, fd, buffer, offset, length, position)\n      } catch (er) {\n        if (er.code === 'EAGAIN' && eagCounter < 10) {\n          eagCounter ++\n          continue\n        }\n        throw er\n      }\n    }\n  }})(fs.readSync)\n}\n\nfunction patchLchmod (fs) {\n  fs.lchmod = function (path, mode, callback) {\n    fs.open( path\n           , constants.O_WRONLY | constants.O_SYMLINK\n           , mode\n           , function (err, fd) {\n      if (err) {\n        if (callback) callback(err)\n        return\n      }\n      // prefer to return the chmod error, if one occurs,\n      // but still try to close, and report closing errors if they occur.\n      fs.fchmod(fd, mode, function (err) {\n        fs.close(fd, function(err2) {\n          if (callback) callback(err || err2)\n        })\n      })\n    })\n  }\n\n  fs.lchmodSync = function (path, mode) {\n    var fd = fs.openSync(path, constants.O_WRONLY | constants.O_SYMLINK, mode)\n\n    // prefer to return the chmod error, if one occurs,\n    // but still try to close, and report closing errors if they occur.\n    var threw = true\n    var ret\n    try {\n      ret = fs.fchmodSync(fd, mode)\n      threw = false\n    } finally {\n      if (threw) {\n        try {\n          fs.closeSync(fd)\n        } catch (er) {}\n      } else {\n        fs.closeSync(fd)\n      }\n    }\n    return ret\n  }\n}\n\nfunction patchLutimes (fs) {\n  if (constants.hasOwnProperty(\"O_SYMLINK\")) {\n    fs.lutimes = function (path, at, mt, cb) {\n      fs.open(path, constants.O_SYMLINK, function (er, fd) {\n        if (er) {\n          if (cb) cb(er)\n          return\n        }\n        fs.futimes(fd, at, mt, function (er) {\n          fs.close(fd, function (er2) {\n            if (cb) cb(er || er2)\n          })\n        })\n      })\n    }\n\n    fs.lutimesSync = function (path, at, mt) {\n      var fd = fs.openSync(path, constants.O_SYMLINK)\n      var ret\n      var threw = true\n      try {\n        ret = fs.futimesSync(fd, at, mt)\n        threw = false\n      } finally {\n        if (threw) {\n          try {\n            fs.closeSync(fd)\n          } catch (er) {}\n        } else {\n          fs.closeSync(fd)\n        }\n      }\n      return ret\n    }\n\n  } else {\n    fs.lutimes = function (_a, _b, _c, cb) { if (cb) process.nextTick(cb) }\n    fs.lutimesSync = function () {}\n  }\n}\n\nfunction chmodFix (orig) {\n  if (!orig) return orig\n  return function (target, mode, cb) {\n    return orig.call(fs, target, mode, function (er) {\n      if (chownErOk(er)) er = null\n      if (cb) cb.apply(this, arguments)\n    })\n  }\n}\n\nfunction chmodFixSync (orig) {\n  if (!orig) return orig\n  return function (target, mode) {\n    try {\n      return orig.call(fs, target, mode)\n    } catch (er) {\n      if (!chownErOk(er)) throw er\n    }\n  }\n}\n\n\nfunction chownFix (orig) {\n  if (!orig) return orig\n  return function (target, uid, gid, cb) {\n    return orig.call(fs, target, uid, gid, function (er) {\n      if (chownErOk(er)) er = null\n      if (cb) cb.apply(this, arguments)\n    })\n  }\n}\n\nfunction chownFixSync (orig) {\n  if (!orig) return orig\n  return function (target, uid, gid) {\n    try {\n      return orig.call(fs, target, uid, gid)\n    } catch (er) {\n      if (!chownErOk(er)) throw er\n    }\n  }\n}\n\n\nfunction statFix (orig) {\n  if (!orig) return orig\n  // Older versions of Node erroneously returned signed integers for\n  // uid + gid.\n  return function (target, cb) {\n    return orig.call(fs, target, function (er, stats) {\n      if (!stats) return cb.apply(this, arguments)\n      if (stats.uid < 0) stats.uid += 0x100000000\n      if (stats.gid < 0) stats.gid += 0x100000000\n      if (cb) cb.apply(this, arguments)\n    })\n  }\n}\n\nfunction statFixSync (orig) {\n  if (!orig) return orig\n  // Older versions of Node erroneously returned signed integers for\n  // uid + gid.\n  return function (target) {\n    var stats = orig.call(fs, target)\n    if (stats.uid < 0) stats.uid += 0x100000000\n    if (stats.gid < 0) stats.gid += 0x100000000\n    return stats;\n  }\n}\n\n// ENOSYS means that the fs doesn't support the op. Just ignore\n// that, because it doesn't matter.\n//\n// if there's no getuid, or if getuid() is something other\n// than 0, and the error is EINVAL or EPERM, then just ignore\n// it.\n//\n// This specific case is a silent failure in cp, install, tar,\n// and most other unix tools that manage permissions.\n//\n// When running as root, or if other types of errors are\n// encountered, then it's strict.\nfunction chownErOk (er) {\n  if (!er)\n    return true\n\n  if (er.code === \"ENOSYS\")\n    return true\n\n  var nonroot = !process.getuid || process.getuid() !== 0\n  if (nonroot) {\n    if (er.code === \"EINVAL\" || er.code === \"EPERM\")\n      return true\n  }\n\n  return false\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/node-localstorage/~/write-file-atomic/~/graceful-fs/polyfills.js\n ** module id = 23\n ** module chunks = 0\n **/","/**\n * @preserve\n * JS Implementation of incremental MurmurHash3 (r150) (as of May 10, 2013)\n *\n * @author <a href=\"mailto:jensyt@gmail.com\">Jens Taylor</a>\n * @see http://github.com/homebrewing/brauhaus-diff\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n */\n(function(){\n    var cache;\n\n    // Call this function without `new` to use the cached object (good for\n    // single-threaded environments), or with `new` to create a new object.\n    //\n    // @param {string} key A UTF-16 or ASCII string\n    // @param {number} seed An optional positive integer\n    // @return {object} A MurmurHash3 object for incremental hashing\n    function MurmurHash3(key, seed) {\n        var m = this instanceof MurmurHash3 ? this : cache;\n        m.reset(seed)\n        if (typeof key === 'string' && key.length > 0) {\n            m.hash(key);\n        }\n\n        if (m !== this) {\n            return m;\n        }\n    };\n\n    // Incrementally add a string to this hash\n    //\n    // @param {string} key A UTF-16 or ASCII string\n    // @return {object} this\n    MurmurHash3.prototype.hash = function(key) {\n        var h1, k1, i, top, len;\n\n        len = key.length;\n        this.len += len;\n\n        k1 = this.k1;\n        i = 0;\n        switch (this.rem) {\n            case 0: k1 ^= len > i ? (key.charCodeAt(i++) & 0xffff) : 0;\n            case 1: k1 ^= len > i ? (key.charCodeAt(i++) & 0xffff) << 8 : 0;\n            case 2: k1 ^= len > i ? (key.charCodeAt(i++) & 0xffff) << 16 : 0;\n            case 3:\n                k1 ^= len > i ? (key.charCodeAt(i) & 0xff) << 24 : 0;\n                k1 ^= len > i ? (key.charCodeAt(i++) & 0xff00) >> 8 : 0;\n        }\n\n        this.rem = (len + this.rem) & 3; // & 3 is same as % 4\n        len -= this.rem;\n        if (len > 0) {\n            h1 = this.h1;\n            while (1) {\n                k1 = (k1 * 0x2d51 + (k1 & 0xffff) * 0xcc9e0000) & 0xffffffff;\n                k1 = (k1 << 15) | (k1 >>> 17);\n                k1 = (k1 * 0x3593 + (k1 & 0xffff) * 0x1b870000) & 0xffffffff;\n\n                h1 ^= k1;\n                h1 = (h1 << 13) | (h1 >>> 19);\n                h1 = (h1 * 5 + 0xe6546b64) & 0xffffffff;\n\n                if (i >= len) {\n                    break;\n                }\n\n                k1 = ((key.charCodeAt(i++) & 0xffff)) ^\n                     ((key.charCodeAt(i++) & 0xffff) << 8) ^\n                     ((key.charCodeAt(i++) & 0xffff) << 16);\n                top = key.charCodeAt(i++);\n                k1 ^= ((top & 0xff) << 24) ^\n                      ((top & 0xff00) >> 8);\n            }\n\n            k1 = 0;\n            switch (this.rem) {\n                case 3: k1 ^= (key.charCodeAt(i + 2) & 0xffff) << 16;\n                case 2: k1 ^= (key.charCodeAt(i + 1) & 0xffff) << 8;\n                case 1: k1 ^= (key.charCodeAt(i) & 0xffff);\n            }\n\n            this.h1 = h1;\n        }\n\n        this.k1 = k1;\n        return this;\n    };\n\n    // Get the result of this hash\n    //\n    // @return {number} The 32-bit hash\n    MurmurHash3.prototype.result = function() {\n        var k1, h1;\n        \n        k1 = this.k1;\n        h1 = this.h1;\n\n        if (k1 > 0) {\n            k1 = (k1 * 0x2d51 + (k1 & 0xffff) * 0xcc9e0000) & 0xffffffff;\n            k1 = (k1 << 15) | (k1 >>> 17);\n            k1 = (k1 * 0x3593 + (k1 & 0xffff) * 0x1b870000) & 0xffffffff;\n            h1 ^= k1;\n        }\n\n        h1 ^= this.len;\n\n        h1 ^= h1 >>> 16;\n        h1 = (h1 * 0xca6b + (h1 & 0xffff) * 0x85eb0000) & 0xffffffff;\n        h1 ^= h1 >>> 13;\n        h1 = (h1 * 0xae35 + (h1 & 0xffff) * 0xc2b20000) & 0xffffffff;\n        h1 ^= h1 >>> 16;\n\n        return h1 >>> 0;\n    };\n\n    // Reset the hash object for reuse\n    //\n    // @param {number} seed An optional positive integer\n    MurmurHash3.prototype.reset = function(seed) {\n        this.h1 = typeof seed === 'number' ? seed : 0;\n        this.rem = this.k1 = this.len = 0;\n        return this;\n    };\n\n    // A cached object to use. This can be safely used if you're in a single-\n    // threaded environment, otherwise you need to create new hashes to use.\n    cache = new MurmurHash3();\n\n    if (typeof(module) != 'undefined') {\n        module.exports = MurmurHash3;\n    } else {\n        this.MurmurHash3 = MurmurHash3;\n    }\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/node-localstorage/~/write-file-atomic/~/imurmurhash/imurmurhash.js\n ** module id = 24\n ** module chunks = 0\n **/","\n/*\nusage:\n\n// do something to a list of things\nasyncMap(myListOfStuff, function (thing, cb) { doSomething(thing.foo, cb) }, cb)\n// do more than one thing to each item\nasyncMap(list, fooFn, barFn, cb)\n\n*/\n\nmodule.exports = asyncMap\n\nfunction asyncMap () {\n  var steps = Array.prototype.slice.call(arguments)\n    , list = steps.shift() || []\n    , cb_ = steps.pop()\n  if (typeof cb_ !== \"function\") throw new Error(\n    \"No callback provided to asyncMap\")\n  if (!list) return cb_(null, [])\n  if (!Array.isArray(list)) list = [list]\n  var n = steps.length\n    , data = [] // 2d array\n    , errState = null\n    , l = list.length\n    , a = l * n\n  if (!a) return cb_(null, [])\n  function cb (er) {\n    if (er && !errState) errState = er\n\n    var argLen = arguments.length\n    for (var i = 1; i < argLen; i ++) if (arguments[i] !== undefined) {\n      data[i - 1] = (data[i - 1] || []).concat(arguments[i])\n    }\n    // see if any new things have been added.\n    if (list.length > l) {\n      var newList = list.slice(l)\n      a += (list.length - l) * n\n      l = list.length\n      process.nextTick(function () {\n        newList.forEach(function (ar) {\n          steps.forEach(function (fn) { fn(ar, cb) })\n        })\n      })\n    }\n\n    if (--a === 0) cb_.apply(null, [errState].concat(data))\n  }\n  // expect the supplied cb function to be called\n  // \"n\" times for each thing in the array.\n  list.forEach(function (ar) {\n    steps.forEach(function (fn) { fn(ar, cb) })\n  })\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/node-localstorage/~/write-file-atomic/~/slide/lib/async-map.js\n ** module id = 25\n ** module chunks = 0\n **/","module.exports = chain\nvar bindActor = require(\"./bind-actor.js\")\nchain.first = {} ; chain.last = {}\nfunction chain (things, cb) {\n  var res = []\n  ;(function LOOP (i, len) {\n    if (i >= len) return cb(null,res)\n    if (Array.isArray(things[i]))\n      things[i] = bindActor.apply(null,\n        things[i].map(function(i){\n          return (i===chain.first) ? res[0]\n           : (i===chain.last)\n             ? res[res.length - 1] : i }))\n    if (!things[i]) return LOOP(i + 1, len)\n    things[i](function (er, data) {\n      if (er) return cb(er, res)\n      if (data !== undefined) res = res.concat(data)\n      LOOP(i + 1, len)\n    })\n  })(0, things.length) }\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/node-localstorage/~/write-file-atomic/~/slide/lib/chain.js\n ** module id = 26\n ** module chunks = 0\n **/","exports.asyncMap = require(\"./async-map\")\nexports.bindActor = require(\"./bind-actor\")\nexports.chain = require(\"./chain\")\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/node-localstorage/~/write-file-atomic/~/slide/lib/slide.js\n ** module id = 27\n ** module chunks = 0\n **/","module.exports = require(\"assert\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"assert\"\n ** module id = 28\n ** module chunks = 0\n **/","module.exports = require(\"constants\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"constants\"\n ** module id = 29\n ** module chunks = 0\n **/","module.exports = require(\"events\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"events\"\n ** module id = 30\n ** module chunks = 0\n **/","module.exports = require(\"path\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"path\"\n ** module id = 31\n ** module chunks = 0\n **/","module.exports = require(\"stream\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"stream\"\n ** module id = 32\n ** module chunks = 0\n **/"],"sourceRoot":""}